ARM GAS  /tmp/ccemzfcO.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_mat_inverse_f32.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c"
  20              		.section	.text.arm_mat_inverse_f32,"ax",%progbits
  21              		.align	1
  22              		.global	arm_mat_inverse_f32
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_mat_inverse_f32:
  28              	.LVL0:
  29              	.LFB135:
   1:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Title:        arm_mat_inverse_f32.c
   4:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Description:  Floating-point matrix inverse
   5:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
   6:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * $Date:        27. January 2017
   7:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * $Revision:    V.1.5.1
   8:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
   9:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Target Processor: Cortex-M cores
  10:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** /*
  12:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  14:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  16:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  20:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  22:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  */
  28:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  29:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #include "arm_math.h"
ARM GAS  /tmp/ccemzfcO.s 			page 2


  30:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  31:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** /**
  32:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @ingroup groupMatrix
  33:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  */
  34:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  35:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** /**
  36:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @defgroup MatrixInv Matrix Inverse
  37:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  38:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Computes the inverse of a matrix.
  39:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  40:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * The inverse is defined only if the input matrix is square and non-singular (the determinant
  41:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * is non-zero). The function checks that the input and output matrices are square and of the
  42:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * same size.
  43:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  44:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * Matrix inversion is numerically sensitive and the CMSIS DSP library only supports matrix
  45:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * inversion of floating-point matrices.
  46:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  *
  47:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * \par Algorithm
  48:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * The Gauss-Jordan method is used to find the inverse.
  49:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * The algorithm performs a sequence of elementary row-operations until it
  50:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * reduces the input matrix to an identity matrix. Applying the same sequence
  51:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * of elementary row-operations to an identity matrix yields the inverse matrix.
  52:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * If the input matrix is singular, then the algorithm terminates and returns error status
  53:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * <code>ARM_MATH_SINGULAR</code>.
  54:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * \image html MatrixInverse.gif "Matrix Inverse of a 3 x 3 matrix using Gauss-Jordan Method"
  55:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  */
  56:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  57:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** /**
  58:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @addtogroup MatrixInv
  59:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @{
  60:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  */
  61:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  62:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** /**
  63:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @brief Floating-point matrix inverse.
  64:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @param[in]       *pSrc points to input matrix structure
  65:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @param[out]      *pDst points to output matrix structure
  66:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * @return     		The function returns
  67:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> if the input matrix is not square or if the size
  68:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * of the output matrix does not match the size of the input matrix.
  69:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * If the input matrix is found to be singular (non-invertible), then the function returns
  70:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  * <code>ARM_MATH_SINGULAR</code>.  Otherwise, the function returns <code>ARM_MATH_SUCCESS</code>.
  71:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****  */
  72:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  73:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** arm_status arm_mat_inverse_f32(
  74:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   const arm_matrix_instance_f32 * pSrc,
  75:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   arm_matrix_instance_f32 * pDst)
  76:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** {
  30              		.loc 1 76 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 76 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
ARM GAS  /tmp/ccemzfcO.s 			page 3


  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 83B0     		sub	sp, sp, #12
  47              		.cfi_def_cfa_offset 48
  77:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t *pIn = pSrc->pData;                  /* input data matrix pointer */
  48              		.loc 1 77 3 is_stmt 1 view .LVU2
  49              		.loc 1 77 14 is_stmt 0 view .LVU3
  50 0006 D0F804A0 		ldr	r10, [r0, #4]
  51              	.LVL1:
  78:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer */
  52              		.loc 1 78 3 is_stmt 1 view .LVU4
  53              		.loc 1 78 14 is_stmt 0 view .LVU5
  54 000a D1F804B0 		ldr	fp, [r1, #4]
  55              	.LVL2:
  79:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t *pInT1, *pInT2;                      /* Temporary input data matrix pointer */
  56              		.loc 1 79 3 is_stmt 1 view .LVU6
  80:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t *pOutT1, *pOutT2;                    /* Temporary output data matrix pointer */
  57              		.loc 1 80 3 view .LVU7
  81:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t *pPivotRowIn, *pPRT_in, *pPivotRowDst, *pPRT_pDst;  /* Temporary input and output data 
  58              		.loc 1 81 3 view .LVU8
  82:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   uint32_t numRows = pSrc->numRows;              /* Number of rows in the matrix  */
  59              		.loc 1 82 3 view .LVU9
  60              		.loc 1 82 26 is_stmt 0 view .LVU10
  61 000e B0F800E0 		ldrh	lr, [r0]
  62              	.LVL3:
  83:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   uint32_t numCols = pSrc->numCols;              /* Number of Cols in the matrix  */
  63              		.loc 1 83 3 is_stmt 1 view .LVU11
  64              		.loc 1 83 26 is_stmt 0 view .LVU12
  65 0012 B0F802C0 		ldrh	ip, [r0, #2]
  66              	.LVL4:
  84:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  85:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #if defined (ARM_MATH_DSP)
  86:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t maxC;                                /* maximum value in the column */
  67              		.loc 1 86 3 is_stmt 1 view .LVU13
  87:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  88:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  89:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  90:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t Xchg, in = 0.0f, in1;                /* Temporary input values  */
  68              		.loc 1 90 3 view .LVU14
  91:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   uint32_t i, rowCnt, flag = 0U, j, loopCnt, k, l;      /* loop counters */
  69              		.loc 1 91 3 view .LVU15
  92:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   arm_status status;                             /* status of matrix inverse */
  70              		.loc 1 92 3 view .LVU16
  93:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  94:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
  95:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  96:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  97:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   /* Check for matrix mismatch condition */
  98:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   if ((pSrc->numRows != pSrc->numCols) || (pDst->numRows != pDst->numCols)
  99:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****      || (pSrc->numRows != pDst->numRows))
 100:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   {
 101:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 102:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
ARM GAS  /tmp/ccemzfcO.s 			page 4


 103:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   }
 104:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   else
 105:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
 106:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 107:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   {
 108:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 109:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /*---------------------------------------------------------------------------------------------
 110:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 * Matrix Inverse can be solved using elementary row operations.
 111:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 112:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	Gauss-Jordan Method:
 113:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 114:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	   1. First combine the identity matrix and the input matrix separated by a bar to form an
 115:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *        augmented matrix as follows:
 116:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *				        _ 	      	       _         _	       _
 117:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *					   |  a11  a12 | 1   0  |       |  X11 X12  |
 118:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *					   |           |        |   =   |           |
 119:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *					   |_ a21  a22 | 0   1 _|       |_ X21 X21 _|
 120:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 121:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		2. In our implementation, pDst Matrix is used as identity matrix.
 122:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 123:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		3. Begin with the first row. Let i = 1.
 124:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 125:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    4. Check to see if the pivot for column i is the greatest of the column.
 126:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   The pivot is the element of the main diagonal that is on the current row.
 127:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   For instance, if working with row i, then the pivot element is aii.
 128:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   If the pivot is not the most significant of the columns, exchange that row with a row
 129:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   below it that does contain the most significant value in column i. If the most
 130:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *         significant value of the column is zero, then an inverse to that matrix does not exist.
 131:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   The most significant value of the column is the absolute maximum.
 132:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 133:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    5. Divide every element of row i by the pivot.
 134:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 135:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    6. For every row below and  row i, replace that row with the sum of that row and
 136:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   a multiple of row i so that each new element in column i below row i is zero.
 137:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 138:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    7. Move to the next row and column and repeat steps 2 through 5 until you have zeros
 139:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   for every element below and above the main diagonal.
 140:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 141:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		8. Now an identical matrix is formed to the left of the bar(input matrix, pSrc).
 142:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   Therefore, the matrix to the right of the bar is our solution(pDst matrix, pDst).
 143:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *------------------------------------------------------------------------------------------------
 144:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 145:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Working pointer for destination matrix */
 146:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     pOutT1 = pOut;
  71              		.loc 1 146 5 view .LVU17
 147:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 148:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Loop over the number of rows */
 149:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     rowCnt = numRows;
  72              		.loc 1 149 5 view .LVU18
 150:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 151:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Making the destination matrix as identity matrix */
 152:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     while (rowCnt > 0U)
  73              		.loc 1 152 5 view .LVU19
 149:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
  74              		.loc 1 149 12 is_stmt 0 view .LVU20
  75 0016 7546     		mov	r5, lr
 146:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
ARM GAS  /tmp/ccemzfcO.s 			page 5


  76              		.loc 1 146 12 view .LVU21
  77 0018 5B46     		mov	r3, fp
  78              		.loc 1 152 11 view .LVU22
  79 001a 12E0     		b	.L2
  80              	.LVL5:
  81              	.L4:
 153:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     {
 154:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Writing all zeroes in lower triangle of the destination matrix */
 155:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       j = numRows - rowCnt;
 156:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 157:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 158:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pOutT1++ = 0.0f;
  82              		.loc 1 158 9 is_stmt 1 view .LVU23
  83              		.loc 1 158 19 is_stmt 0 view .LVU24
  84 001c 0021     		movs	r1, #0
  85 001e 43F8041B 		str	r1, [r3], #4	@ float
  86              	.LVL6:
 159:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         j--;
  87              		.loc 1 159 9 is_stmt 1 view .LVU25
  88              		.loc 1 159 10 is_stmt 0 view .LVU26
  89 0022 013A     		subs	r2, r2, #1
  90              	.LVL7:
  91              	.L3:
 156:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
  92              		.loc 1 156 16 is_stmt 1 view .LVU27
  93 0024 002A     		cmp	r2, #0
  94 0026 F9D1     		bne	.L4
 160:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 161:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 162:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Writing all ones in the diagonal of the destination matrix */
 163:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       *pOutT1++ = 1.0f;
  95              		.loc 1 163 7 view .LVU28
  96              	.LVL8:
  97              		.loc 1 163 17 is_stmt 0 view .LVU29
  98 0028 4FF07E52 		mov	r2, #1065353216
  99              	.LVL9:
 100              		.loc 1 163 17 view .LVU30
 101 002c 43F8042B 		str	r2, [r3], #4	@ float
 102              	.LVL10:
 164:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 165:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Writing all zeroes in upper triangle of the destination matrix */
 166:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       j = rowCnt - 1U;
 103              		.loc 1 166 7 is_stmt 1 view .LVU31
 104              		.loc 1 166 9 is_stmt 0 view .LVU32
 105 0030 013D     		subs	r5, r5, #1
 106              	.LVL11:
 167:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 107              		.loc 1 167 7 is_stmt 1 view .LVU33
 166:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 108              		.loc 1 166 9 is_stmt 0 view .LVU34
 109 0032 2A46     		mov	r2, r5
 110              		.loc 1 167 13 view .LVU35
 111 0034 03E0     		b	.L5
 112              	.LVL12:
 113              	.L6:
 168:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 169:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pOutT1++ = 0.0f;
ARM GAS  /tmp/ccemzfcO.s 			page 6


 114              		.loc 1 169 9 is_stmt 1 view .LVU36
 115              		.loc 1 169 19 is_stmt 0 view .LVU37
 116 0036 0021     		movs	r1, #0
 117 0038 43F8041B 		str	r1, [r3], #4	@ float
 118              	.LVL13:
 170:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         j--;
 119              		.loc 1 170 9 is_stmt 1 view .LVU38
 120              		.loc 1 170 10 is_stmt 0 view .LVU39
 121 003c 013A     		subs	r2, r2, #1
 122              	.LVL14:
 123              	.L5:
 167:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 124              		.loc 1 167 16 is_stmt 1 view .LVU40
 125 003e 002A     		cmp	r2, #0
 126 0040 F9D1     		bne	.L6
 127              	.LVL15:
 128              	.L2:
 152:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     {
 129              		.loc 1 152 19 view .LVU41
 130 0042 15B1     		cbz	r5, .L45
 155:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 131              		.loc 1 155 7 view .LVU42
 155:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 132              		.loc 1 155 9 is_stmt 0 view .LVU43
 133 0044 AEEB0502 		sub	r2, lr, r5
 134              	.LVL16:
 156:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 135              		.loc 1 156 7 is_stmt 1 view .LVU44
 156:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 136              		.loc 1 156 13 is_stmt 0 view .LVU45
 137 0048 ECE7     		b	.L3
 138              	.LVL17:
 139              	.L45:
 171:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 172:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 173:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Decrement the loop counter */
 174:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       rowCnt--;
 175:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     }
 176:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 177:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Loop over the number of columns of the input matrix.
 178:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        All the elements in each column are processed by the row operations */
 179:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     loopCnt = numCols;
 140              		.loc 1 179 13 view .LVU46
 141 004a E146     		mov	r9, ip
  90:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   uint32_t i, rowCnt, flag = 0U, j, loopCnt, k, l;      /* loop counters */
 142              		.loc 1 90 19 view .LVU47
 143 004c DFED686A 		vldr.32	s13, .L53
 144 0050 D846     		mov	r8, fp
 145 0052 0190     		str	r0, [sp, #4]
 146 0054 93E0     		b	.L8
 147              	.LVL18:
 148              	.L43:
 180:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 181:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Index modifier to navigate through the columns */
 182:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     l = 0U;
 183:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 184:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     while (loopCnt > 0U)
ARM GAS  /tmp/ccemzfcO.s 			page 7


 185:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     {
 186:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Check if the pivot element is zero..
 187:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * If it is zero then interchange the row with non zero row below.
 188:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * If there is no non zero element to replace in the rows below,
 189:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * then the matrix is Singular. */
 190:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 191:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Working pointer for the input matrix that points
 192:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * to the pivot element of the particular row  */
 193:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT1 = pIn + (l * numCols);
 194:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 195:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Working pointer for the destination matrix that points
 196:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * to the pivot element of the particular row  */
 197:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pOutT1 = pOut + (l * numCols);
 198:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 199:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Temporary variable to hold the pivot value */
 200:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       in = *pInT1;
 201:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 202:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Grab the most significant value from column l */
 203:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       maxC = 0;
 204:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       for (i = l; i < numRows; i++)
 205:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         maxC = *pInT1 > 0 ? (*pInT1 > maxC ? *pInT1 : maxC) : (-*pInT1 > maxC ? -*pInT1 : maxC);
 149              		.loc 1 206 64 discriminator 2 view .LVU48
 150 0056 F1EE677A 		vneg.f32	s15, s15
 151              		.loc 1 206 89 discriminator 2 view .LVU49
 152 005a F4EEC77A 		vcmpe.f32	s15, s14
 153 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 154 0062 13DC     		bgt	.L36
 155              	.LVL19:
 156              	.L12:
 207:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 157              		.loc 1 207 9 is_stmt 1 view .LVU50
 158              		.loc 1 207 15 is_stmt 0 view .LVU51
 159 0064 02EB8C02 		add	r2, r2, ip, lsl #2
 160              	.LVL20:
 204:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 161              		.loc 1 204 33 is_stmt 1 discriminator 2 view .LVU52
 162 0068 0133     		adds	r3, r3, #1
 163              	.LVL21:
 164              	.L9:
 204:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 165              		.loc 1 204 21 discriminator 1 view .LVU53
 166 006a 7345     		cmp	r3, lr
 167 006c 11D2     		bcs	.L46
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 168              		.loc 1 206 9 view .LVU54
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 169              		.loc 1 206 16 is_stmt 0 view .LVU55
 170 006e D2ED007A 		vldr.32	s15, [r2]
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 171              		.loc 1 206 61 view .LVU56
 172 0072 F5EEC07A 		vcmpe.f32	s15, #0
 173 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 174 007a ECDD     		ble	.L43
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 175              		.loc 1 206 53 discriminator 1 view .LVU57
 176 007c F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  /tmp/ccemzfcO.s 			page 8


 177 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 178 0084 EEDD     		ble	.L12
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 179              		.loc 1 206 53 discriminator 3 view .LVU58
 180 0086 B0EE677A 		vmov.f32	s14, s15
 181              	.LVL22:
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 182              		.loc 1 206 53 discriminator 3 view .LVU59
 183 008a EBE7     		b	.L12
 184              	.LVL23:
 185              	.L36:
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 186              		.loc 1 206 89 discriminator 8 view .LVU60
 187 008c B0EE677A 		vmov.f32	s14, s15
 188              	.LVL24:
 206:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 += numCols;
 189              		.loc 1 206 89 discriminator 8 view .LVU61
 190 0090 E8E7     		b	.L12
 191              	.LVL25:
 192              	.L46:
 208:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 209:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 210:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Update the status if the matrix is singular */
 211:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       if (maxC == 0.0f)
 193              		.loc 1 211 7 is_stmt 1 view .LVU62
 194              		.loc 1 211 10 is_stmt 0 view .LVU63
 195 0092 B5EE407A 		vcmp.f32	s14, #0
 196 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 197 009a 00F09B80 		beq	.L37
 212:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 213:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         return ARM_MATH_SINGULAR;
 214:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 215:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 216:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Restore pInT1  */
 217:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT1 = pIn;
 198              		.loc 1 217 7 is_stmt 1 view .LVU64
 199              	.LVL26:
 218:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 219:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Destination pointer modifier */
 220:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       k = 1U;
 200              		.loc 1 220 7 view .LVU65
 221:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 222:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Check if the pivot element is the most significant of the column */
 223:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       if ( (in > 0.0f ? in : -in) != maxC)
 201              		.loc 1 223 7 view .LVU66
 202              		.loc 1 223 28 is_stmt 0 view .LVU67
 203 009e F5EEC06A 		vcmpe.f32	s13, #0
 204 00a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 205 00a6 13DD     		ble	.L47
 206              		.loc 1 223 28 discriminator 1 view .LVU68
 207 00a8 F0EE667A 		vmov.f32	s15, s13
 208              	.L15:
 209              		.loc 1 223 10 discriminator 4 view .LVU69
 210 00ac B4EE677A 		vcmp.f32	s14, s15
 211 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 212 00b4 0FD1     		bne	.L48
 213              	.LVL27:
ARM GAS  /tmp/ccemzfcO.s 			page 9


 214              	.L16:
 224:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 225:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Loop over the number rows present below */
 226:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         i = numRows - (l + 1U);
 227:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 228:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         while (i > 0U)
 229:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 230:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Update the input and destination pointers */
 231:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pInT2 = pInT1 + (numCols * l);
 232:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pOutT2 = pOutT1 + (numCols * k);
 233:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 234:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Look for the most significant element to
 235:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****            * replace in the rows below */
 236:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           if ((*pInT2 > 0.0f ? *pInT2: -*pInT2) == maxC)
 237:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 238:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Loop over number of columns
 239:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              * to the right of the pilot element */
 240:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             j = numCols - l;
 241:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 242:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             while (j > 0U)
 243:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             {
 244:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               /* Exchange the row elements of the input matrix */
 245:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               Xchg = *pInT2;
 246:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pInT2++ = *pInT1;
 247:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pInT1++ = Xchg;
 248:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 249:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               /* Decrement the loop counter */
 250:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               j--;
 251:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             }
 252:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 253:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Loop over number of columns of the destination matrix */
 254:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             j = numCols;
 255:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 256:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             while (j > 0U)
 257:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             {
 258:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               /* Exchange the row elements of the destination matrix */
 259:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               Xchg = *pOutT2;
 260:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pOutT2++ = *pOutT1;
 261:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pOutT1++ = Xchg;
 262:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 263:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               /* Decrement the loop counter */
 264:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               j--;
 265:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             }
 266:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 267:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Flag to indicate whether exchange is done or not */
 268:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             flag = 1U;
 269:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 270:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Break after exchange is done */
 271:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             break;
 272:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           }
 273:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 274:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Update the destination pointer modifier */
 275:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           k++;
 276:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 277:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Decrement the loop counter */
 278:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           i--;
 279:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
ARM GAS  /tmp/ccemzfcO.s 			page 10


 280:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 281:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 282:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Update the status if the matrix is singular */
 283:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       if ((flag != 1U) && (in == 0.0f))
 215              		.loc 1 283 7 is_stmt 1 view .LVU70
 216              		.loc 1 283 24 is_stmt 0 discriminator 1 view .LVU71
 217 00b6 F5EE406A 		vcmp.f32	s13, #0
 218 00ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 219 00be 00F08E80 		beq	.L39
 284:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 285:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         return ARM_MATH_SINGULAR;
 286:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 287:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 288:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Points to the pivot row of input and destination matrices */
 289:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pPivotRowIn = pIn + (l * numCols);
 220              		.loc 1 289 7 is_stmt 1 view .LVU72
 221              	.LVL28:
 290:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pPivotRowDst = pOut + (l * numCols);
 222              		.loc 1 290 7 view .LVU73
 291:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 292:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Temporary pointers to the pivot row pointers */
 293:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT1 = pPivotRowIn;
 223              		.loc 1 293 7 view .LVU74
 294:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT2 = pPivotRowDst;
 224              		.loc 1 294 7 view .LVU75
 295:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 296:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Pivot element of the row */
 297:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       in = *pPivotRowIn;
 225              		.loc 1 297 7 view .LVU76
 226              		.loc 1 297 10 is_stmt 0 view .LVU77
 227 00c2 009B     		ldr	r3, [sp]
 228              	.LVL29:
 229              		.loc 1 297 10 view .LVU78
 230 00c4 D3ED006A 		vldr.32	s13, [r3]
 231              	.LVL30:
 298:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 299:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Loop over number of columns
 300:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * to the right of the pilot element */
 301:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       j = (numCols - l);
 232              		.loc 1 301 7 is_stmt 1 view .LVU79
 233              		.loc 1 301 9 is_stmt 0 view .LVU80
 234 00c8 ACEB0506 		sub	r6, ip, r5
 235              	.LVL31:
 302:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 303:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 236              		.loc 1 303 7 is_stmt 1 view .LVU81
 301:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 237              		.loc 1 301 9 is_stmt 0 view .LVU82
 238 00cc 3246     		mov	r2, r6
 239              		.loc 1 303 13 view .LVU83
 240 00ce 11E0     		b	.L19
 241              	.LVL32:
 242              	.L47:
 223:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 243              		.loc 1 223 28 discriminator 2 view .LVU84
 244 00d0 F1EE667A 		vneg.f32	s15, s13
 245 00d4 EAE7     		b	.L15
ARM GAS  /tmp/ccemzfcO.s 			page 11


 246              	.L48:
 226:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 247              		.loc 1 226 9 is_stmt 1 view .LVU85
 226:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 248              		.loc 1 226 21 is_stmt 0 view .LVU86
 249 00d6 AEEB0503 		sub	r3, lr, r5
 250              	.LVL33:
 226:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 251              		.loc 1 226 11 view .LVU87
 252 00da 013B     		subs	r3, r3, #1
 253              	.LVL34:
 228:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 254              		.loc 1 228 9 is_stmt 1 view .LVU88
 228:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 255              		.loc 1 228 15 is_stmt 0 view .LVU89
 256 00dc 00E0     		b	.L17
 257              	.LVL35:
 258              	.L18:
 231:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pOutT2 = pOutT1 + (numCols * k);
 259              		.loc 1 231 11 is_stmt 1 view .LVU90
 232:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 260              		.loc 1 232 11 view .LVU91
 236:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 261              		.loc 1 236 11 view .LVU92
 275:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 262              		.loc 1 275 11 view .LVU93
 278:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
 263              		.loc 1 278 11 view .LVU94
 278:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
 264              		.loc 1 278 12 is_stmt 0 view .LVU95
 265 00de 013B     		subs	r3, r3, #1
 266              	.LVL36:
 267              	.L17:
 228:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 268              		.loc 1 228 18 is_stmt 1 view .LVU96
 269 00e0 002B     		cmp	r3, #0
 270 00e2 FCD1     		bne	.L18
 228:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 271              		.loc 1 228 18 is_stmt 0 view .LVU97
 272 00e4 E7E7     		b	.L16
 273              	.LVL37:
 274              	.L20:
 304:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 305:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Divide each element of the row of the input matrix
 306:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****          * by the pivot element */
 307:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         in1 = *pInT1;
 275              		.loc 1 307 9 is_stmt 1 view .LVU98
 276              		.loc 1 307 13 is_stmt 0 view .LVU99
 277 00e6 93ED007A 		vldr.32	s14, [r3]
 278              	.LVL38:
 308:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pInT1++ = in1 / in;
 279              		.loc 1 308 9 is_stmt 1 view .LVU100
 280              		.loc 1 308 24 is_stmt 0 view .LVU101
 281 00ea C7EE267A 		vdiv.f32	s15, s14, s13
 282              		.loc 1 308 18 view .LVU102
 283 00ee E3EC017A 		vstmia.32	r3!, {s15}
 284              	.LVL39:
ARM GAS  /tmp/ccemzfcO.s 			page 12


 309:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 310:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Decrement the loop counter */
 311:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         j--;
 285              		.loc 1 311 9 is_stmt 1 view .LVU103
 286              		.loc 1 311 10 is_stmt 0 view .LVU104
 287 00f2 013A     		subs	r2, r2, #1
 288              	.LVL40:
 289              	.L19:
 303:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 290              		.loc 1 303 16 is_stmt 1 view .LVU105
 291 00f4 002A     		cmp	r2, #0
 292 00f6 F6D1     		bne	.L20
 312:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 313:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 314:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Loop over number of columns of the destination matrix */
 315:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       j = numCols;
 293              		.loc 1 315 9 is_stmt 0 view .LVU106
 294 00f8 6046     		mov	r0, ip
 294:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 295              		.loc 1 294 13 view .LVU107
 296 00fa 5B46     		mov	r3, fp
 297              	.LVL41:
 294:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 298              		.loc 1 294 13 view .LVU108
 299 00fc 06E0     		b	.L21
 300              	.LVL42:
 301              	.L22:
 316:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 317:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 318:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 319:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Divide each element of the row of the destination matrix
 320:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****          * by the pivot element */
 321:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         in1 = *pInT2;
 302              		.loc 1 321 9 is_stmt 1 view .LVU109
 303              		.loc 1 321 13 is_stmt 0 view .LVU110
 304 00fe 93ED007A 		vldr.32	s14, [r3]
 305              	.LVL43:
 322:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pInT2++ = in1 / in;
 306              		.loc 1 322 9 is_stmt 1 view .LVU111
 307              		.loc 1 322 24 is_stmt 0 view .LVU112
 308 0102 C7EE267A 		vdiv.f32	s15, s14, s13
 309              		.loc 1 322 18 view .LVU113
 310 0106 E3EC017A 		vstmia.32	r3!, {s15}
 311              	.LVL44:
 323:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 324:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Decrement the loop counter */
 325:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         j--;
 312              		.loc 1 325 9 is_stmt 1 view .LVU114
 313              		.loc 1 325 10 is_stmt 0 view .LVU115
 314 010a 0138     		subs	r0, r0, #1
 315              	.LVL45:
 316              	.L21:
 317:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 317              		.loc 1 317 16 is_stmt 1 view .LVU116
 318 010c 0028     		cmp	r0, #0
 319 010e F6D1     		bne	.L22
 326:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
ARM GAS  /tmp/ccemzfcO.s 			page 13


 327:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 328:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Replace the rows with the sum of that row and a multiple of row i
 329:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * so that each new element in column i above row i is zero.*/
 330:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 331:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Temporary pointers for input and destination matrices */
 332:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT1 = pIn;
 333:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT2 = pOut;
 334:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 335:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* index used to check for pivot element */
 336:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       i = 0U;
 337:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 338:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Loop over number of rows */
 339:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /*  to be replaced by the sum of that row and a multiple of row i */
 340:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       k = numRows;
 320              		.loc 1 340 9 is_stmt 0 view .LVU117
 321 0110 7446     		mov	r4, lr
 333:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 322              		.loc 1 333 13 view .LVU118
 323 0112 4246     		mov	r2, r8
 332:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT2 = pOut;
 324              		.loc 1 332 13 view .LVU119
 325 0114 5346     		mov	r3, r10
 326              	.LVL46:
 332:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT2 = pOut;
 327              		.loc 1 332 13 view .LVU120
 328 0116 25E0     		b	.L23
 329              	.LVL47:
 330              	.L50:
 341:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 342:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (k > 0U)
 343:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 344:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Check for the pivot element */
 345:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         if (i == l)
 346:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 347:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* If the processing element is the pivot element,
 348:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              only the columns to the right are to be processed */
 349:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pInT1 += numCols - l;
 331              		.loc 1 349 11 is_stmt 1 view .LVU121
 332              		.loc 1 349 17 is_stmt 0 view .LVU122
 333 0118 03EB8603 		add	r3, r3, r6, lsl #2
 334              	.LVL48:
 350:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 351:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pInT2 += numCols;
 335              		.loc 1 351 11 is_stmt 1 view .LVU123
 336              		.loc 1 351 17 is_stmt 0 view .LVU124
 337 011c 02EB8C02 		add	r2, r2, ip, lsl #2
 338              	.LVL49:
 339              		.loc 1 351 17 view .LVU125
 340 0120 1CE0     		b	.L25
 341              	.LVL50:
 342              	.L27:
 352:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
 353:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         else
 354:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 355:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Element of the reference row */
 356:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           in = *pInT1;
 357:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
ARM GAS  /tmp/ccemzfcO.s 			page 14


 358:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Working pointers for input and destination pivot rows */
 359:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pPRT_in = pPivotRowIn;
 360:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pPRT_pDst = pPivotRowDst;
 361:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 362:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Loop over the number of columns to the right of the pivot element,
 363:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              to replace the elements in the input matrix */
 364:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           j = (numCols - l);
 365:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 366:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           while (j > 0U)
 367:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 368:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Replace the element by the sum of that row
 369:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****                and a multiple of the reference row  */
 370:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             in1 = *pInT1;
 343              		.loc 1 370 13 is_stmt 1 view .LVU126
 344              		.loc 1 370 17 is_stmt 0 view .LVU127
 345 0122 D3ED007A 		vldr.32	s15, [r3]
 346              	.LVL51:
 371:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             *pInT1++ = in1 - (in * *pPRT_in++);
 347              		.loc 1 371 13 is_stmt 1 view .LVU128
 348              		.loc 1 371 36 is_stmt 0 view .LVU129
 349 0126 B1EC017A 		vldmia.32	r1!, {s14}
 350              	.LVL52:
 351              		.loc 1 371 34 view .LVU130
 352 012a 27EE267A 		vmul.f32	s14, s14, s13
 353              	.LVL53:
 354              		.loc 1 371 28 view .LVU131
 355 012e 77EEC77A 		vsub.f32	s15, s15, s14
 356              	.LVL54:
 357              		.loc 1 371 22 view .LVU132
 358 0132 E3EC017A 		vstmia.32	r3!, {s15}
 359              	.LVL55:
 372:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 373:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Decrement the loop counter */
 374:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             j--;
 360              		.loc 1 374 13 is_stmt 1 view .LVU133
 361              		.loc 1 374 14 is_stmt 0 view .LVU134
 362 0136 013F     		subs	r7, r7, #1
 363              	.LVL56:
 364              	.L26:
 366:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 365              		.loc 1 366 20 is_stmt 1 view .LVU135
 366 0138 002F     		cmp	r7, #0
 367 013a F2D1     		bne	.L27
 375:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           }
 376:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 377:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Loop over the number of columns to
 378:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              replace the elements in the destination matrix */
 379:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           j = numCols;
 368              		.loc 1 379 13 is_stmt 0 view .LVU136
 369 013c 6746     		mov	r7, ip
 370              	.LVL57:
 360:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 371              		.loc 1 360 21 view .LVU137
 372 013e 5946     		mov	r1, fp
 373              	.LVL58:
 360:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 374              		.loc 1 360 21 view .LVU138
ARM GAS  /tmp/ccemzfcO.s 			page 15


 375 0140 0AE0     		b	.L28
 376              	.LVL59:
 377              	.L29:
 380:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 381:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           while (j > 0U)
 382:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 383:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Replace the element by the sum of that row
 384:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****                and a multiple of the reference row  */
 385:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             in1 = *pInT2;
 378              		.loc 1 385 13 is_stmt 1 view .LVU139
 379              		.loc 1 385 17 is_stmt 0 view .LVU140
 380 0142 D2ED007A 		vldr.32	s15, [r2]
 381              	.LVL60:
 386:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             *pInT2++ = in1 - (in * *pPRT_pDst++);
 382              		.loc 1 386 13 is_stmt 1 view .LVU141
 383              		.loc 1 386 36 is_stmt 0 view .LVU142
 384 0146 B1EC017A 		vldmia.32	r1!, {s14}
 385              	.LVL61:
 386              		.loc 1 386 34 view .LVU143
 387 014a 27EE267A 		vmul.f32	s14, s14, s13
 388              	.LVL62:
 389              		.loc 1 386 28 view .LVU144
 390 014e 77EEC77A 		vsub.f32	s15, s15, s14
 391              	.LVL63:
 392              		.loc 1 386 22 view .LVU145
 393 0152 E2EC017A 		vstmia.32	r2!, {s15}
 394              	.LVL64:
 387:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 388:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Decrement the loop counter */
 389:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             j--;
 395              		.loc 1 389 13 is_stmt 1 view .LVU146
 396              		.loc 1 389 14 is_stmt 0 view .LVU147
 397 0156 013F     		subs	r7, r7, #1
 398              	.LVL65:
 399              	.L28:
 381:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 400              		.loc 1 381 20 is_stmt 1 view .LVU148
 401 0158 002F     		cmp	r7, #0
 402 015a F2D1     		bne	.L29
 403              	.LVL66:
 404              	.L25:
 390:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           }
 391:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 392:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
 393:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 394:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Increment the temporary input pointer */
 395:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 = pInT1 + l;
 405              		.loc 1 395 9 view .LVU149
 406              		.loc 1 395 15 is_stmt 0 view .LVU150
 407 015c 03EB8503 		add	r3, r3, r5, lsl #2
 408              	.LVL67:
 396:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 397:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Decrement the loop counter */
 398:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         k--;
 409              		.loc 1 398 9 is_stmt 1 view .LVU151
 410              		.loc 1 398 10 is_stmt 0 view .LVU152
 411 0160 013C     		subs	r4, r4, #1
ARM GAS  /tmp/ccemzfcO.s 			page 16


 412              	.LVL68:
 399:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 400:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Increment the pivot index */
 401:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         i++;
 413              		.loc 1 401 9 is_stmt 1 view .LVU153
 414              		.loc 1 401 10 is_stmt 0 view .LVU154
 415 0162 0130     		adds	r0, r0, #1
 416              	.LVL69:
 417              	.L23:
 342:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 418              		.loc 1 342 16 is_stmt 1 view .LVU155
 419 0164 34B1     		cbz	r4, .L49
 345:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 420              		.loc 1 345 9 view .LVU156
 345:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 421              		.loc 1 345 12 is_stmt 0 view .LVU157
 422 0166 A842     		cmp	r0, r5
 423 0168 D6D0     		beq	.L50
 356:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 424              		.loc 1 356 11 is_stmt 1 view .LVU158
 356:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 425              		.loc 1 356 14 is_stmt 0 view .LVU159
 426 016a D3ED006A 		vldr.32	s13, [r3]
 427              	.LVL70:
 359:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pPRT_pDst = pPivotRowDst;
 428              		.loc 1 359 11 is_stmt 1 view .LVU160
 360:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 429              		.loc 1 360 11 view .LVU161
 364:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 430              		.loc 1 364 11 view .LVU162
 366:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 431              		.loc 1 366 11 view .LVU163
 364:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 432              		.loc 1 364 13 is_stmt 0 view .LVU164
 433 016e 3746     		mov	r7, r6
 359:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pPRT_pDst = pPivotRowDst;
 434              		.loc 1 359 19 view .LVU165
 435 0170 0099     		ldr	r1, [sp]
 366:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 436              		.loc 1 366 17 view .LVU166
 437 0172 E1E7     		b	.L26
 438              	.LVL71:
 439              	.L49:
 402:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 403:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 404:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Increment the input pointer */
 405:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pIn++;
 440              		.loc 1 405 7 is_stmt 1 view .LVU167
 441              		.loc 1 405 10 is_stmt 0 view .LVU168
 442 0174 0AF1040A 		add	r10, r10, #4
 443              	.LVL72:
 406:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 407:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Decrement the loop counter */
 408:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       loopCnt--;
 444              		.loc 1 408 7 is_stmt 1 view .LVU169
 445              		.loc 1 408 14 is_stmt 0 view .LVU170
 446 0178 09F1FF39 		add	r9, r9, #-1
ARM GAS  /tmp/ccemzfcO.s 			page 17


 447              	.LVL73:
 409:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 410:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Increment the index modifier */
 411:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       l++;
 448              		.loc 1 411 7 is_stmt 1 view .LVU171
 449              		.loc 1 411 8 is_stmt 0 view .LVU172
 450 017c 0135     		adds	r5, r5, #1
 451              	.LVL74:
 452              	.L8:
 184:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     {
 453              		.loc 1 184 20 is_stmt 1 view .LVU173
 454 017e B9F1000F 		cmp	r9, #0
 455 0182 0CD0     		beq	.L51
 193:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 456              		.loc 1 193 7 view .LVU174
 193:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 457              		.loc 1 193 24 is_stmt 0 view .LVU175
 458 0184 0CFB05F3 		mul	r3, ip, r5
 193:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 459              		.loc 1 193 13 view .LVU176
 460 0188 0AEB8302 		add	r2, r10, r3, lsl #2
 461 018c 0092     		str	r2, [sp]
 462              	.LVL75:
 197:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 463              		.loc 1 197 7 is_stmt 1 view .LVU177
 197:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 464              		.loc 1 197 14 is_stmt 0 view .LVU178
 465 018e 08EB830B 		add	fp, r8, r3, lsl #2
 466              	.LVL76:
 200:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 467              		.loc 1 200 7 is_stmt 1 view .LVU179
 200:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 468              		.loc 1 200 10 is_stmt 0 view .LVU180
 469 0192 D2ED006A 		vldr.32	s13, [r2]
 470              	.LVL77:
 203:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       for (i = l; i < numRows; i++)
 471              		.loc 1 203 7 is_stmt 1 view .LVU181
 204:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 472              		.loc 1 204 7 view .LVU182
 204:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 473              		.loc 1 204 14 is_stmt 0 view .LVU183
 474 0196 2B46     		mov	r3, r5
 203:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       for (i = l; i < numRows; i++)
 475              		.loc 1 203 12 view .LVU184
 476 0198 9FED157A 		vldr.32	s14, .L53
 204:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 477              		.loc 1 204 7 view .LVU185
 478 019c 65E7     		b	.L9
 479              	.LVL78:
 480              	.L51:
 412:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     }
 413:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 414:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 415:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #else
 416:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 417:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   /* Run the below code for Cortex-M0 */
 418:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
ARM GAS  /tmp/ccemzfcO.s 			page 18


 419:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   float32_t Xchg, in = 0.0f;                     /* Temporary input values  */
 420:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   uint32_t i, rowCnt, flag = 0U, j, loopCnt, k, l;      /* loop counters */
 421:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   arm_status status;                             /* status of matrix inverse */
 422:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 423:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
 424:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 425:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   /* Check for matrix mismatch condition */
 426:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   if ((pSrc->numRows != pSrc->numCols) || (pDst->numRows != pDst->numCols)
 427:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****      || (pSrc->numRows != pDst->numRows))
 428:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   {
 429:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 430:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
 431:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   }
 432:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   else
 433:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #endif /*      #ifdef ARM_MATH_MATRIX_CHECK    */
 434:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   {
 435:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 436:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /*---------------------------------------------------------------------------------------------
 437:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 * Matrix Inverse can be solved using elementary row operations.
 438:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 439:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	Gauss-Jordan Method:
 440:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 441:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	   1. First combine the identity matrix and the input matrix separated by a bar to form an
 442:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *        augmented matrix as follows:
 443:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *				        _  _	      _	    _	   _   _         _	       _
 444:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *					   |  |  a11  a12  | | | 1   0  |   |       |  X11 X12  |
 445:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *					   |  |            | | |        |   |   =   |           |
 446:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *					   |_ |_ a21  a22 _| | |_0   1 _|  _|       |_ X21 X21 _|
 447:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 448:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		2. In our implementation, pDst Matrix is used as identity matrix.
 449:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 450:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		3. Begin with the first row. Let i = 1.
 451:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 452:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    4. Check to see if the pivot for row i is zero.
 453:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   The pivot is the element of the main diagonal that is on the current row.
 454:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   For instance, if working with row i, then the pivot element is aii.
 455:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   If the pivot is zero, exchange that row with a row below it that does not
 456:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   contain a zero in column i. If this is not possible, then an inverse
 457:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   to that matrix does not exist.
 458:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 459:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    5. Divide every element of row i by the pivot.
 460:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 461:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    6. For every row below and  row i, replace that row with the sum of that row and
 462:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   a multiple of row i so that each new element in column i below row i is zero.
 463:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 464:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *	    7. Move to the next row and column and repeat steps 2 through 5 until you have zeros
 465:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   for every element below and above the main diagonal.
 466:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *
 467:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		8. Now an identical matrix is formed to the left of the bar(input matrix, src).
 468:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *		   Therefore, the matrix to the right of the bar is our solution(dst matrix, dst).
 469:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 	 *------------------------------------------------------------------------------------------------
 470:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 471:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Working pointer for destination matrix */
 472:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     pOutT1 = pOut;
 473:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 474:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Loop over the number of rows */
 475:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     rowCnt = numRows;
ARM GAS  /tmp/ccemzfcO.s 			page 19


 476:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 477:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Making the destination matrix as identity matrix */
 478:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     while (rowCnt > 0U)
 479:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     {
 480:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Writing all zeroes in lower triangle of the destination matrix */
 481:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       j = numRows - rowCnt;
 482:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 483:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 484:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pOutT1++ = 0.0f;
 485:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         j--;
 486:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 487:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 488:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Writing all ones in the diagonal of the destination matrix */
 489:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       *pOutT1++ = 1.0f;
 490:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 491:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Writing all zeroes in upper triangle of the destination matrix */
 492:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       j = rowCnt - 1U;
 493:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       while (j > 0U)
 494:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 495:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pOutT1++ = 0.0f;
 496:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         j--;
 497:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 498:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 499:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Decrement the loop counter */
 500:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       rowCnt--;
 501:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     }
 502:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 503:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Loop over the number of columns of the input matrix.
 504:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        All the elements in each column are processed by the row operations */
 505:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     loopCnt = numCols;
 506:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 507:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Index modifier to navigate through the columns */
 508:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     l = 0U;
 509:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     //for(loopCnt = 0U; loopCnt < numCols; loopCnt++)
 510:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     while (loopCnt > 0U)
 511:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     {
 512:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Check if the pivot element is zero..
 513:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * If it is zero then interchange the row with non zero row below.
 514:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * If there is no non zero element to replace in the rows below,
 515:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * then the matrix is Singular. */
 516:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 517:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Working pointer for the input matrix that points
 518:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * to the pivot element of the particular row  */
 519:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT1 = pIn + (l * numCols);
 520:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 521:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Working pointer for the destination matrix that points
 522:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * to the pivot element of the particular row  */
 523:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pOutT1 = pOut + (l * numCols);
 524:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 525:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Temporary variable to hold the pivot value */
 526:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       in = *pInT1;
 527:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 528:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Destination pointer modifier */
 529:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       k = 1U;
 530:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 531:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Check if the pivot element is zero */
 532:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       if (*pInT1 == 0.0f)
ARM GAS  /tmp/ccemzfcO.s 			page 20


 533:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 534:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Loop over the number rows present below */
 535:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         for (i = (l + 1U); i < numRows; i++)
 536:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 537:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Update the input and destination pointers */
 538:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pInT2 = pInT1 + (numCols * l);
 539:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pOutT2 = pOutT1 + (numCols * k);
 540:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 541:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Check if there is a non zero pivot element to
 542:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****            * replace in the rows below */
 543:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           if (*pInT2 != 0.0f)
 544:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 545:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Loop over number of columns
 546:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              * to the right of the pilot element */
 547:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             for (j = 0U; j < (numCols - l); j++)
 548:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             {
 549:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               /* Exchange the row elements of the input matrix */
 550:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               Xchg = *pInT2;
 551:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pInT2++ = *pInT1;
 552:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pInT1++ = Xchg;
 553:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             }
 554:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 555:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             for (j = 0U; j < numCols; j++)
 556:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             {
 557:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               Xchg = *pOutT2;
 558:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pOutT2++ = *pOutT1;
 559:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****               *pOutT1++ = Xchg;
 560:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             }
 561:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 562:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Flag to indicate whether exchange is done or not */
 563:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             flag = 1U;
 564:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 565:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Break after exchange is done */
 566:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             break;
 567:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           }
 568:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 569:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Update the destination pointer modifier */
 570:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           k++;
 571:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
 572:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 573:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 574:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Update the status if the matrix is singular */
 575:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       if ((flag != 1U) && (in == 0.0f))
 576:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 577:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         return ARM_MATH_SINGULAR;
 578:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 579:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 580:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Points to the pivot row of input and destination matrices */
 581:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pPivotRowIn = pIn + (l * numCols);
 582:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pPivotRowDst = pOut + (l * numCols);
 583:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 584:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Temporary pointers to the pivot row pointers */
 585:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT1 = pPivotRowIn;
 586:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pOutT1 = pPivotRowDst;
 587:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 588:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Pivot element of the row */
 589:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       in = *(pIn + (l * numCols));
ARM GAS  /tmp/ccemzfcO.s 			page 21


 590:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 591:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Loop over number of columns
 592:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * to the right of the pilot element */
 593:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       for (j = 0U; j < (numCols - l); j++)
 594:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 595:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Divide each element of the row of the input matrix
 596:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****          * by the pivot element */
 597:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pInT1 = *pInT1 / in;
 598:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1++;
 599:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 600:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       for (j = 0U; j < numCols; j++)
 601:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 602:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Divide each element of the row of the destination matrix
 603:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****          * by the pivot element */
 604:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         *pOutT1 = *pOutT1 / in;
 605:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pOutT1++;
 606:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 607:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 608:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Replace the rows with the sum of that row and a multiple of row i
 609:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****        * so that each new element in column i above row i is zero.*/
 610:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 611:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Temporary pointers for input and destination matrices */
 612:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pInT1 = pIn;
 613:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pOutT1 = pOut;
 614:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 615:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       for (i = 0U; i < numRows; i++)
 616:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 617:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Check for the pivot element */
 618:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         if (i == l)
 619:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 620:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* If the processing element is the pivot element,
 621:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              only the columns to the right are to be processed */
 622:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pInT1 += numCols - l;
 623:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pOutT1 += numCols;
 624:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
 625:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         else
 626:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         {
 627:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Element of the reference row */
 628:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           in = *pInT1;
 629:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 630:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Working pointers for input and destination pivot rows */
 631:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pPRT_in = pPivotRowIn;
 632:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           pPRT_pDst = pPivotRowDst;
 633:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 634:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Loop over the number of columns to the right of the pivot element,
 635:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              to replace the elements in the input matrix */
 636:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           for (j = 0U; j < (numCols - l); j++)
 637:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
 638:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Replace the element by the sum of that row
 639:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****                and a multiple of the reference row  */
 640:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             *pInT1 = *pInT1 - (in * *pPRT_in++);
 641:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             pInT1++;
 642:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           }
 643:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           /* Loop over the number of columns to
 644:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****              replace the elements in the destination matrix */
 645:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           for (j = 0U; j < numCols; j++)
 646:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           {
ARM GAS  /tmp/ccemzfcO.s 			page 22


 647:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             /* Replace the element by the sum of that row
 648:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****                and a multiple of the reference row  */
 649:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             *pOutT1 = *pOutT1 - (in * *pPRT_pDst++);
 650:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             pOutT1++;
 651:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****           }
 652:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 653:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         }
 654:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         /* Increment the temporary input pointer */
 655:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         pInT1 = pInT1 + l;
 656:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 657:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Increment the input pointer */
 658:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pIn++;
 659:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 660:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Decrement the loop counter */
 661:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       loopCnt--;
 662:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       /* Increment the index modifier */
 663:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       l++;
 664:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     }
 665:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 666:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 667:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 668:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 669:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 670:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     status = ARM_MATH_SUCCESS;
 671:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 672:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     if ((flag != 1U) && (in == 0.0f))
 481              		.loc 1 672 22 discriminator 1 view .LVU186
 482 019e 0198     		ldr	r0, [sp, #4]
 670:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 483              		.loc 1 670 5 is_stmt 1 view .LVU187
 484              	.LVL79:
 485              		.loc 1 672 5 view .LVU188
 486              		.loc 1 672 22 is_stmt 0 discriminator 1 view .LVU189
 487 01a0 F5EE406A 		vcmp.f32	s13, #0
 488 01a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 489 01a8 1CD1     		bne	.L40
 673:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     {
 674:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       pIn = pSrc->pData;
 490              		.loc 1 674 7 is_stmt 1 view .LVU190
 491              		.loc 1 674 11 is_stmt 0 view .LVU191
 492 01aa 4168     		ldr	r1, [r0, #4]
 493              	.LVL80:
 675:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       for (i = 0; i < numRows * numCols; i++)
 494              		.loc 1 675 7 is_stmt 1 view .LVU192
 495              		.loc 1 675 7 is_stmt 0 view .LVU193
 496 01ac 01E0     		b	.L32
 497              	.LVL81:
 498              	.L52:
 499              		.loc 1 675 43 is_stmt 1 discriminator 2 view .LVU194
 500 01ae 09F10109 		add	r9, r9, #1
 501              	.LVL82:
 502              	.L32:
 503              		.loc 1 675 21 discriminator 1 view .LVU195
 504              		.loc 1 675 31 is_stmt 0 discriminator 1 view .LVU196
 505 01b2 0CFB0EF3 		mul	r3, ip, lr
 506              		.loc 1 675 21 discriminator 1 view .LVU197
 507 01b6 4B45     		cmp	r3, r9
ARM GAS  /tmp/ccemzfcO.s 			page 23


 508 01b8 08D9     		bls	.L33
 676:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       {
 677:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         if (pIn[i] != 0.0f)
 509              		.loc 1 677 9 is_stmt 1 view .LVU198
 510              		.loc 1 677 16 is_stmt 0 view .LVU199
 511 01ba 01EB8902 		add	r2, r1, r9, lsl #2
 512 01be D2ED007A 		vldr.32	s15, [r2]
 513              		.loc 1 677 12 view .LVU200
 514 01c2 F5EE407A 		vcmp.f32	s15, #0
 515 01c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 516 01ca F0D0     		beq	.L52
 517              	.L33:
 678:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****             break;
 679:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 680:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 681:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       if (i == numRows * numCols)
 518              		.loc 1 681 7 is_stmt 1 view .LVU201
 519              		.loc 1 681 10 is_stmt 0 view .LVU202
 520 01cc 4B45     		cmp	r3, r9
 521 01ce 0BD0     		beq	.L41
 670:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 522              		.loc 1 670 12 view .LVU203
 523 01d0 0020     		movs	r0, #0
 524 01d2 01E0     		b	.L14
 525              	.LVL83:
 526              	.L37:
 213:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 527              		.loc 1 213 16 view .LVU204
 528 01d4 6FF00400 		mvn	r0, #4
 529              	.LVL84:
 530              	.L14:
 682:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         status = ARM_MATH_SINGULAR;
 683:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****     }
 684:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   }
 685:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   /* Return to application */
 686:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****   return (status);
 687:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** }
 531              		.loc 1 687 1 view .LVU205
 532 01d8 03B0     		add	sp, sp, #12
 533              		.cfi_remember_state
 534              		.cfi_def_cfa_offset 36
 535              		@ sp needed
 536 01da BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 537              	.LVL85:
 538              	.L39:
 539              		.cfi_restore_state
 285:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****       }
 540              		.loc 1 285 16 view .LVU206
 541 01de 6FF00400 		mvn	r0, #4
 542 01e2 F9E7     		b	.L14
 543              	.LVL86:
 544              	.L40:
 670:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c **** 
 545              		.loc 1 670 12 view .LVU207
 546 01e4 0020     		movs	r0, #0
 547 01e6 F7E7     		b	.L14
 548              	.LVL87:
ARM GAS  /tmp/ccemzfcO.s 			page 24


 549              	.L41:
 682:Drivers/CMSIS/DSP/Source/MatrixFunctions/arm_mat_inverse_f32.c ****         status = ARM_MATH_SINGULAR;
 550              		.loc 1 682 16 view .LVU208
 551 01e8 6FF00400 		mvn	r0, #4
 552 01ec F4E7     		b	.L14
 553              	.L54:
 554 01ee 00BF     		.align	2
 555              	.L53:
 556 01f0 00000000 		.word	0
 557              		.cfi_endproc
 558              	.LFE135:
 560              		.text
 561              	.Letext0:
 562              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 563              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 564              		.file 4 "Drivers/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccemzfcO.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_inverse_f32.c
     /tmp/ccemzfcO.s:21     .text.arm_mat_inverse_f32:00000000 $t
     /tmp/ccemzfcO.s:27     .text.arm_mat_inverse_f32:00000000 arm_mat_inverse_f32
     /tmp/ccemzfcO.s:556    .text.arm_mat_inverse_f32:000001f0 $d

NO UNDEFINED SYMBOLS
