ARM GAS  /tmp/ccIebNMm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.cpp"
  20              		.section	.text._Z41__static_initialization_and_destruction_0v,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_Z41__static_initialization_and_destruction_0v:
  27              		.fnstart
  28              	.LFB3376:
   1:Core/Src/main.cpp **** /** 
   2:Core/Src/main.cpp ****   ******************************************************************************
   3:Core/Src/main.cpp ****   * @file           : main.cpp
   4:Core/Src/main.cpp ****   * @brief          : Main program body
   5:Core/Src/main.cpp ****   * @authors Paul Sampson and Kelvin Hoang
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   */
   8:Core/Src/main.cpp **** 
   9:Core/Src/main.cpp **** 
  10:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  11:Core/Src/main.cpp **** #include <math.h>
  12:Core/Src/main.cpp **** #include <stdio.h>
  13:Core/Src/main.cpp **** #include <string.h>
  14:Core/Src/main.cpp **** #include "stm32f4xx_hal.h"
  15:Core/Src/main.cpp **** #include "main.h"
  16:Core/Src/main.cpp **** #include "matrixdefs.h"
  17:Core/Src/main.cpp **** #include "controller.h"
  18:Core/Src/main.cpp **** #include "stewart.h"
  19:Core/Src/main.cpp **** #include "distGovernor.h"
  20:Core/Src/main.cpp **** #include "cylGovernor.h"
  21:Core/Src/main.cpp **** 
  22:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  23:Core/Src/main.cpp **** I2C_HandleTypeDef hi2c1;
  24:Core/Src/main.cpp **** UART_HandleTypeDef huart2;
  25:Core/Src/main.cpp **** TIM_HandleTypeDef htim1;
  26:Core/Src/main.cpp **** TIM_HandleTypeDef htim8;
  27:Core/Src/main.cpp **** 
  28:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  29:Core/Src/main.cpp **** void SystemClock_Config(void);
  30:Core/Src/main.cpp **** static void MX_GPIO_Init(void);
ARM GAS  /tmp/ccIebNMm.s 			page 2


  31:Core/Src/main.cpp **** static void MX_USART2_UART_Init(void);
  32:Core/Src/main.cpp **** static void MX_TIM1_Init(void);
  33:Core/Src/main.cpp **** static void MX_TIM8_Init(void);
  34:Core/Src/main.cpp **** static void MX_I2C1_Init(void);
  35:Core/Src/main.cpp **** 
  36:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  37:Core/Src/main.cpp **** 
  38:Core/Src/main.cpp **** uint8_t myState = 0;
  39:Core/Src/main.cpp **** 
  40:Core/Src/main.cpp **** /**
  41:Core/Src/main.cpp ****   * @brief  The application entry point.
  42:Core/Src/main.cpp ****   * @retval int
  43:Core/Src/main.cpp ****   */
  44:Core/Src/main.cpp **** int main(void)
  45:Core/Src/main.cpp **** {
  46:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  47:Core/Src/main.cpp ****   Stewart stew;
  48:Core/Src/main.cpp ****   fArr3 rpyInitial = {0,0,0};
  49:Core/Src/main.cpp ****   fArr3 rpyFinal = {0.314, 0.128, 0.981};
  50:Core/Src/main.cpp ****   fArr6 lengthsInitial = stew.xfmLinPos(rpyInitial);
  51:Core/Src/main.cpp ****   fArr6 lengthsFinal = stew.xfmLinPos(rpyFinal);
  52:Core/Src/main.cpp ****   Controller myCtrl;
  53:Core/Src/main.cpp ****   CylGov myCG;
  54:Core/Src/main.cpp ****   DistGov myDG(hi2c1);
  55:Core/Src/main.cpp **** 
  56:Core/Src/main.cpp ****   //myDG.e_fuse_run(0, 0x10);
  57:Core/Src/main.cpp ****   
  58:Core/Src/main.cpp ****   //myDI.e_fuse_run(0x10);
  59:Core/Src/main.cpp **** 
  60:Core/Src/main.cpp ****   /* USER CODE END 1 */
  61:Core/Src/main.cpp **** 
  62:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  65:Core/Src/main.cpp ****   HAL_Init();
  66:Core/Src/main.cpp **** 
  67:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp ****   /* USER CODE END Init */
  70:Core/Src/main.cpp **** 
  71:Core/Src/main.cpp ****   /* Configure the system clock */
  72:Core/Src/main.cpp ****   SystemClock_Config();
  73:Core/Src/main.cpp **** 
  74:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  75:Core/Src/main.cpp **** 
  76:Core/Src/main.cpp ****   /* USER CODE END SysInit */
  77:Core/Src/main.cpp **** 
  78:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
  79:Core/Src/main.cpp ****   MX_GPIO_Init();
  80:Core/Src/main.cpp ****   MX_USART2_UART_Init();
  81:Core/Src/main.cpp ****   MX_TIM1_Init();
  82:Core/Src/main.cpp ****   MX_TIM8_Init();
  83:Core/Src/main.cpp ****   MX_I2C1_Init();
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
  86:Core/Src/main.cpp ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
  87:Core/Src/main.cpp ****   //HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_ALL);
ARM GAS  /tmp/ccIebNMm.s 			page 3


  88:Core/Src/main.cpp ****   fArr6 lengths = lengthsInitial;
  89:Core/Src/main.cpp ****   std::array<char,500> uart_buf;
  90:Core/Src/main.cpp ****   unsigned int uart_buf_len = 0;
  91:Core/Src/main.cpp ****   
  92:Core/Src/main.cpp ****   /* USER CODE END 2 */
  93:Core/Src/main.cpp ****   
  94:Core/Src/main.cpp ****   /* Infinite loop */
  95:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
  96:Core/Src/main.cpp ****   long timeNow = 0;
  97:Core/Src/main.cpp ****   long timeLast = 0;
  98:Core/Src/main.cpp ****   const long interval = 30000;
  99:Core/Src/main.cpp ****   while(true)
 100:Core/Src/main.cpp ****   {
 101:Core/Src/main.cpp ****     timeNow = HAL_GetTick();
 102:Core/Src/main.cpp ****     if(timeNow-timeLast > interval) {
 103:Core/Src/main.cpp ****       switch(myState) {
 104:Core/Src/main.cpp ****         case 0:
 105:Core/Src/main.cpp ****           lengthsFinal[0]=27;
 106:Core/Src/main.cpp ****           myState++;
 107:Core/Src/main.cpp ****           break;        
 108:Core/Src/main.cpp ****         case 1:
 109:Core/Src/main.cpp ****           lengthsFinal[0]=17;
 110:Core/Src/main.cpp ****           myState++;
 111:Core/Src/main.cpp ****           break;
 112:Core/Src/main.cpp ****         case 2:
 113:Core/Src/main.cpp ****           lengthsFinal[0]=22;
 114:Core/Src/main.cpp ****           myState = 0;
 115:Core/Src/main.cpp ****           break;
 116:Core/Src/main.cpp ****       }
 117:Core/Src/main.cpp ****       timeLast = timeNow;
 118:Core/Src/main.cpp ****     }
 119:Core/Src/main.cpp **** 
 120:Core/Src/main.cpp ****     lengths = myDG.readDistances();
 121:Core/Src/main.cpp ****     fArr6 lStep = myCtrl.step(lengthsFinal,lengths);
 122:Core/Src/main.cpp ****     myCG.setDutyCycles(lStep);
 123:Core/Src/main.cpp **** 
 124:Core/Src/main.cpp ****     for (uint8_t j = 0; j < 6; j++) {
 125:Core/Src/main.cpp ****       uart_buf_len += sprintf(uart_buf.data() + strlen(uart_buf.data()), "%3.2f ", lengths[j]);
 126:Core/Src/main.cpp ****     }
 127:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf.data() + strlen(uart_buf.data()), "\r\n");
 128:Core/Src/main.cpp ****     //uart_buf_len = sprintf(uart_buf.data(), "%3.2f %i %i \r\n", lStep[0], HAL_GPIO_ReadPin(GPIOA,
 129:Core/Src/main.cpp ****     HAL_UART_Transmit(&huart2,(uint8_t *)uart_buf.data(), uart_buf_len, 100);
 130:Core/Src/main.cpp ****     uart_buf_len = 0;
 131:Core/Src/main.cpp ****     uart_buf.fill((char)0);
 132:Core/Src/main.cpp ****     HAL_Delay(25);
 133:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 134:Core/Src/main.cpp **** 
 135:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 136:Core/Src/main.cpp ****   }
 137:Core/Src/main.cpp ****   /* USER CODE END 3 */
 138:Core/Src/main.cpp **** 
 139:Core/Src/main.cpp **** }
 140:Core/Src/main.cpp **** 
 141:Core/Src/main.cpp **** 
 142:Core/Src/main.cpp **** /**
 143:Core/Src/main.cpp ****   * @brief System Clock Configuration
 144:Core/Src/main.cpp ****   * @retval None
ARM GAS  /tmp/ccIebNMm.s 			page 4


 145:Core/Src/main.cpp ****   */void SystemClock_Config(void)
 146:Core/Src/main.cpp **** {
 147:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 148:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 149:Core/Src/main.cpp **** 
 150:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 151:Core/Src/main.cpp ****   */
 152:Core/Src/main.cpp ****   __HAL_RCC_PWR_CLK_ENABLE();
 153:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 154:Core/Src/main.cpp **** 
 155:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 156:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 157:Core/Src/main.cpp ****   */
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 159:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 160:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 161:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 163:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 16;
 164:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 336;
 165:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 166:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 167:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 168:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 169:Core/Src/main.cpp ****   {
 170:Core/Src/main.cpp ****     Error_Handler();
 171:Core/Src/main.cpp ****   }
 172:Core/Src/main.cpp **** 
 173:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 174:Core/Src/main.cpp ****   */
 175:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 176:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 177:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 178:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 179:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 180:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 181:Core/Src/main.cpp **** 
 182:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 183:Core/Src/main.cpp ****   {
 184:Core/Src/main.cpp ****     Error_Handler();
 185:Core/Src/main.cpp ****   }
 186:Core/Src/main.cpp **** }
 187:Core/Src/main.cpp **** 
 188:Core/Src/main.cpp **** /**
 189:Core/Src/main.cpp ****   * @brief I2C1 Initialization Function
 190:Core/Src/main.cpp ****   * @param None
 191:Core/Src/main.cpp ****   * @retval None
 192:Core/Src/main.cpp ****   */
 193:Core/Src/main.cpp **** static void MX_I2C1_Init(void)
 194:Core/Src/main.cpp **** {
 195:Core/Src/main.cpp **** 
 196:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 0 */
 197:Core/Src/main.cpp **** 
 198:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 0 */
 199:Core/Src/main.cpp **** 
 200:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 1 */
 201:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccIebNMm.s 			page 5


 202:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 1 */
 203:Core/Src/main.cpp ****   hi2c1.Instance = I2C1;
 204:Core/Src/main.cpp ****   hi2c1.Init.ClockSpeed = 100000;
 205:Core/Src/main.cpp ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 206:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 207:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 208:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 209:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 210:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 211:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 212:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 213:Core/Src/main.cpp ****   {
 214:Core/Src/main.cpp ****     Error_Handler();
 215:Core/Src/main.cpp ****   }
 216:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 2 */
 217:Core/Src/main.cpp **** 
 218:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 2 */
 219:Core/Src/main.cpp **** 
 220:Core/Src/main.cpp **** }
 221:Core/Src/main.cpp **** 
 222:Core/Src/main.cpp **** static void MX_TIM1_Init(void)
 223:Core/Src/main.cpp **** {
 224:Core/Src/main.cpp **** 
 225:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM1_Init 0 */
 226:Core/Src/main.cpp **** 
 227:Core/Src/main.cpp ****   /* USER CODE END TIM1_Init 0 */
 228:Core/Src/main.cpp **** 
 229:Core/Src/main.cpp ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 230:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 231:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 232:Core/Src/main.cpp ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 233:Core/Src/main.cpp **** 
 234:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM1_Init 1 */
 235:Core/Src/main.cpp **** 
 236:Core/Src/main.cpp ****   /* USER CODE END TIM1_Init 1 */
 237:Core/Src/main.cpp ****   htim1.Instance = TIM1;
 238:Core/Src/main.cpp ****   htim1.Init.Prescaler = 100;
 239:Core/Src/main.cpp ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 240:Core/Src/main.cpp ****   htim1.Init.Period = 60000;
 241:Core/Src/main.cpp ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 242:Core/Src/main.cpp ****   htim1.Init.RepetitionCounter = 0;
 243:Core/Src/main.cpp ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 244:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 245:Core/Src/main.cpp ****   {
 246:Core/Src/main.cpp ****     Error_Handler();
 247:Core/Src/main.cpp ****   }
 248:Core/Src/main.cpp ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 249:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 250:Core/Src/main.cpp ****   {
 251:Core/Src/main.cpp ****     Error_Handler();
 252:Core/Src/main.cpp ****   }
 253:Core/Src/main.cpp ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 254:Core/Src/main.cpp ****   {
 255:Core/Src/main.cpp ****     Error_Handler();
 256:Core/Src/main.cpp ****   }
 257:Core/Src/main.cpp ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 258:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccIebNMm.s 			page 6


 259:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 260:Core/Src/main.cpp ****   {
 261:Core/Src/main.cpp ****     Error_Handler();
 262:Core/Src/main.cpp ****   }
 263:Core/Src/main.cpp ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 264:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 265:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 266:Core/Src/main.cpp ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 267:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 268:Core/Src/main.cpp ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 269:Core/Src/main.cpp ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 270:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 271:Core/Src/main.cpp ****   {
 272:Core/Src/main.cpp ****     Error_Handler();
 273:Core/Src/main.cpp ****   }
 274:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 275:Core/Src/main.cpp ****   {
 276:Core/Src/main.cpp ****     Error_Handler();
 277:Core/Src/main.cpp ****   }
 278:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 279:Core/Src/main.cpp ****   {
 280:Core/Src/main.cpp ****     Error_Handler();
 281:Core/Src/main.cpp ****   }
 282:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 283:Core/Src/main.cpp ****   {
 284:Core/Src/main.cpp ****     Error_Handler();
 285:Core/Src/main.cpp ****   }
 286:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 287:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 288:Core/Src/main.cpp ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 289:Core/Src/main.cpp ****   sBreakDeadTimeConfig.DeadTime = 0;
 290:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 291:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 292:Core/Src/main.cpp ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 293:Core/Src/main.cpp ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 294:Core/Src/main.cpp ****   {
 295:Core/Src/main.cpp ****     Error_Handler();
 296:Core/Src/main.cpp ****   }
 297:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM1_Init 2 */
 298:Core/Src/main.cpp ****   
 299:Core/Src/main.cpp ****   /* USER CODE END TIM1_Init 2 */
 300:Core/Src/main.cpp ****   HAL_TIM_MspPostInit(&htim1);
 301:Core/Src/main.cpp **** 
 302:Core/Src/main.cpp **** }
 303:Core/Src/main.cpp **** 
 304:Core/Src/main.cpp **** /**
 305:Core/Src/main.cpp ****   * @brief TIM8 Initialization Function
 306:Core/Src/main.cpp ****   * @param None
 307:Core/Src/main.cpp ****   * @retval None
 308:Core/Src/main.cpp ****   */
 309:Core/Src/main.cpp **** static void MX_TIM8_Init(void)
 310:Core/Src/main.cpp **** {
 311:Core/Src/main.cpp **** 
 312:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM8_Init 0 */
 313:Core/Src/main.cpp **** 
 314:Core/Src/main.cpp ****   /* USER CODE END TIM8_Init 0 */
 315:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccIebNMm.s 			page 7


 316:Core/Src/main.cpp ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 317:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 318:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 319:Core/Src/main.cpp ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 320:Core/Src/main.cpp **** 
 321:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM8_Init 1 */
 322:Core/Src/main.cpp **** 
 323:Core/Src/main.cpp ****   /* USER CODE END TIM8_Init 1 */
 324:Core/Src/main.cpp ****   htim8.Instance = TIM8;
 325:Core/Src/main.cpp ****   htim8.Init.Prescaler = 500;
 326:Core/Src/main.cpp ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 327:Core/Src/main.cpp ****   htim8.Init.Period = 60000;
 328:Core/Src/main.cpp ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 329:Core/Src/main.cpp ****   htim8.Init.RepetitionCounter = 0;
 330:Core/Src/main.cpp ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 331:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 332:Core/Src/main.cpp ****   {
 333:Core/Src/main.cpp ****     Error_Handler();
 334:Core/Src/main.cpp ****   }
 335:Core/Src/main.cpp ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 336:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 337:Core/Src/main.cpp ****   {
 338:Core/Src/main.cpp ****     Error_Handler();
 339:Core/Src/main.cpp ****   }
 340:Core/Src/main.cpp ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 341:Core/Src/main.cpp ****   {
 342:Core/Src/main.cpp ****     Error_Handler();
 343:Core/Src/main.cpp ****   }
 344:Core/Src/main.cpp ****   if (HAL_TIM_OC_Init(&htim8) != HAL_OK)
 345:Core/Src/main.cpp ****   {
 346:Core/Src/main.cpp ****     Error_Handler();
 347:Core/Src/main.cpp ****   }
 348:Core/Src/main.cpp ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 349:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 350:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 351:Core/Src/main.cpp ****   {
 352:Core/Src/main.cpp ****     Error_Handler();
 353:Core/Src/main.cpp ****   }
 354:Core/Src/main.cpp ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 355:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 356:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 357:Core/Src/main.cpp ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 358:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 359:Core/Src/main.cpp ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 360:Core/Src/main.cpp ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 361:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 362:Core/Src/main.cpp ****   {
 363:Core/Src/main.cpp ****     Error_Handler();
 364:Core/Src/main.cpp ****   }
 365:Core/Src/main.cpp ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 366:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 367:Core/Src/main.cpp ****   {
 368:Core/Src/main.cpp ****     Error_Handler();
 369:Core/Src/main.cpp ****   }
 370:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 371:Core/Src/main.cpp ****   {
 372:Core/Src/main.cpp ****     Error_Handler();
ARM GAS  /tmp/ccIebNMm.s 			page 8


 373:Core/Src/main.cpp ****   }
 374:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 375:Core/Src/main.cpp ****   {
 376:Core/Src/main.cpp ****     Error_Handler();
 377:Core/Src/main.cpp ****   }
 378:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 379:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 380:Core/Src/main.cpp ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 381:Core/Src/main.cpp ****   sBreakDeadTimeConfig.DeadTime = 0;
 382:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 383:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 384:Core/Src/main.cpp ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 385:Core/Src/main.cpp ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 386:Core/Src/main.cpp ****   {
 387:Core/Src/main.cpp ****     Error_Handler();
 388:Core/Src/main.cpp ****   }
 389:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM8_Init 2 */
 390:Core/Src/main.cpp **** 
 391:Core/Src/main.cpp ****   /* USER CODE END TIM8_Init 2 */
 392:Core/Src/main.cpp ****   HAL_TIM_MspPostInit(&htim8);
 393:Core/Src/main.cpp **** 
 394:Core/Src/main.cpp **** }
 395:Core/Src/main.cpp **** 
 396:Core/Src/main.cpp **** /**
 397:Core/Src/main.cpp ****   * @brief USART2 Initialization Function
 398:Core/Src/main.cpp ****   * @param None
 399:Core/Src/main.cpp ****   * @retval None
 400:Core/Src/main.cpp ****   */
 401:Core/Src/main.cpp **** static void MX_USART2_UART_Init(void)
 402:Core/Src/main.cpp **** {
 403:Core/Src/main.cpp **** 
 404:Core/Src/main.cpp ****   /* USER CODE BEGIN USART2_Init 0 */
 405:Core/Src/main.cpp **** 
 406:Core/Src/main.cpp ****   /* USER CODE END USART2_Init 0 */
 407:Core/Src/main.cpp **** 
 408:Core/Src/main.cpp ****   /* USER CODE BEGIN USART2_Init 1 */
 409:Core/Src/main.cpp **** 
 410:Core/Src/main.cpp ****   /* USER CODE END USART2_Init 1 */
 411:Core/Src/main.cpp ****   huart2.Instance = USART2;
 412:Core/Src/main.cpp ****   huart2.Init.BaudRate = 115200;
 413:Core/Src/main.cpp ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 414:Core/Src/main.cpp ****   huart2.Init.StopBits = UART_STOPBITS_1;
 415:Core/Src/main.cpp ****   huart2.Init.Parity = UART_PARITY_NONE;
 416:Core/Src/main.cpp ****   huart2.Init.Mode = UART_MODE_TX_RX;
 417:Core/Src/main.cpp ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 418:Core/Src/main.cpp ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 419:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 420:Core/Src/main.cpp ****   {
 421:Core/Src/main.cpp ****     Error_Handler();
 422:Core/Src/main.cpp ****   }
 423:Core/Src/main.cpp ****   /* USER CODE BEGIN USART2_Init 2 */
 424:Core/Src/main.cpp **** 
 425:Core/Src/main.cpp ****   /* USER CODE END USART2_Init 2 */
 426:Core/Src/main.cpp **** 
 427:Core/Src/main.cpp **** }
 428:Core/Src/main.cpp **** 
 429:Core/Src/main.cpp **** /**
ARM GAS  /tmp/ccIebNMm.s 			page 9


 430:Core/Src/main.cpp ****   * @brief GPIO Initialization Function
 431:Core/Src/main.cpp ****   * @param None
 432:Core/Src/main.cpp ****   * @retval None
 433:Core/Src/main.cpp ****   */
 434:Core/Src/main.cpp **** static void MX_GPIO_Init(void)
 435:Core/Src/main.cpp **** {
 436:Core/Src/main.cpp ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 437:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 438:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_1 */
 439:Core/Src/main.cpp **** 
 440:Core/Src/main.cpp ****   /* GPIO Ports Clock Enable */
 441:Core/Src/main.cpp ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 442:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 443:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 444:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 445:Core/Src/main.cpp **** 
 446:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 447:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 448:Core/Src/main.cpp ****                           |GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 449:Core/Src/main.cpp **** 
 450:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 451:Core/Src/main.cpp ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 452:Core/Src/main.cpp **** 
 453:Core/Src/main.cpp ****   /*Configure GPIO pin : B1_Pin */
 454:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = B1_Pin;
 455:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 456:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 457:Core/Src/main.cpp ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 458:Core/Src/main.cpp **** 
 459:Core/Src/main.cpp ****   /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
 460:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 461:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 462:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 463:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 464:Core/Src/main.cpp ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 465:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 466:Core/Src/main.cpp **** 
 467:Core/Src/main.cpp ****   /*Configure GPIO pins : PC0 PC1 PC2 PC3
 468:Core/Src/main.cpp ****                            PC4 PC5 */
 469:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 470:Core/Src/main.cpp ****                           |GPIO_PIN_4|GPIO_PIN_5;
 471:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 472:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 473:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 474:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 475:Core/Src/main.cpp **** 
 476:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 477:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_11, GPIO_PIN_RESET);
 478:Core/Src/main.cpp **** 
 479:Core/Src/main.cpp ****   /*Configure GPIO pin : LD2_Pin */
 480:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = LD2_Pin;
 481:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 482:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 483:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 484:Core/Src/main.cpp ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 485:Core/Src/main.cpp **** 
 486:Core/Src/main.cpp ****     /*Configure GPIO pin : PA11 */
ARM GAS  /tmp/ccIebNMm.s 			page 10


 487:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = GPIO_PIN_11;
 488:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 489:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 490:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 491:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 492:Core/Src/main.cpp **** 
 493:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 494:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_2 */
 495:Core/Src/main.cpp **** }
 496:Core/Src/main.cpp **** 
 497:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 498:Core/Src/main.cpp **** void printlengths(fArr6 l) {
 499:Core/Src/main.cpp ****   char uart_buf[500];
 500:Core/Src/main.cpp ****   unsigned int uart_buf_len = 0;
 501:Core/Src/main.cpp ****   for (uint8_t j = 0; j < 6; j++) {
 502:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "%3.2f ", l[j]);
 503:Core/Src/main.cpp ****   }
 504:Core/Src/main.cpp ****   uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "\r\n");
 505:Core/Src/main.cpp ****   HAL_UART_Transmit(&huart2,(uint8_t *)uart_buf, uart_buf_len, 10);
 506:Core/Src/main.cpp **** }
 507:Core/Src/main.cpp **** /* USER CODE END 4 */
 508:Core/Src/main.cpp **** 
 509:Core/Src/main.cpp **** /**
 510:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 511:Core/Src/main.cpp ****   * @retval None
 512:Core/Src/main.cpp ****   */
 513:Core/Src/main.cpp **** void Error_Handler(void)
 514:Core/Src/main.cpp **** {
 515:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 516:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 517:Core/Src/main.cpp ****   __disable_irq();
 518:Core/Src/main.cpp ****   while (1)
 519:Core/Src/main.cpp ****   {
 520:Core/Src/main.cpp ****   }
 521:Core/Src/main.cpp ****   /* USER CODE END Error_Handler_Debug */
 522:Core/Src/main.cpp **** }
  29              		.loc 1 522 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38              	.LVL0:
  39              	.LBB184:
  40              	.LBI184:
  41              		.file 2 "Application/Include/matrixdefs.h"
   1:Application/Include/matrixdefs.h **** 
   2:Application/Include/matrixdefs.h **** #ifndef MATRIX_DEFS_H
   3:Application/Include/matrixdefs.h **** #define MATRIX_DEFS_H
   4:Application/Include/matrixdefs.h **** #include <cstdint>
   5:Application/Include/matrixdefs.h **** #include <array>
   6:Application/Include/matrixdefs.h **** #include <tuple>
   7:Application/Include/matrixdefs.h **** #include <iostream>
   8:Application/Include/matrixdefs.h **** 
ARM GAS  /tmp/ccIebNMm.s 			page 11


   9:Application/Include/matrixdefs.h **** #define NO_CYLS 6 // One output per cylinder representing linear position
  10:Application/Include/matrixdefs.h **** #define NO_DOF 3 // Pitch, Roll, and Yaw; calculated from transformation matrix
  11:Application/Include/matrixdefs.h **** 
  12:Application/Include/matrixdefs.h **** // Describes a trig operation to be performed. ZERO and ONE simply indicate that the function shoul
  13:Application/Include/matrixdefs.h **** // 0 or 1.
  14:Application/Include/matrixdefs.h **** typedef enum trigEnum { NEGSIN=-3, NEGCOS=-2, NEGONE=-1 ,ZERO=0, ONE=1, COS=2, SIN=3 } trigEnum;
  15:Application/Include/matrixdefs.h **** 
  16:Application/Include/matrixdefs.h **** // Implements a union of int and trigEnum, allowing the implicit conversion seen in the rotation fu
  17:Application/Include/matrixdefs.h **** // This is done to make checking the function matricies at a glance a LOT easier.
  18:Application/Include/matrixdefs.h **** typedef struct trigOp {
  19:Application/Include/matrixdefs.h ****     union {
  20:Application/Include/matrixdefs.h ****     int8_t value;
  21:Application/Include/matrixdefs.h ****     trigEnum enumeration;
  22:Application/Include/matrixdefs.h ****     };
  23:Application/Include/matrixdefs.h **** 
  24:Application/Include/matrixdefs.h ****   operator int() const{
  25:Application/Include/matrixdefs.h ****     return value;
  26:Application/Include/matrixdefs.h ****   }
  27:Application/Include/matrixdefs.h **** 
  28:Application/Include/matrixdefs.h ****   operator trigEnum() const{
  29:Application/Include/matrixdefs.h ****     return enumeration;
  30:Application/Include/matrixdefs.h ****   }
  31:Application/Include/matrixdefs.h **** 
  32:Application/Include/matrixdefs.h ****   trigOp& operator=(int i){
  33:Application/Include/matrixdefs.h ****     this->set(i);
  34:Application/Include/matrixdefs.h ****     return *this;
  35:Application/Include/matrixdefs.h ****   }
  36:Application/Include/matrixdefs.h **** 
  37:Application/Include/matrixdefs.h ****   trigOp& operator=(trigEnum e){
  38:Application/Include/matrixdefs.h ****     this->set(e);
  39:Application/Include/matrixdefs.h ****     return *this;
  40:Application/Include/matrixdefs.h ****   }
  41:Application/Include/matrixdefs.h **** 
  42:Application/Include/matrixdefs.h ****   void set(int i){
  43:Application/Include/matrixdefs.h ****     value = i;
  44:Application/Include/matrixdefs.h ****   }
  45:Application/Include/matrixdefs.h ****   void set(trigEnum e){
  46:Application/Include/matrixdefs.h ****     enumeration = e;
  47:Application/Include/matrixdefs.h ****   }
  48:Application/Include/matrixdefs.h **** 
  49:Application/Include/matrixdefs.h ****   trigOp(int i){
  42              		.loc 2 49 3 view .LVU1
  43              	.LBB185:
  44              	.LBB186:
  45              	.LBI186:
  42:Application/Include/matrixdefs.h ****     value = i;
  46              		.loc 2 42 8 view .LVU2
  47              	.LBB187:
  43:Application/Include/matrixdefs.h ****   }
  48              		.loc 2 43 5 view .LVU3
  43:Application/Include/matrixdefs.h ****   }
  49              		.loc 2 43 11 is_stmt 0 view .LVU4
  50 0002 204A     		ldr	r2, .L3
  51 0004 0125     		movs	r5, #1
  52 0006 1570     		strb	r5, [r2]
  53              	.LVL1:
  43:Application/Include/matrixdefs.h ****   }
ARM GAS  /tmp/ccIebNMm.s 			page 12


  54              		.loc 2 43 11 view .LVU5
  55              	.LBE187:
  56              	.LBE186:
  57              	.LBE185:
  58              	.LBE184:
  59              	.LBB188:
  60              	.LBI188:
  61              		.loc 2 49 3 is_stmt 1 view .LVU6
  62              	.LBB189:
  63              	.LBB190:
  64              	.LBI190:
  42:Application/Include/matrixdefs.h ****     value = i;
  65              		.loc 2 42 8 view .LVU7
  66              	.LBB191:
  43:Application/Include/matrixdefs.h ****   }
  67              		.loc 2 43 5 view .LVU8
  43:Application/Include/matrixdefs.h ****   }
  68              		.loc 2 43 11 is_stmt 0 view .LVU9
  69 0008 0021     		movs	r1, #0
  70 000a 5170     		strb	r1, [r2, #1]
  71              	.LVL2:
  43:Application/Include/matrixdefs.h ****   }
  72              		.loc 2 43 11 view .LVU10
  73              	.LBE191:
  74              	.LBE190:
  75              	.LBE189:
  76              	.LBE188:
  77              	.LBB192:
  78              	.LBI192:
  79              		.loc 2 49 3 is_stmt 1 view .LVU11
  80              	.LBB193:
  81              	.LBB194:
  82              	.LBI194:
  42:Application/Include/matrixdefs.h ****     value = i;
  83              		.loc 2 42 8 view .LVU12
  84              	.LBB195:
  43:Application/Include/matrixdefs.h ****   }
  85              		.loc 2 43 5 view .LVU13
  43:Application/Include/matrixdefs.h ****   }
  86              		.loc 2 43 11 is_stmt 0 view .LVU14
  87 000c 9170     		strb	r1, [r2, #2]
  88              	.LVL3:
  43:Application/Include/matrixdefs.h ****   }
  89              		.loc 2 43 11 view .LVU15
  90              	.LBE195:
  91              	.LBE194:
  92              	.LBE193:
  93              	.LBE192:
  94              	.LBB196:
  95              	.LBI196:
  96              		.loc 2 49 3 is_stmt 1 view .LVU16
  97              	.LBB197:
  98              	.LBB198:
  99              	.LBI198:
  42:Application/Include/matrixdefs.h ****     value = i;
 100              		.loc 2 42 8 view .LVU17
 101              	.LBB199:
ARM GAS  /tmp/ccIebNMm.s 			page 13


  43:Application/Include/matrixdefs.h ****   }
 102              		.loc 2 43 5 view .LVU18
  43:Application/Include/matrixdefs.h ****   }
 103              		.loc 2 43 11 is_stmt 0 view .LVU19
 104 000e D170     		strb	r1, [r2, #3]
 105              	.LVL4:
  43:Application/Include/matrixdefs.h ****   }
 106              		.loc 2 43 11 view .LVU20
 107              	.LBE199:
 108              	.LBE198:
 109              	.LBE197:
 110              	.LBE196:
 111              	.LBB200:
 112              	.LBI200:
 113              		.loc 2 49 3 is_stmt 1 view .LVU21
 114              	.LBB201:
 115              	.LBB202:
 116              	.LBI202:
  42:Application/Include/matrixdefs.h ****     value = i;
 117              		.loc 2 42 8 view .LVU22
 118              	.LBB203:
  43:Application/Include/matrixdefs.h ****   }
 119              		.loc 2 43 5 view .LVU23
  43:Application/Include/matrixdefs.h ****   }
 120              		.loc 2 43 11 is_stmt 0 view .LVU24
 121 0010 0220     		movs	r0, #2
 122 0012 1071     		strb	r0, [r2, #4]
 123              	.LVL5:
  43:Application/Include/matrixdefs.h ****   }
 124              		.loc 2 43 11 view .LVU25
 125              	.LBE203:
 126              	.LBE202:
 127              	.LBE201:
 128              	.LBE200:
 129              	.LBB204:
 130              	.LBI204:
 131              		.loc 2 49 3 is_stmt 1 view .LVU26
 132              	.LBB205:
 133              	.LBB206:
 134              	.LBI206:
  42:Application/Include/matrixdefs.h ****     value = i;
 135              		.loc 2 42 8 view .LVU27
 136              	.LBB207:
  43:Application/Include/matrixdefs.h ****   }
 137              		.loc 2 43 5 view .LVU28
  43:Application/Include/matrixdefs.h ****   }
 138              		.loc 2 43 11 is_stmt 0 view .LVU29
 139 0014 4FF0FD0E 		mov	lr, #253
 140 0018 82F805E0 		strb	lr, [r2, #5]
 141              	.LVL6:
  43:Application/Include/matrixdefs.h ****   }
 142              		.loc 2 43 11 view .LVU30
 143              	.LBE207:
 144              	.LBE206:
 145              	.LBE205:
 146              	.LBE204:
 147              	.LBB208:
ARM GAS  /tmp/ccIebNMm.s 			page 14


 148              	.LBI208:
 149              		.loc 2 49 3 is_stmt 1 view .LVU31
 150              	.LBB209:
 151              	.LBB210:
 152              	.LBI210:
  42:Application/Include/matrixdefs.h ****     value = i;
 153              		.loc 2 42 8 view .LVU32
 154              	.LBB211:
  43:Application/Include/matrixdefs.h ****   }
 155              		.loc 2 43 5 view .LVU33
  43:Application/Include/matrixdefs.h ****   }
 156              		.loc 2 43 11 is_stmt 0 view .LVU34
 157 001c 9171     		strb	r1, [r2, #6]
 158              	.LVL7:
  43:Application/Include/matrixdefs.h ****   }
 159              		.loc 2 43 11 view .LVU35
 160              	.LBE211:
 161              	.LBE210:
 162              	.LBE209:
 163              	.LBE208:
 164              	.LBB212:
 165              	.LBI212:
 166              		.loc 2 49 3 is_stmt 1 view .LVU36
 167              	.LBB213:
 168              	.LBB214:
 169              	.LBI214:
  42:Application/Include/matrixdefs.h ****     value = i;
 170              		.loc 2 42 8 view .LVU37
 171              	.LBB215:
  43:Application/Include/matrixdefs.h ****   }
 172              		.loc 2 43 5 view .LVU38
  43:Application/Include/matrixdefs.h ****   }
 173              		.loc 2 43 11 is_stmt 0 view .LVU39
 174 001e 4FF0030C 		mov	ip, #3
 175 0022 82F807C0 		strb	ip, [r2, #7]
 176              	.LVL8:
  43:Application/Include/matrixdefs.h ****   }
 177              		.loc 2 43 11 view .LVU40
 178              	.LBE215:
 179              	.LBE214:
 180              	.LBE213:
 181              	.LBE212:
 182              	.LBB216:
 183              	.LBI216:
 184              		.loc 2 49 3 is_stmt 1 view .LVU41
 185              	.LBB217:
 186              	.LBB218:
 187              	.LBI218:
  42:Application/Include/matrixdefs.h ****     value = i;
 188              		.loc 2 42 8 view .LVU42
 189              	.LBB219:
  43:Application/Include/matrixdefs.h ****   }
 190              		.loc 2 43 5 view .LVU43
  43:Application/Include/matrixdefs.h ****   }
 191              		.loc 2 43 11 is_stmt 0 view .LVU44
 192 0026 1072     		strb	r0, [r2, #8]
 193              	.LVL9:
ARM GAS  /tmp/ccIebNMm.s 			page 15


  43:Application/Include/matrixdefs.h ****   }
 194              		.loc 2 43 11 view .LVU45
 195              	.LBE219:
 196              	.LBE218:
 197              	.LBE217:
 198              	.LBE216:
 199              	.LBB220:
 200              	.LBI220:
 201              		.loc 2 49 3 is_stmt 1 view .LVU46
 202              	.LBB221:
 203              	.LBB222:
 204              	.LBI222:
  42:Application/Include/matrixdefs.h ****     value = i;
 205              		.loc 2 42 8 view .LVU47
 206              	.LBB223:
  43:Application/Include/matrixdefs.h ****   }
 207              		.loc 2 43 5 view .LVU48
  43:Application/Include/matrixdefs.h ****   }
 208              		.loc 2 43 11 is_stmt 0 view .LVU49
 209 0028 174C     		ldr	r4, .L3+4
 210 002a 2070     		strb	r0, [r4]
 211              	.LVL10:
  43:Application/Include/matrixdefs.h ****   }
 212              		.loc 2 43 11 view .LVU50
 213              	.LBE223:
 214              	.LBE222:
 215              	.LBE221:
 216              	.LBE220:
 217              	.LBB224:
 218              	.LBI224:
 219              		.loc 2 49 3 is_stmt 1 view .LVU51
 220              	.LBB225:
 221              	.LBB226:
 222              	.LBI226:
  42:Application/Include/matrixdefs.h ****     value = i;
 223              		.loc 2 42 8 view .LVU52
 224              	.LBB227:
  43:Application/Include/matrixdefs.h ****   }
 225              		.loc 2 43 5 view .LVU53
  43:Application/Include/matrixdefs.h ****   }
 226              		.loc 2 43 11 is_stmt 0 view .LVU54
 227 002c 6170     		strb	r1, [r4, #1]
 228              	.LVL11:
  43:Application/Include/matrixdefs.h ****   }
 229              		.loc 2 43 11 view .LVU55
 230              	.LBE227:
 231              	.LBE226:
 232              	.LBE225:
 233              	.LBE224:
 234              	.LBB228:
 235              	.LBI228:
 236              		.loc 2 49 3 is_stmt 1 view .LVU56
 237              	.LBB229:
 238              	.LBB230:
 239              	.LBI230:
  42:Application/Include/matrixdefs.h ****     value = i;
 240              		.loc 2 42 8 view .LVU57
ARM GAS  /tmp/ccIebNMm.s 			page 16


 241              	.LBB231:
  43:Application/Include/matrixdefs.h ****   }
 242              		.loc 2 43 5 view .LVU58
  43:Application/Include/matrixdefs.h ****   }
 243              		.loc 2 43 11 is_stmt 0 view .LVU59
 244 002e 84F802C0 		strb	ip, [r4, #2]
 245              	.LVL12:
  43:Application/Include/matrixdefs.h ****   }
 246              		.loc 2 43 11 view .LVU60
 247              	.LBE231:
 248              	.LBE230:
 249              	.LBE229:
 250              	.LBE228:
 251              	.LBB232:
 252              	.LBI232:
 253              		.loc 2 49 3 is_stmt 1 view .LVU61
 254              	.LBB233:
 255              	.LBB234:
 256              	.LBI234:
  42:Application/Include/matrixdefs.h ****     value = i;
 257              		.loc 2 42 8 view .LVU62
 258              	.LBB235:
  43:Application/Include/matrixdefs.h ****   }
 259              		.loc 2 43 5 view .LVU63
  43:Application/Include/matrixdefs.h ****   }
 260              		.loc 2 43 11 is_stmt 0 view .LVU64
 261 0032 E170     		strb	r1, [r4, #3]
 262              	.LVL13:
  43:Application/Include/matrixdefs.h ****   }
 263              		.loc 2 43 11 view .LVU65
 264              	.LBE235:
 265              	.LBE234:
 266              	.LBE233:
 267              	.LBE232:
 268              	.LBB236:
 269              	.LBI236:
 270              		.loc 2 49 3 is_stmt 1 view .LVU66
 271              	.LBB237:
 272              	.LBB238:
 273              	.LBI238:
  42:Application/Include/matrixdefs.h ****     value = i;
 274              		.loc 2 42 8 view .LVU67
 275              	.LBB239:
  43:Application/Include/matrixdefs.h ****   }
 276              		.loc 2 43 5 view .LVU68
  43:Application/Include/matrixdefs.h ****   }
 277              		.loc 2 43 11 is_stmt 0 view .LVU69
 278 0034 2571     		strb	r5, [r4, #4]
 279              	.LVL14:
  43:Application/Include/matrixdefs.h ****   }
 280              		.loc 2 43 11 view .LVU70
 281              	.LBE239:
 282              	.LBE238:
 283              	.LBE237:
 284              	.LBE236:
 285              	.LBB240:
 286              	.LBI240:
ARM GAS  /tmp/ccIebNMm.s 			page 17


 287              		.loc 2 49 3 is_stmt 1 view .LVU71
 288              	.LBB241:
 289              	.LBB242:
 290              	.LBI242:
  42:Application/Include/matrixdefs.h ****     value = i;
 291              		.loc 2 42 8 view .LVU72
 292              	.LBB243:
  43:Application/Include/matrixdefs.h ****   }
 293              		.loc 2 43 5 view .LVU73
  43:Application/Include/matrixdefs.h ****   }
 294              		.loc 2 43 11 is_stmt 0 view .LVU74
 295 0036 6171     		strb	r1, [r4, #5]
 296              	.LVL15:
  43:Application/Include/matrixdefs.h ****   }
 297              		.loc 2 43 11 view .LVU75
 298              	.LBE243:
 299              	.LBE242:
 300              	.LBE241:
 301              	.LBE240:
 302              	.LBB244:
 303              	.LBI244:
 304              		.loc 2 49 3 is_stmt 1 view .LVU76
 305              	.LBB245:
 306              	.LBB246:
 307              	.LBI246:
  42:Application/Include/matrixdefs.h ****     value = i;
 308              		.loc 2 42 8 view .LVU77
 309              	.LBB247:
  43:Application/Include/matrixdefs.h ****   }
 310              		.loc 2 43 5 view .LVU78
  43:Application/Include/matrixdefs.h ****   }
 311              		.loc 2 43 11 is_stmt 0 view .LVU79
 312 0038 84F806E0 		strb	lr, [r4, #6]
 313              	.LVL16:
  43:Application/Include/matrixdefs.h ****   }
 314              		.loc 2 43 11 view .LVU80
 315              	.LBE247:
 316              	.LBE246:
 317              	.LBE245:
 318              	.LBE244:
 319              	.LBB248:
 320              	.LBI248:
 321              		.loc 2 49 3 is_stmt 1 view .LVU81
 322              	.LBB249:
 323              	.LBB250:
 324              	.LBI250:
  42:Application/Include/matrixdefs.h ****     value = i;
 325              		.loc 2 42 8 view .LVU82
 326              	.LBB251:
  43:Application/Include/matrixdefs.h ****   }
 327              		.loc 2 43 5 view .LVU83
  43:Application/Include/matrixdefs.h ****   }
 328              		.loc 2 43 11 is_stmt 0 view .LVU84
 329 003c E171     		strb	r1, [r4, #7]
 330              	.LVL17:
  43:Application/Include/matrixdefs.h ****   }
 331              		.loc 2 43 11 view .LVU85
ARM GAS  /tmp/ccIebNMm.s 			page 18


 332              	.LBE251:
 333              	.LBE250:
 334              	.LBE249:
 335              	.LBE248:
 336              	.LBB252:
 337              	.LBI252:
 338              		.loc 2 49 3 is_stmt 1 view .LVU86
 339              	.LBB253:
 340              	.LBB254:
 341              	.LBI254:
  42:Application/Include/matrixdefs.h ****     value = i;
 342              		.loc 2 42 8 view .LVU87
 343              	.LBB255:
  43:Application/Include/matrixdefs.h ****   }
 344              		.loc 2 43 5 view .LVU88
  43:Application/Include/matrixdefs.h ****   }
 345              		.loc 2 43 11 is_stmt 0 view .LVU89
 346 003e 2072     		strb	r0, [r4, #8]
 347              	.LVL18:
  43:Application/Include/matrixdefs.h ****   }
 348              		.loc 2 43 11 view .LVU90
 349              	.LBE255:
 350              	.LBE254:
 351              	.LBE253:
 352              	.LBE252:
 353              	.LBB256:
 354              	.LBI256:
 355              		.loc 2 49 3 is_stmt 1 view .LVU91
 356              	.LBB257:
 357              	.LBB258:
 358              	.LBI258:
  42:Application/Include/matrixdefs.h ****     value = i;
 359              		.loc 2 42 8 view .LVU92
 360              	.LBB259:
  43:Application/Include/matrixdefs.h ****   }
 361              		.loc 2 43 5 view .LVU93
  43:Application/Include/matrixdefs.h ****   }
 362              		.loc 2 43 11 is_stmt 0 view .LVU94
 363 0040 124B     		ldr	r3, .L3+8
 364 0042 1870     		strb	r0, [r3]
 365              	.LVL19:
  43:Application/Include/matrixdefs.h ****   }
 366              		.loc 2 43 11 view .LVU95
 367              	.LBE259:
 368              	.LBE258:
 369              	.LBE257:
 370              	.LBE256:
 371              	.LBB260:
 372              	.LBI260:
 373              		.loc 2 49 3 is_stmt 1 view .LVU96
 374              	.LBB261:
 375              	.LBB262:
 376              	.LBI262:
  42:Application/Include/matrixdefs.h ****     value = i;
 377              		.loc 2 42 8 view .LVU97
 378              	.LBB263:
  43:Application/Include/matrixdefs.h ****   }
ARM GAS  /tmp/ccIebNMm.s 			page 19


 379              		.loc 2 43 5 view .LVU98
  43:Application/Include/matrixdefs.h ****   }
 380              		.loc 2 43 11 is_stmt 0 view .LVU99
 381 0044 83F801E0 		strb	lr, [r3, #1]
 382              	.LVL20:
  43:Application/Include/matrixdefs.h ****   }
 383              		.loc 2 43 11 view .LVU100
 384              	.LBE263:
 385              	.LBE262:
 386              	.LBE261:
 387              	.LBE260:
 388              	.LBB264:
 389              	.LBI264:
 390              		.loc 2 49 3 is_stmt 1 view .LVU101
 391              	.LBB265:
 392              	.LBB266:
 393              	.LBI266:
  42:Application/Include/matrixdefs.h ****     value = i;
 394              		.loc 2 42 8 view .LVU102
 395              	.LBB267:
  43:Application/Include/matrixdefs.h ****   }
 396              		.loc 2 43 5 view .LVU103
  43:Application/Include/matrixdefs.h ****   }
 397              		.loc 2 43 11 is_stmt 0 view .LVU104
 398 0048 9970     		strb	r1, [r3, #2]
 399              	.LVL21:
  43:Application/Include/matrixdefs.h ****   }
 400              		.loc 2 43 11 view .LVU105
 401              	.LBE267:
 402              	.LBE266:
 403              	.LBE265:
 404              	.LBE264:
 405              	.LBB268:
 406              	.LBI268:
 407              		.loc 2 49 3 is_stmt 1 view .LVU106
 408              	.LBB269:
 409              	.LBB270:
 410              	.LBI270:
  42:Application/Include/matrixdefs.h ****     value = i;
 411              		.loc 2 42 8 view .LVU107
 412              	.LBB271:
  43:Application/Include/matrixdefs.h ****   }
 413              		.loc 2 43 5 view .LVU108
  43:Application/Include/matrixdefs.h ****   }
 414              		.loc 2 43 11 is_stmt 0 view .LVU109
 415 004a 83F803C0 		strb	ip, [r3, #3]
 416              	.LVL22:
  43:Application/Include/matrixdefs.h ****   }
 417              		.loc 2 43 11 view .LVU110
 418              	.LBE271:
 419              	.LBE270:
 420              	.LBE269:
 421              	.LBE268:
 422              	.LBB272:
 423              	.LBI272:
 424              		.loc 2 49 3 is_stmt 1 view .LVU111
 425              	.LBB273:
ARM GAS  /tmp/ccIebNMm.s 			page 20


 426              	.LBB274:
 427              	.LBI274:
  42:Application/Include/matrixdefs.h ****     value = i;
 428              		.loc 2 42 8 view .LVU112
 429              	.LBB275:
  43:Application/Include/matrixdefs.h ****   }
 430              		.loc 2 43 5 view .LVU113
  43:Application/Include/matrixdefs.h ****   }
 431              		.loc 2 43 11 is_stmt 0 view .LVU114
 432 004e 1871     		strb	r0, [r3, #4]
 433              	.LVL23:
  43:Application/Include/matrixdefs.h ****   }
 434              		.loc 2 43 11 view .LVU115
 435              	.LBE275:
 436              	.LBE274:
 437              	.LBE273:
 438              	.LBE272:
 439              	.LBB276:
 440              	.LBI276:
 441              		.loc 2 49 3 is_stmt 1 view .LVU116
 442              	.LBB277:
 443              	.LBB278:
 444              	.LBI278:
  42:Application/Include/matrixdefs.h ****     value = i;
 445              		.loc 2 42 8 view .LVU117
 446              	.LBB279:
  43:Application/Include/matrixdefs.h ****   }
 447              		.loc 2 43 5 view .LVU118
  43:Application/Include/matrixdefs.h ****   }
 448              		.loc 2 43 11 is_stmt 0 view .LVU119
 449 0050 5971     		strb	r1, [r3, #5]
 450              	.LVL24:
  43:Application/Include/matrixdefs.h ****   }
 451              		.loc 2 43 11 view .LVU120
 452              	.LBE279:
 453              	.LBE278:
 454              	.LBE277:
 455              	.LBE276:
 456              	.LBB280:
 457              	.LBI280:
 458              		.loc 2 49 3 is_stmt 1 view .LVU121
 459              	.LBB281:
 460              	.LBB282:
 461              	.LBI282:
  42:Application/Include/matrixdefs.h ****     value = i;
 462              		.loc 2 42 8 view .LVU122
 463              	.LBB283:
  43:Application/Include/matrixdefs.h ****   }
 464              		.loc 2 43 5 view .LVU123
  43:Application/Include/matrixdefs.h ****   }
 465              		.loc 2 43 11 is_stmt 0 view .LVU124
 466 0052 9971     		strb	r1, [r3, #6]
 467              	.LVL25:
  43:Application/Include/matrixdefs.h ****   }
 468              		.loc 2 43 11 view .LVU125
 469              	.LBE283:
 470              	.LBE282:
ARM GAS  /tmp/ccIebNMm.s 			page 21


 471              	.LBE281:
 472              	.LBE280:
 473              	.LBB284:
 474              	.LBI284:
 475              		.loc 2 49 3 is_stmt 1 view .LVU126
 476              	.LBB285:
 477              	.LBB286:
 478              	.LBI286:
  42:Application/Include/matrixdefs.h ****     value = i;
 479              		.loc 2 42 8 view .LVU127
 480              	.LBB287:
  43:Application/Include/matrixdefs.h ****   }
 481              		.loc 2 43 5 view .LVU128
  43:Application/Include/matrixdefs.h ****   }
 482              		.loc 2 43 11 is_stmt 0 view .LVU129
 483 0054 D971     		strb	r1, [r3, #7]
 484              	.LVL26:
  43:Application/Include/matrixdefs.h ****   }
 485              		.loc 2 43 11 view .LVU130
 486              	.LBE287:
 487              	.LBE286:
 488              	.LBE285:
 489              	.LBE284:
 490              	.LBB288:
 491              	.LBI288:
 492              		.loc 2 49 3 is_stmt 1 view .LVU131
 493              	.LBB289:
 494              	.LBB290:
 495              	.LBI290:
  42:Application/Include/matrixdefs.h ****     value = i;
 496              		.loc 2 42 8 view .LVU132
 497              	.LBB291:
  43:Application/Include/matrixdefs.h ****   }
 498              		.loc 2 43 5 view .LVU133
  43:Application/Include/matrixdefs.h ****   }
 499              		.loc 2 43 11 is_stmt 0 view .LVU134
 500 0056 1D72     		strb	r5, [r3, #8]
 501              	.LVL27:
  43:Application/Include/matrixdefs.h ****   }
 502              		.loc 2 43 11 view .LVU135
 503              	.LBE291:
 504              	.LBE290:
 505              	.LBE289:
 506              	.LBE288:
  50:Application/Include/matrixdefs.h ****     this->set(i);
  51:Application/Include/matrixdefs.h ****   }
  52:Application/Include/matrixdefs.h **** } trigOp;
  53:Application/Include/matrixdefs.h **** 
  54:Application/Include/matrixdefs.h **** // Aliases for commonly used array dimensions
  55:Application/Include/matrixdefs.h **** using fArr6 = std::array<float, NO_CYLS>;
  56:Application/Include/matrixdefs.h **** using fArr3 = std::array<float, NO_DOF>;
  57:Application/Include/matrixdefs.h **** 
  58:Application/Include/matrixdefs.h **** // Matricies in 3D cartesian space have 3*3 = 9 elements.
  59:Application/Include/matrixdefs.h **** using mtx3D = std::array<float, NO_DOF*NO_DOF>;
  60:Application/Include/matrixdefs.h **** 
  61:Application/Include/matrixdefs.h **** //using ctrlArr = std::array<Controller, NO_CYLS>;
  62:Application/Include/matrixdefs.h **** using trigOpArr = std::array<trigOp, 9>;
ARM GAS  /tmp/ccIebNMm.s 			page 22


  63:Application/Include/matrixdefs.h **** 
  64:Application/Include/matrixdefs.h **** // Represents the set of vectors which describe ...
  65:Application/Include/matrixdefs.h **** const float MATRIX_b_DATA[NO_CYLS*NO_DOF] = 
  66:Application/Include/matrixdefs.h ****                                 {-1.75, 12.63, 0,
  67:Application/Include/matrixdefs.h ****                                   1.75, 12.63, 0,
  68:Application/Include/matrixdefs.h ****                                   11.81, -4.8, 0,
  69:Application/Include/matrixdefs.h ****                                   10.06,-7.83, 0,
  70:Application/Include/matrixdefs.h ****                                  -10.06,-7.83, 0,
  71:Application/Include/matrixdefs.h ****                                  -11.81, -4.8, 0 };
  72:Application/Include/matrixdefs.h **** 
  73:Application/Include/matrixdefs.h **** // Represents the set of vectors which describe ....
  74:Application/Include/matrixdefs.h **** const float MATRIX_p_DATA[NO_CYLS*NO_DOF] = 
  75:Application/Include/matrixdefs.h ****                                 {-8.1,   6.69, 0,
  76:Application/Include/matrixdefs.h ****                                   8.1,   6.69, 0,
  77:Application/Include/matrixdefs.h ****                                   9.84,  3.67, 0,
  78:Application/Include/matrixdefs.h ****                                   1.74,-10.35, 0,
  79:Application/Include/matrixdefs.h ****                                  -1.74,-10.35, 0,
  80:Application/Include/matrixdefs.h ****                                  -9.84,  3.67, 0 };
  81:Application/Include/matrixdefs.h **** 
  82:Application/Include/matrixdefs.h **** // Represents the cartesian translation of the center of the seat plate
  83:Application/Include/matrixdefs.h **** const float VECTOR_T_DATA[3] = { 0, 0, 23 };
  84:Application/Include/matrixdefs.h **** 
  85:Application/Include/matrixdefs.h **** // Rotation function matricies. Tells Stewart what operations to perform
  86:Application/Include/matrixdefs.h **** // on each angle parameter to calculate the rotation matrix.
  87:Application/Include/matrixdefs.h **** const trigOpArr ROTATION_X = { 1, 0, 0, 0, COS, -SIN, 0, SIN, COS };
  88:Application/Include/matrixdefs.h **** const trigOpArr ROTATION_Y = { COS, 0, SIN, 0, 1, 0, -SIN, 0, COS };
  89:Application/Include/matrixdefs.h **** const trigOpArr ROTATION_Z = { COS, -SIN, 0, SIN, COS, 0, 0, 0, 1 };
  90:Application/Include/matrixdefs.h **** 
  91:Application/Include/matrixdefs.h **** // This is never used; nevertheless, it is included for future use.
  92:Application/Include/matrixdefs.h **** const std::array<trigOpArr,3> ROTATION_COMPONENTS = {ROTATION_X, ROTATION_Y, ROTATION_Z};
 507              		.loc 2 92 88 view .LVU136
 508 0058 0D4D     		ldr	r5, .L3+12
 509 005a AC46     		mov	ip, r5
 510 005c 07CA     		ldm	r2, {r0, r1, r2}
 511 005e ACE80300 		stmia	ip!, {r0, r1}
 512 0062 8CF80020 		strb	r2, [ip]
 513 0066 03CC     		ldmia	r4!, {r0, r1}
 514 0068 C5F80900 		str	r0, [r5, #9]	@ unaligned
 515 006c C5F80D10 		str	r1, [r5, #13]	@ unaligned
 516 0070 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 517 0072 6A74     		strb	r2, [r5, #17]
 518 0074 03CB     		ldmia	r3!, {r0, r1}
 519 0076 C5F81200 		str	r0, [r5, #18]	@ unaligned
 520 007a C5F81610 		str	r1, [r5, #22]	@ unaligned
 521 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 522 0080 AB76     		strb	r3, [r5, #26]
 523              		.loc 1 522 1 view .LVU137
 524 0082 30BD     		pop	{r4, r5, pc}
 525              	.L4:
 526              		.align	2
 527              	.L3:
 528 0084 00000000 		.word	_ZL10ROTATION_X
 529 0088 00000000 		.word	_ZL10ROTATION_Y
 530 008c 00000000 		.word	_ZL10ROTATION_Z
 531 0090 00000000 		.word	_ZL19ROTATION_COMPONENTS
 532              		.cfi_endproc
 533              	.LFE3376:
ARM GAS  /tmp/ccIebNMm.s 			page 23


 534              		.cantunwind
 535              		.fnend
 537              		.section	.text._ZL12MX_GPIO_Initv,"ax",%progbits
 538              		.align	1
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 543              	_ZL12MX_GPIO_Initv:
 544              		.fnstart
 545              	.LFB2697:
 435:Core/Src/main.cpp ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 546              		.loc 1 435 1 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 40
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 551              		.save {r4, r5, r6, r7, lr}
 552              		.cfi_def_cfa_offset 20
 553              		.cfi_offset 4, -20
 554              		.cfi_offset 5, -16
 555              		.cfi_offset 6, -12
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558              		.pad #44
 559 0002 8BB0     		sub	sp, sp, #44
 560              		.cfi_def_cfa_offset 64
 436:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 561              		.loc 1 436 3 view .LVU139
 436:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 562              		.loc 1 436 20 is_stmt 0 view .LVU140
 563 0004 0024     		movs	r4, #0
 564 0006 0594     		str	r4, [sp, #20]
 565 0008 0694     		str	r4, [sp, #24]
 566 000a 0794     		str	r4, [sp, #28]
 567 000c 0894     		str	r4, [sp, #32]
 568 000e 0994     		str	r4, [sp, #36]
 441:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 569              		.loc 1 441 3 is_stmt 1 view .LVU141
 570              	.LBB292:
 441:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 571              		.loc 1 441 3 view .LVU142
 572 0010 0194     		str	r4, [sp, #4]
 441:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 573              		.loc 1 441 3 view .LVU143
 574 0012 394B     		ldr	r3, .L7
 575 0014 1A6B     		ldr	r2, [r3, #48]
 576 0016 42F00402 		orr	r2, r2, #4
 577 001a 1A63     		str	r2, [r3, #48]
 441:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 578              		.loc 1 441 3 view .LVU144
 579 001c 1A6B     		ldr	r2, [r3, #48]
 580 001e 02F00402 		and	r2, r2, #4
 581 0022 0192     		str	r2, [sp, #4]
 441:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 582              		.loc 1 441 3 view .LVU145
 583 0024 019A     		ldr	r2, [sp, #4]
 584              	.LBE292:
ARM GAS  /tmp/ccIebNMm.s 			page 24


 441:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 585              		.loc 1 441 3 view .LVU146
 442:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 586              		.loc 1 442 3 view .LVU147
 587              	.LBB293:
 442:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 588              		.loc 1 442 3 view .LVU148
 589 0026 0294     		str	r4, [sp, #8]
 442:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 590              		.loc 1 442 3 view .LVU149
 591 0028 1A6B     		ldr	r2, [r3, #48]
 592 002a 42F08002 		orr	r2, r2, #128
 593 002e 1A63     		str	r2, [r3, #48]
 442:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 594              		.loc 1 442 3 view .LVU150
 595 0030 1A6B     		ldr	r2, [r3, #48]
 596 0032 02F08002 		and	r2, r2, #128
 597 0036 0292     		str	r2, [sp, #8]
 442:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 598              		.loc 1 442 3 view .LVU151
 599 0038 029A     		ldr	r2, [sp, #8]
 600              	.LBE293:
 442:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 601              		.loc 1 442 3 view .LVU152
 443:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 602              		.loc 1 443 3 view .LVU153
 603              	.LBB294:
 443:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 604              		.loc 1 443 3 view .LVU154
 605 003a 0394     		str	r4, [sp, #12]
 443:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 606              		.loc 1 443 3 view .LVU155
 607 003c 1A6B     		ldr	r2, [r3, #48]
 608 003e 42F00102 		orr	r2, r2, #1
 609 0042 1A63     		str	r2, [r3, #48]
 443:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 610              		.loc 1 443 3 view .LVU156
 611 0044 1A6B     		ldr	r2, [r3, #48]
 612 0046 02F00102 		and	r2, r2, #1
 613 004a 0392     		str	r2, [sp, #12]
 443:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 614              		.loc 1 443 3 view .LVU157
 615 004c 039A     		ldr	r2, [sp, #12]
 616              	.LBE294:
 443:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 617              		.loc 1 443 3 view .LVU158
 444:Core/Src/main.cpp **** 
 618              		.loc 1 444 3 view .LVU159
 619              	.LBB295:
 444:Core/Src/main.cpp **** 
 620              		.loc 1 444 3 view .LVU160
 621 004e 0494     		str	r4, [sp, #16]
 444:Core/Src/main.cpp **** 
 622              		.loc 1 444 3 view .LVU161
 623 0050 1A6B     		ldr	r2, [r3, #48]
 624 0052 42F00202 		orr	r2, r2, #2
 625 0056 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccIebNMm.s 			page 25


 444:Core/Src/main.cpp **** 
 626              		.loc 1 444 3 view .LVU162
 627 0058 1B6B     		ldr	r3, [r3, #48]
 628 005a 03F00203 		and	r3, r3, #2
 629 005e 0493     		str	r3, [sp, #16]
 444:Core/Src/main.cpp **** 
 630              		.loc 1 444 3 view .LVU163
 631 0060 049B     		ldr	r3, [sp, #16]
 632              	.LBE295:
 444:Core/Src/main.cpp **** 
 633              		.loc 1 444 3 view .LVU164
 447:Core/Src/main.cpp ****                           |GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 634              		.loc 1 447 3 view .LVU165
 447:Core/Src/main.cpp ****                           |GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 635              		.loc 1 447 20 is_stmt 0 view .LVU166
 636 0062 264E     		ldr	r6, .L7+4
 637 0064 2246     		mov	r2, r4
 638 0066 3F21     		movs	r1, #63
 639 0068 3046     		mov	r0, r6
 640 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 641              	.LVL28:
 451:Core/Src/main.cpp **** 
 642              		.loc 1 451 3 is_stmt 1 view .LVU167
 451:Core/Src/main.cpp **** 
 643              		.loc 1 451 20 is_stmt 0 view .LVU168
 644 006e 244D     		ldr	r5, .L7+8
 645 0070 2246     		mov	r2, r4
 646 0072 2021     		movs	r1, #32
 647 0074 2846     		mov	r0, r5
 648 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 649              	.LVL29:
 454:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 650              		.loc 1 454 3 is_stmt 1 view .LVU169
 454:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 651              		.loc 1 454 23 is_stmt 0 view .LVU170
 652 007a 4FF40053 		mov	r3, #8192
 653 007e 0593     		str	r3, [sp, #20]
 455:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 654              		.loc 1 455 3 is_stmt 1 view .LVU171
 455:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 655              		.loc 1 455 24 is_stmt 0 view .LVU172
 656 0080 4FF40413 		mov	r3, #2162688
 657 0084 0693     		str	r3, [sp, #24]
 456:Core/Src/main.cpp ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 658              		.loc 1 456 3 is_stmt 1 view .LVU173
 456:Core/Src/main.cpp ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 659              		.loc 1 456 24 is_stmt 0 view .LVU174
 660 0086 0794     		str	r4, [sp, #28]
 457:Core/Src/main.cpp **** 
 661              		.loc 1 457 3 is_stmt 1 view .LVU175
 457:Core/Src/main.cpp **** 
 662              		.loc 1 457 16 is_stmt 0 view .LVU176
 663 0088 05A9     		add	r1, sp, #20
 664 008a 3046     		mov	r0, r6
 665 008c FFF7FEFF 		bl	HAL_GPIO_Init
 666              	.LVL30:
 460:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccIebNMm.s 			page 26


 667              		.loc 1 460 3 is_stmt 1 view .LVU177
 460:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 668              		.loc 1 460 23 is_stmt 0 view .LVU178
 669 0090 0C23     		movs	r3, #12
 670 0092 0593     		str	r3, [sp, #20]
 461:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 671              		.loc 1 461 3 is_stmt 1 view .LVU179
 461:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 672              		.loc 1 461 24 is_stmt 0 view .LVU180
 673 0094 0223     		movs	r3, #2
 674 0096 0693     		str	r3, [sp, #24]
 462:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 675              		.loc 1 462 3 is_stmt 1 view .LVU181
 462:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 676              		.loc 1 462 24 is_stmt 0 view .LVU182
 677 0098 0794     		str	r4, [sp, #28]
 463:Core/Src/main.cpp ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 678              		.loc 1 463 3 is_stmt 1 view .LVU183
 463:Core/Src/main.cpp ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 679              		.loc 1 463 25 is_stmt 0 view .LVU184
 680 009a 0323     		movs	r3, #3
 681 009c 0893     		str	r3, [sp, #32]
 464:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 682              		.loc 1 464 3 is_stmt 1 view .LVU185
 464:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 683              		.loc 1 464 29 is_stmt 0 view .LVU186
 684 009e 0723     		movs	r3, #7
 685 00a0 0993     		str	r3, [sp, #36]
 465:Core/Src/main.cpp **** 
 686              		.loc 1 465 3 is_stmt 1 view .LVU187
 465:Core/Src/main.cpp **** 
 687              		.loc 1 465 16 is_stmt 0 view .LVU188
 688 00a2 05A9     		add	r1, sp, #20
 689 00a4 2846     		mov	r0, r5
 690 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 691              	.LVL31:
 469:Core/Src/main.cpp ****                           |GPIO_PIN_4|GPIO_PIN_5;
 692              		.loc 1 469 3 is_stmt 1 view .LVU189
 469:Core/Src/main.cpp ****                           |GPIO_PIN_4|GPIO_PIN_5;
 693              		.loc 1 469 23 is_stmt 0 view .LVU190
 694 00aa 3F23     		movs	r3, #63
 695 00ac 0593     		str	r3, [sp, #20]
 471:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 696              		.loc 1 471 3 is_stmt 1 view .LVU191
 471:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 697              		.loc 1 471 24 is_stmt 0 view .LVU192
 698 00ae 1127     		movs	r7, #17
 699 00b0 0697     		str	r7, [sp, #24]
 472:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 700              		.loc 1 472 3 is_stmt 1 view .LVU193
 472:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 701              		.loc 1 472 24 is_stmt 0 view .LVU194
 702 00b2 0794     		str	r4, [sp, #28]
 473:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 703              		.loc 1 473 3 is_stmt 1 view .LVU195
 473:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 704              		.loc 1 473 25 is_stmt 0 view .LVU196
ARM GAS  /tmp/ccIebNMm.s 			page 27


 705 00b4 0894     		str	r4, [sp, #32]
 474:Core/Src/main.cpp **** 
 706              		.loc 1 474 3 is_stmt 1 view .LVU197
 474:Core/Src/main.cpp **** 
 707              		.loc 1 474 16 is_stmt 0 view .LVU198
 708 00b6 05A9     		add	r1, sp, #20
 709 00b8 3046     		mov	r0, r6
 710 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 711              	.LVL32:
 477:Core/Src/main.cpp **** 
 712              		.loc 1 477 3 is_stmt 1 view .LVU199
 477:Core/Src/main.cpp **** 
 713              		.loc 1 477 20 is_stmt 0 view .LVU200
 714 00be 2246     		mov	r2, r4
 715 00c0 4FF40261 		mov	r1, #2080
 716 00c4 2846     		mov	r0, r5
 717 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 718              	.LVL33:
 480:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 719              		.loc 1 480 3 is_stmt 1 view .LVU201
 480:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 720              		.loc 1 480 23 is_stmt 0 view .LVU202
 721 00ca 2023     		movs	r3, #32
 722 00cc 0593     		str	r3, [sp, #20]
 481:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 723              		.loc 1 481 3 is_stmt 1 view .LVU203
 481:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 724              		.loc 1 481 24 is_stmt 0 view .LVU204
 725 00ce 0123     		movs	r3, #1
 726 00d0 0693     		str	r3, [sp, #24]
 482:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 727              		.loc 1 482 3 is_stmt 1 view .LVU205
 482:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 728              		.loc 1 482 24 is_stmt 0 view .LVU206
 729 00d2 0794     		str	r4, [sp, #28]
 483:Core/Src/main.cpp ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 730              		.loc 1 483 3 is_stmt 1 view .LVU207
 483:Core/Src/main.cpp ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 731              		.loc 1 483 25 is_stmt 0 view .LVU208
 732 00d4 0894     		str	r4, [sp, #32]
 484:Core/Src/main.cpp **** 
 733              		.loc 1 484 3 is_stmt 1 view .LVU209
 484:Core/Src/main.cpp **** 
 734              		.loc 1 484 16 is_stmt 0 view .LVU210
 735 00d6 05A9     		add	r1, sp, #20
 736 00d8 2846     		mov	r0, r5
 737 00da FFF7FEFF 		bl	HAL_GPIO_Init
 738              	.LVL34:
 487:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 739              		.loc 1 487 3 is_stmt 1 view .LVU211
 487:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 740              		.loc 1 487 23 is_stmt 0 view .LVU212
 741 00de 4FF40063 		mov	r3, #2048
 742 00e2 0593     		str	r3, [sp, #20]
 488:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 743              		.loc 1 488 3 is_stmt 1 view .LVU213
 488:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccIebNMm.s 			page 28


 744              		.loc 1 488 24 is_stmt 0 view .LVU214
 745 00e4 0697     		str	r7, [sp, #24]
 489:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 746              		.loc 1 489 3 is_stmt 1 view .LVU215
 489:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 747              		.loc 1 489 24 is_stmt 0 view .LVU216
 748 00e6 0794     		str	r4, [sp, #28]
 490:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 749              		.loc 1 490 3 is_stmt 1 view .LVU217
 490:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 750              		.loc 1 490 25 is_stmt 0 view .LVU218
 751 00e8 0894     		str	r4, [sp, #32]
 491:Core/Src/main.cpp **** 
 752              		.loc 1 491 3 is_stmt 1 view .LVU219
 491:Core/Src/main.cpp **** 
 753              		.loc 1 491 16 is_stmt 0 view .LVU220
 754 00ea 05A9     		add	r1, sp, #20
 755 00ec 2846     		mov	r0, r5
 756 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 757              	.LVL35:
 495:Core/Src/main.cpp **** 
 758              		.loc 1 495 1 view .LVU221
 759 00f2 0BB0     		add	sp, sp, #44
 760              		.cfi_def_cfa_offset 20
 761              		@ sp needed
 762 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 763              	.L8:
 764 00f6 00BF     		.align	2
 765              	.L7:
 766 00f8 00380240 		.word	1073887232
 767 00fc 00080240 		.word	1073874944
 768 0100 00000240 		.word	1073872896
 769              		.cfi_endproc
 770              	.LFE2697:
 771              		.fnend
 773              		.global	__aeabi_f2d
 774              		.section	.rodata._Z12printlengthsSt5arrayIfLj6EE.str1.4,"aMS",%progbits,1
 775              		.align	2
 776              	.LC1:
 777 0000 25332E32 		.ascii	"%3.2f \000"
 777      662000
 778 0007 00       		.align	2
 779              	.LC2:
 780 0008 0D0A00   		.ascii	"\015\012\000"
 781              		.section	.text._Z12printlengthsSt5arrayIfLj6EE,"ax",%progbits
 782              		.align	1
 783              		.global	_Z12printlengthsSt5arrayIfLj6EE
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 788              	_Z12printlengthsSt5arrayIfLj6EE:
 789              		.fnstart
 790              	.LFB2698:
 498:Core/Src/main.cpp ****   char uart_buf[500];
 791              		.loc 1 498 28 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 24, pretend = 16, frame = 504
ARM GAS  /tmp/ccIebNMm.s 			page 29


 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		.pad #16
 796 0000 84B0     		sub	sp, sp, #16
 797              		.cfi_def_cfa_offset 16
 798 0002 70B5     		push	{r4, r5, r6, lr}
 799              		.save {r4, r5, r6, lr}
 800              		.cfi_def_cfa_offset 32
 801              		.cfi_offset 4, -32
 802              		.cfi_offset 5, -28
 803              		.cfi_offset 6, -24
 804              		.cfi_offset 14, -20
 805              		.pad #504
 806 0004 FEB0     		sub	sp, sp, #504
 807              		.cfi_def_cfa_offset 536
 808 0006 82AC     		add	r4, sp, #520
 809 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 499:Core/Src/main.cpp ****   unsigned int uart_buf_len = 0;
 810              		.loc 1 499 3 view .LVU223
 500:Core/Src/main.cpp ****   for (uint8_t j = 0; j < 6; j++) {
 811              		.loc 1 500 3 view .LVU224
 812              	.LVL36:
 501:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "%3.2f ", l[j]);
 813              		.loc 1 501 3 view .LVU225
 814              	.LBB296:
 501:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "%3.2f ", l[j]);
 815              		.loc 1 501 16 is_stmt 0 view .LVU226
 816 000c 0024     		movs	r4, #0
 817              	.LBE296:
 500:Core/Src/main.cpp ****   for (uint8_t j = 0; j < 6; j++) {
 818              		.loc 1 500 16 view .LVU227
 819 000e 2646     		mov	r6, r4
 820              	.LBB298:
 501:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "%3.2f ", l[j]);
 821              		.loc 1 501 3 view .LVU228
 822 0010 13E0     		b	.L10
 823              	.LVL37:
 824              	.L11:
 502:Core/Src/main.cpp ****   }
 825              		.loc 1 502 5 is_stmt 1 view .LVU229
 502:Core/Src/main.cpp ****   }
 826              		.loc 1 502 46 is_stmt 0 view .LVU230
 827 0012 01A8     		add	r0, sp, #4
 828 0014 FFF7FEFF 		bl	strlen
 829              	.LVL38:
 830 0018 0546     		mov	r5, r0
 831              	.LVL39:
 832              	.LBB297:
 833              	.LBI297:
 834              		.file 3 "/usr/arm-none-eabi/include/c++/13.2.0/array"
   1:/usr/arm-none-eabi/include/c++/13.2.0/array **** // <array> -*- C++ -*-
   2:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
   3:/usr/arm-none-eabi/include/c++/13.2.0/array **** // Copyright (C) 2007-2023 Free Software Foundation, Inc.
   4:/usr/arm-none-eabi/include/c++/13.2.0/array **** //
   5:/usr/arm-none-eabi/include/c++/13.2.0/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/arm-none-eabi/include/c++/13.2.0/array **** // software; you can redistribute it and/or modify it under the
   7:/usr/arm-none-eabi/include/c++/13.2.0/array **** // terms of the GNU General Public License as published by the
   8:/usr/arm-none-eabi/include/c++/13.2.0/array **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /tmp/ccIebNMm.s 			page 30


   9:/usr/arm-none-eabi/include/c++/13.2.0/array **** // any later version.
  10:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  11:/usr/arm-none-eabi/include/c++/13.2.0/array **** // This library is distributed in the hope that it will be useful,
  12:/usr/arm-none-eabi/include/c++/13.2.0/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/arm-none-eabi/include/c++/13.2.0/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/arm-none-eabi/include/c++/13.2.0/array **** // GNU General Public License for more details.
  15:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  16:/usr/arm-none-eabi/include/c++/13.2.0/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/arm-none-eabi/include/c++/13.2.0/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/arm-none-eabi/include/c++/13.2.0/array **** // 3.1, as published by the Free Software Foundation.
  19:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  20:/usr/arm-none-eabi/include/c++/13.2.0/array **** // You should have received a copy of the GNU General Public License and
  21:/usr/arm-none-eabi/include/c++/13.2.0/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/arm-none-eabi/include/c++/13.2.0/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/arm-none-eabi/include/c++/13.2.0/array **** // <http://www.gnu.org/licenses/>.
  24:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  25:/usr/arm-none-eabi/include/c++/13.2.0/array **** /** @file include/array
  26:/usr/arm-none-eabi/include/c++/13.2.0/array ****  *  This is a Standard C++ Library header.
  27:/usr/arm-none-eabi/include/c++/13.2.0/array ****  */
  28:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  29:/usr/arm-none-eabi/include/c++/13.2.0/array **** #ifndef _GLIBCXX_ARRAY
  30:/usr/arm-none-eabi/include/c++/13.2.0/array **** #define _GLIBCXX_ARRAY 1
  31:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  32:/usr/arm-none-eabi/include/c++/13.2.0/array **** #pragma GCC system_header
  33:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  34:/usr/arm-none-eabi/include/c++/13.2.0/array **** #if __cplusplus < 201103L
  35:/usr/arm-none-eabi/include/c++/13.2.0/array **** # include <bits/c++0x_warning.h>
  36:/usr/arm-none-eabi/include/c++/13.2.0/array **** #else
  37:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  38:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <compare>
  39:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <initializer_list>
  40:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  41:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <type_traits>
  42:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/functexcept.h>
  43:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/stl_algobase.h>
  44:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/range_access.h> // std::begin, std::end etc.
  45:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <bits/utility.h>      // std::index_sequence, std::tuple_size
  46:/usr/arm-none-eabi/include/c++/13.2.0/array **** #include <debug/assertions.h>
  47:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  48:/usr/arm-none-eabi/include/c++/13.2.0/array **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/arm-none-eabi/include/c++/13.2.0/array **** {
  50:/usr/arm-none-eabi/include/c++/13.2.0/array **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  52:/usr/arm-none-eabi/include/c++/13.2.0/array ****   template<typename _Tp, size_t _Nm>
  53:/usr/arm-none-eabi/include/c++/13.2.0/array ****     struct __array_traits
  54:/usr/arm-none-eabi/include/c++/13.2.0/array ****     {
  55:/usr/arm-none-eabi/include/c++/13.2.0/array ****       using _Type = _Tp[_Nm];
  56:/usr/arm-none-eabi/include/c++/13.2.0/array ****       using _Is_swappable = __is_swappable<_Tp>;
  57:/usr/arm-none-eabi/include/c++/13.2.0/array ****       using _Is_nothrow_swappable = __is_nothrow_swappable<_Tp>;
  58:/usr/arm-none-eabi/include/c++/13.2.0/array ****     };
  59:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  60:/usr/arm-none-eabi/include/c++/13.2.0/array ****  template<typename _Tp>
  61:/usr/arm-none-eabi/include/c++/13.2.0/array ****    struct __array_traits<_Tp, 0>
  62:/usr/arm-none-eabi/include/c++/13.2.0/array ****    {
  63:/usr/arm-none-eabi/include/c++/13.2.0/array ****      // Empty type used instead of _Tp[0] for std::array<_Tp, 0>.
  64:/usr/arm-none-eabi/include/c++/13.2.0/array ****      struct _Type
  65:/usr/arm-none-eabi/include/c++/13.2.0/array ****      {
ARM GAS  /tmp/ccIebNMm.s 			page 31


  66:/usr/arm-none-eabi/include/c++/13.2.0/array ****        // Indexing is undefined.
  67:/usr/arm-none-eabi/include/c++/13.2.0/array ****        __attribute__((__always_inline__,__noreturn__))
  68:/usr/arm-none-eabi/include/c++/13.2.0/array ****        _Tp& operator[](size_t) const noexcept { __builtin_trap(); }
  69:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  70:/usr/arm-none-eabi/include/c++/13.2.0/array ****        // Conversion to a pointer produces a null pointer.
  71:/usr/arm-none-eabi/include/c++/13.2.0/array ****        __attribute__((__always_inline__))
  72:/usr/arm-none-eabi/include/c++/13.2.0/array ****        constexpr explicit operator _Tp*() const noexcept { return nullptr; }
  73:/usr/arm-none-eabi/include/c++/13.2.0/array ****      };
  74:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  75:/usr/arm-none-eabi/include/c++/13.2.0/array ****      using _Is_swappable = true_type;
  76:/usr/arm-none-eabi/include/c++/13.2.0/array ****      using _Is_nothrow_swappable = true_type;
  77:/usr/arm-none-eabi/include/c++/13.2.0/array ****    };
  78:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
  79:/usr/arm-none-eabi/include/c++/13.2.0/array ****   /**
  80:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  82:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @ingroup sequences
  83:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  84:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  <a href="tables.html#67">sequence</a>.
  87:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  88:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  Sets support random access iterators.
  89:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *
  90:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:/usr/arm-none-eabi/include/c++/13.2.0/array ****    *  @tparam  Nm  Number of elements.
  92:/usr/arm-none-eabi/include/c++/13.2.0/array ****   */
  93:/usr/arm-none-eabi/include/c++/13.2.0/array ****   template<typename _Tp, std::size_t _Nm>
  94:/usr/arm-none-eabi/include/c++/13.2.0/array ****     struct array
  95:/usr/arm-none-eabi/include/c++/13.2.0/array ****     {
  96:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef _Tp 	    			      value_type;
  97:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef value_type*			      pointer;
  98:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef const value_type*                       const_pointer;
  99:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef value_type&                   	      reference;
 100:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef const value_type&             	      const_reference;
 101:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef value_type*          		      iterator;
 102:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef const value_type*			      const_iterator;
 103:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::size_t                    	      size_type;
 104:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 108:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Support for zero-sized arrays mandatory.
 109:/usr/arm-none-eabi/include/c++/13.2.0/array ****       typename __array_traits<_Tp, _Nm>::_Type        _M_elems;
 110:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 111:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // No explicit construct/copy/destroy for aggregate type.
 112:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 113:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // DR 776.
 114:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX20_CONSTEXPR void
 115:/usr/arm-none-eabi/include/c++/13.2.0/array ****       fill(const value_type& __u)
 116:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { std::fill_n(begin(), size(), __u); }
 117:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 118:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX20_CONSTEXPR void
 119:/usr/arm-none-eabi/include/c++/13.2.0/array ****       swap(array& __other)
 120:/usr/arm-none-eabi/include/c++/13.2.0/array ****       noexcept(__array_traits<_Tp, _Nm>::_Is_nothrow_swappable::value)
 121:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 122:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
ARM GAS  /tmp/ccIebNMm.s 			page 32


 123:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Iterators.
 124:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 125:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR iterator
 126:/usr/arm-none-eabi/include/c++/13.2.0/array ****       begin() noexcept
 127:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return iterator(data()); }
 128:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 129:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 130:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 131:/usr/arm-none-eabi/include/c++/13.2.0/array ****       begin() const noexcept
 132:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data()); }
 133:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 134:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 135:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR iterator
 136:/usr/arm-none-eabi/include/c++/13.2.0/array ****       end() noexcept
 137:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return iterator(data() + _Nm); }
 138:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 139:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 140:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 141:/usr/arm-none-eabi/include/c++/13.2.0/array ****       end() const noexcept
 142:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data() + _Nm); }
 143:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 144:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 145:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 146:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rbegin() noexcept
 147:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return reverse_iterator(end()); }
 148:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 149:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 150:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 151:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rbegin() const noexcept
 152:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(end()); }
 153:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 154:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__gnu__::__const__, __nodiscard__]]
 155:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 156:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rend() noexcept
 157:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return reverse_iterator(begin()); }
 158:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 159:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 160:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 161:/usr/arm-none-eabi/include/c++/13.2.0/array ****       rend() const noexcept
 162:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(begin()); }
 163:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 164:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 165:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 166:/usr/arm-none-eabi/include/c++/13.2.0/array ****       cbegin() const noexcept
 167:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data()); }
 168:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 169:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 170:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 171:/usr/arm-none-eabi/include/c++/13.2.0/array ****       cend() const noexcept
 172:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_iterator(data() + _Nm); }
 173:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 174:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 175:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 176:/usr/arm-none-eabi/include/c++/13.2.0/array ****       crbegin() const noexcept
 177:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(end()); }
 178:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 179:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
ARM GAS  /tmp/ccIebNMm.s 			page 33


 180:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 181:/usr/arm-none-eabi/include/c++/13.2.0/array ****       crend() const noexcept
 182:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return const_reverse_iterator(begin()); }
 183:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 184:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Capacity.
 185:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
 186:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr size_type
 187:/usr/arm-none-eabi/include/c++/13.2.0/array ****       size() const noexcept { return _Nm; }
 188:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 189:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
 190:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr size_type
 191:/usr/arm-none-eabi/include/c++/13.2.0/array ****       max_size() const noexcept { return _Nm; }
 192:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 193:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
 194:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr bool
 195:/usr/arm-none-eabi/include/c++/13.2.0/array ****       empty() const noexcept { return size() == 0; }
 196:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 197:/usr/arm-none-eabi/include/c++/13.2.0/array ****       // Element access.
 198:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 199:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reference
 200:/usr/arm-none-eabi/include/c++/13.2.0/array ****       operator[](size_type __n) noexcept
 835              		.loc 3 200 7 is_stmt 1 view .LVU231
 836              		.loc 3 200 7 is_stmt 0 view .LVU232
 837              	.LBE297:
 502:Core/Src/main.cpp ****   }
 838              		.loc 1 502 28 discriminator 2 view .LVU233
 839 001a 82AB     		add	r3, sp, #520
 840 001c 03EB8403 		add	r3, r3, r4, lsl #2
 841 0020 1868     		ldr	r0, [r3]	@ float
 842 0022 FFF7FEFF 		bl	__aeabi_f2d
 843              	.LVL40:
 844 0026 0246     		mov	r2, r0
 845 0028 0B46     		mov	r3, r1
 846 002a 1049     		ldr	r1, .L13
 847 002c 01A8     		add	r0, sp, #4
 848 002e 2844     		add	r0, r0, r5
 849 0030 FFF7FEFF 		bl	sprintf
 850              	.LVL41:
 502:Core/Src/main.cpp ****   }
 851              		.loc 1 502 18 discriminator 3 view .LVU234
 852 0034 0644     		add	r6, r6, r0
 853              	.LVL42:
 501:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "%3.2f ", l[j]);
 854              		.loc 1 501 3 is_stmt 1 discriminator 3 view .LVU235
 855 0036 0134     		adds	r4, r4, #1
 856              	.LVL43:
 501:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "%3.2f ", l[j]);
 857              		.loc 1 501 3 is_stmt 0 discriminator 3 view .LVU236
 858 0038 E4B2     		uxtb	r4, r4
 859              	.LVL44:
 860              	.L10:
 501:Core/Src/main.cpp ****     uart_buf_len += sprintf(uart_buf + strlen(uart_buf), "%3.2f ", l[j]);
 861              		.loc 1 501 25 is_stmt 1 discriminator 1 view .LVU237
 862 003a 052C     		cmp	r4, #5
 863 003c E9D9     		bls	.L11
 864              	.LBE298:
 504:Core/Src/main.cpp ****   HAL_UART_Transmit(&huart2,(uint8_t *)uart_buf, uart_buf_len, 10);
ARM GAS  /tmp/ccIebNMm.s 			page 34


 865              		.loc 1 504 3 view .LVU238
 504:Core/Src/main.cpp ****   HAL_UART_Transmit(&huart2,(uint8_t *)uart_buf, uart_buf_len, 10);
 866              		.loc 1 504 44 is_stmt 0 view .LVU239
 867 003e 01AC     		add	r4, sp, #4
 868              	.LVL45:
 504:Core/Src/main.cpp ****   HAL_UART_Transmit(&huart2,(uint8_t *)uart_buf, uart_buf_len, 10);
 869              		.loc 1 504 44 view .LVU240
 870 0040 2046     		mov	r0, r4
 871 0042 FFF7FEFF 		bl	strlen
 872              	.LVL46:
 504:Core/Src/main.cpp ****   HAL_UART_Transmit(&huart2,(uint8_t *)uart_buf, uart_buf_len, 10);
 873              		.loc 1 504 26 discriminator 1 view .LVU241
 874 0046 2218     		adds	r2, r4, r0
 875 0048 094B     		ldr	r3, .L13+4
 876 004a 1988     		ldrh	r1, [r3]	@ unaligned
 877 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 878 004e 2152     		strh	r1, [r4, r0]	@ unaligned
 879 0050 9370     		strb	r3, [r2, #2]
 504:Core/Src/main.cpp ****   HAL_UART_Transmit(&huart2,(uint8_t *)uart_buf, uart_buf_len, 10);
 880              		.loc 1 504 16 discriminator 2 view .LVU242
 881 0052 B21C     		adds	r2, r6, #2
 882              	.LVL47:
 505:Core/Src/main.cpp **** }
 883              		.loc 1 505 3 is_stmt 1 view .LVU243
 505:Core/Src/main.cpp **** }
 884              		.loc 1 505 20 is_stmt 0 view .LVU244
 885 0054 0A23     		movs	r3, #10
 886 0056 92B2     		uxth	r2, r2
 887              	.LVL48:
 505:Core/Src/main.cpp **** }
 888              		.loc 1 505 20 view .LVU245
 889 0058 2146     		mov	r1, r4
 890 005a 0648     		ldr	r0, .L13+8
 891 005c FFF7FEFF 		bl	HAL_UART_Transmit
 892              	.LVL49:
 506:Core/Src/main.cpp **** /* USER CODE END 4 */
 893              		.loc 1 506 1 view .LVU246
 894 0060 7EB0     		add	sp, sp, #504
 895              		.cfi_def_cfa_offset 32
 896              		@ sp needed
 897 0062 BDE87040 		pop	{r4, r5, r6, lr}
 898              		.cfi_restore 14
 899              		.cfi_restore 6
 900              		.cfi_restore 5
 901              		.cfi_restore 4
 902              		.cfi_def_cfa_offset 16
 903              	.LVL50:
 506:Core/Src/main.cpp **** /* USER CODE END 4 */
 904              		.loc 1 506 1 view .LVU247
 905 0066 04B0     		add	sp, sp, #16
 906              		.cfi_def_cfa_offset 0
 907 0068 7047     		bx	lr
 908              	.L14:
 909 006a 00BF     		.align	2
 910              	.L13:
 911 006c 00000000 		.word	.LC1
 912 0070 08000000 		.word	.LC2
ARM GAS  /tmp/ccIebNMm.s 			page 35


 913 0074 00000000 		.word	huart2
 914              		.cfi_endproc
 915              	.LFE2698:
 916              		.fnend
 918              		.section	.text.Error_Handler,"ax",%progbits
 919              		.align	1
 920              		.global	Error_Handler
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 925              	Error_Handler:
 926              		.fnstart
 927              	.LFB2699:
 514:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 928              		.loc 1 514 1 is_stmt 1 view -0
 929              		.cfi_startproc
 930              		@ Volatile: function does not return.
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 517:Core/Src/main.cpp ****   while (1)
 934              		.loc 1 517 3 view .LVU249
 935              	.LBB299:
 936              	.LBI299:
 937              		.file 4 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  /tmp/ccIebNMm.s 			page 36


  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccIebNMm.s 			page 37


  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 938              		.loc 4 140 27 view .LVU250
 939              	.LBB300:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 940              		.loc 4 142 3 view .LVU251
 941              		.syntax unified
ARM GAS  /tmp/ccIebNMm.s 			page 38


 942              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 943 0000 72B6     		cpsid i
 944              	@ 0 "" 2
 945              		.thumb
 946              		.syntax unified
 947              	.L16:
 948              	.LBE300:
 949              	.LBE299:
 518:Core/Src/main.cpp ****   {
 950              		.loc 1 518 3 view .LVU252
 518:Core/Src/main.cpp ****   {
 951              		.loc 1 518 3 view .LVU253
 952 0002 FEE7     		b	.L16
 953              		.cfi_endproc
 954              	.LFE2699:
 955              		.cantunwind
 956              		.fnend
 958              		.section	.text._ZL19MX_USART2_UART_Initv,"ax",%progbits
 959              		.align	1
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 964              	_ZL19MX_USART2_UART_Initv:
 965              		.fnstart
 966              	.LFB2696:
 402:Core/Src/main.cpp **** 
 967              		.loc 1 402 1 view -0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 08B5     		push	{r3, lr}
 972              		.save {r3, lr}
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 3, -8
 975              		.cfi_offset 14, -4
 411:Core/Src/main.cpp ****   huart2.Init.BaudRate = 115200;
 976              		.loc 1 411 3 view .LVU255
 411:Core/Src/main.cpp ****   huart2.Init.BaudRate = 115200;
 977              		.loc 1 411 19 is_stmt 0 view .LVU256
 978 0002 0A48     		ldr	r0, .L21
 979 0004 0A4B     		ldr	r3, .L21+4
 980 0006 0360     		str	r3, [r0]
 412:Core/Src/main.cpp ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 981              		.loc 1 412 3 is_stmt 1 view .LVU257
 412:Core/Src/main.cpp ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 982              		.loc 1 412 24 is_stmt 0 view .LVU258
 983 0008 4FF4E133 		mov	r3, #115200
 984 000c 4360     		str	r3, [r0, #4]
 413:Core/Src/main.cpp ****   huart2.Init.StopBits = UART_STOPBITS_1;
 985              		.loc 1 413 3 is_stmt 1 view .LVU259
 413:Core/Src/main.cpp ****   huart2.Init.StopBits = UART_STOPBITS_1;
 986              		.loc 1 413 26 is_stmt 0 view .LVU260
 987 000e 0023     		movs	r3, #0
 988 0010 8360     		str	r3, [r0, #8]
 414:Core/Src/main.cpp ****   huart2.Init.Parity = UART_PARITY_NONE;
 989              		.loc 1 414 3 is_stmt 1 view .LVU261
 414:Core/Src/main.cpp ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccIebNMm.s 			page 39


 990              		.loc 1 414 24 is_stmt 0 view .LVU262
 991 0012 C360     		str	r3, [r0, #12]
 415:Core/Src/main.cpp ****   huart2.Init.Mode = UART_MODE_TX_RX;
 992              		.loc 1 415 3 is_stmt 1 view .LVU263
 415:Core/Src/main.cpp ****   huart2.Init.Mode = UART_MODE_TX_RX;
 993              		.loc 1 415 22 is_stmt 0 view .LVU264
 994 0014 0361     		str	r3, [r0, #16]
 416:Core/Src/main.cpp ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 995              		.loc 1 416 3 is_stmt 1 view .LVU265
 416:Core/Src/main.cpp ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 996              		.loc 1 416 20 is_stmt 0 view .LVU266
 997 0016 0C22     		movs	r2, #12
 998 0018 4261     		str	r2, [r0, #20]
 417:Core/Src/main.cpp ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 999              		.loc 1 417 3 is_stmt 1 view .LVU267
 417:Core/Src/main.cpp ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1000              		.loc 1 417 25 is_stmt 0 view .LVU268
 1001 001a 8361     		str	r3, [r0, #24]
 418:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1002              		.loc 1 418 3 is_stmt 1 view .LVU269
 418:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1003              		.loc 1 418 28 is_stmt 0 view .LVU270
 1004 001c C361     		str	r3, [r0, #28]
 419:Core/Src/main.cpp ****   {
 1005              		.loc 1 419 3 is_stmt 1 view .LVU271
 419:Core/Src/main.cpp ****   {
 1006              		.loc 1 419 20 is_stmt 0 view .LVU272
 1007 001e FFF7FEFF 		bl	HAL_UART_Init
 1008              	.LVL51:
 419:Core/Src/main.cpp ****   {
 1009              		.loc 1 419 3 discriminator 1 view .LVU273
 1010 0022 00B9     		cbnz	r0, .L20
 427:Core/Src/main.cpp **** 
 1011              		.loc 1 427 1 view .LVU274
 1012 0024 08BD     		pop	{r3, pc}
 1013              	.L20:
 421:Core/Src/main.cpp ****   }
 1014              		.loc 1 421 5 is_stmt 1 view .LVU275
 421:Core/Src/main.cpp ****   }
 1015              		.loc 1 421 18 is_stmt 0 view .LVU276
 1016 0026 FFF7FEFF 		bl	Error_Handler
 1017              	.LVL52:
 1018              	.L22:
 1019 002a 00BF     		.align	2
 1020              	.L21:
 1021 002c 00000000 		.word	huart2
 1022 0030 00440040 		.word	1073759232
 1023              		.cfi_endproc
 1024              	.LFE2696:
 1025              		.fnend
 1027              		.section	.text._ZL12MX_TIM1_Initv,"ax",%progbits
 1028              		.align	1
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1033              	_ZL12MX_TIM1_Initv:
 1034              		.fnstart
ARM GAS  /tmp/ccIebNMm.s 			page 40


 1035              	.LFB2694:
 223:Core/Src/main.cpp **** 
 1036              		.loc 1 223 1 is_stmt 1 view -0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 88
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040 0000 10B5     		push	{r4, lr}
 1041              		.save {r4, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 4, -8
 1044              		.cfi_offset 14, -4
 1045              		.pad #88
 1046 0002 96B0     		sub	sp, sp, #88
 1047              		.cfi_def_cfa_offset 96
 229:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1048              		.loc 1 229 3 view .LVU278
 229:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1049              		.loc 1 229 26 is_stmt 0 view .LVU279
 1050 0004 0024     		movs	r4, #0
 1051 0006 1294     		str	r4, [sp, #72]
 1052 0008 1394     		str	r4, [sp, #76]
 1053 000a 1494     		str	r4, [sp, #80]
 1054 000c 1594     		str	r4, [sp, #84]
 230:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1055              		.loc 1 230 3 is_stmt 1 view .LVU280
 230:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1056              		.loc 1 230 27 is_stmt 0 view .LVU281
 1057 000e 1094     		str	r4, [sp, #64]
 1058 0010 1194     		str	r4, [sp, #68]
 231:Core/Src/main.cpp ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1059              		.loc 1 231 3 is_stmt 1 view .LVU282
 231:Core/Src/main.cpp ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1060              		.loc 1 231 22 is_stmt 0 view .LVU283
 1061 0012 0994     		str	r4, [sp, #36]
 1062 0014 0A94     		str	r4, [sp, #40]
 1063 0016 0B94     		str	r4, [sp, #44]
 1064 0018 0C94     		str	r4, [sp, #48]
 1065 001a 0D94     		str	r4, [sp, #52]
 1066 001c 0E94     		str	r4, [sp, #56]
 1067 001e 0F94     		str	r4, [sp, #60]
 232:Core/Src/main.cpp **** 
 1068              		.loc 1 232 3 is_stmt 1 view .LVU284
 232:Core/Src/main.cpp **** 
 1069              		.loc 1 232 34 is_stmt 0 view .LVU285
 1070 0020 2022     		movs	r2, #32
 1071 0022 2146     		mov	r1, r4
 1072 0024 01A8     		add	r0, sp, #4
 1073 0026 FFF7FEFF 		bl	memset
 1074              	.LVL53:
 237:Core/Src/main.cpp ****   htim1.Init.Prescaler = 100;
 1075              		.loc 1 237 3 is_stmt 1 view .LVU286
 237:Core/Src/main.cpp ****   htim1.Init.Prescaler = 100;
 1076              		.loc 1 237 18 is_stmt 0 view .LVU287
 1077 002a 3648     		ldr	r0, .L43
 1078 002c 364B     		ldr	r3, .L43+4
 1079 002e 0360     		str	r3, [r0]
 238:Core/Src/main.cpp ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccIebNMm.s 			page 41


 1080              		.loc 1 238 3 is_stmt 1 view .LVU288
 238:Core/Src/main.cpp ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1081              		.loc 1 238 24 is_stmt 0 view .LVU289
 1082 0030 6423     		movs	r3, #100
 1083 0032 4360     		str	r3, [r0, #4]
 239:Core/Src/main.cpp ****   htim1.Init.Period = 60000;
 1084              		.loc 1 239 3 is_stmt 1 view .LVU290
 239:Core/Src/main.cpp ****   htim1.Init.Period = 60000;
 1085              		.loc 1 239 26 is_stmt 0 view .LVU291
 1086 0034 8460     		str	r4, [r0, #8]
 240:Core/Src/main.cpp ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1087              		.loc 1 240 3 is_stmt 1 view .LVU292
 240:Core/Src/main.cpp ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1088              		.loc 1 240 21 is_stmt 0 view .LVU293
 1089 0036 4EF66023 		movw	r3, #60000
 1090 003a C360     		str	r3, [r0, #12]
 241:Core/Src/main.cpp ****   htim1.Init.RepetitionCounter = 0;
 1091              		.loc 1 241 3 is_stmt 1 view .LVU294
 241:Core/Src/main.cpp ****   htim1.Init.RepetitionCounter = 0;
 1092              		.loc 1 241 28 is_stmt 0 view .LVU295
 1093 003c 0461     		str	r4, [r0, #16]
 242:Core/Src/main.cpp ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1094              		.loc 1 242 3 is_stmt 1 view .LVU296
 242:Core/Src/main.cpp ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1095              		.loc 1 242 32 is_stmt 0 view .LVU297
 1096 003e 4461     		str	r4, [r0, #20]
 243:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1097              		.loc 1 243 3 is_stmt 1 view .LVU298
 243:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1098              		.loc 1 243 32 is_stmt 0 view .LVU299
 1099 0040 8461     		str	r4, [r0, #24]
 244:Core/Src/main.cpp ****   {
 1100              		.loc 1 244 3 is_stmt 1 view .LVU300
 244:Core/Src/main.cpp ****   {
 1101              		.loc 1 244 24 is_stmt 0 view .LVU301
 1102 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1103              	.LVL54:
 244:Core/Src/main.cpp ****   {
 1104              		.loc 1 244 3 discriminator 1 view .LVU302
 1105 0046 0028     		cmp	r0, #0
 1106 0048 4AD1     		bne	.L34
 248:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1107              		.loc 1 248 3 is_stmt 1 view .LVU303
 248:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1108              		.loc 1 248 34 is_stmt 0 view .LVU304
 1109 004a 4FF48053 		mov	r3, #4096
 1110 004e 1293     		str	r3, [sp, #72]
 249:Core/Src/main.cpp ****   {
 1111              		.loc 1 249 3 is_stmt 1 view .LVU305
 249:Core/Src/main.cpp ****   {
 1112              		.loc 1 249 32 is_stmt 0 view .LVU306
 1113 0050 12A9     		add	r1, sp, #72
 1114 0052 2C48     		ldr	r0, .L43
 1115 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1116              	.LVL55:
 249:Core/Src/main.cpp ****   {
 1117              		.loc 1 249 3 discriminator 1 view .LVU307
ARM GAS  /tmp/ccIebNMm.s 			page 42


 1118 0058 0028     		cmp	r0, #0
 1119 005a 43D1     		bne	.L35
 253:Core/Src/main.cpp ****   {
 1120              		.loc 1 253 3 is_stmt 1 view .LVU308
 253:Core/Src/main.cpp ****   {
 1121              		.loc 1 253 23 is_stmt 0 view .LVU309
 1122 005c 2948     		ldr	r0, .L43
 1123 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1124              	.LVL56:
 253:Core/Src/main.cpp ****   {
 1125              		.loc 1 253 3 discriminator 1 view .LVU310
 1126 0062 0028     		cmp	r0, #0
 1127 0064 40D1     		bne	.L36
 257:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1128              		.loc 1 257 3 is_stmt 1 view .LVU311
 257:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1129              		.loc 1 257 37 is_stmt 0 view .LVU312
 1130 0066 0023     		movs	r3, #0
 1131 0068 1093     		str	r3, [sp, #64]
 258:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1132              		.loc 1 258 3 is_stmt 1 view .LVU313
 258:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1133              		.loc 1 258 33 is_stmt 0 view .LVU314
 1134 006a 1193     		str	r3, [sp, #68]
 259:Core/Src/main.cpp ****   {
 1135              		.loc 1 259 3 is_stmt 1 view .LVU315
 259:Core/Src/main.cpp ****   {
 1136              		.loc 1 259 44 is_stmt 0 view .LVU316
 1137 006c 10A9     		add	r1, sp, #64
 1138 006e 2548     		ldr	r0, .L43
 1139 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1140              	.LVL57:
 259:Core/Src/main.cpp ****   {
 1141              		.loc 1 259 3 discriminator 1 view .LVU317
 1142 0074 0028     		cmp	r0, #0
 1143 0076 39D1     		bne	.L37
 263:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 1144              		.loc 1 263 3 is_stmt 1 view .LVU318
 263:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 1145              		.loc 1 263 20 is_stmt 0 view .LVU319
 1146 0078 6023     		movs	r3, #96
 1147 007a 0993     		str	r3, [sp, #36]
 264:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1148              		.loc 1 264 3 is_stmt 1 view .LVU320
 264:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1149              		.loc 1 264 19 is_stmt 0 view .LVU321
 1150 007c 0022     		movs	r2, #0
 1151 007e 0A92     		str	r2, [sp, #40]
 265:Core/Src/main.cpp ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1152              		.loc 1 265 3 is_stmt 1 view .LVU322
 265:Core/Src/main.cpp ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1153              		.loc 1 265 24 is_stmt 0 view .LVU323
 1154 0080 0B92     		str	r2, [sp, #44]
 266:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1155              		.loc 1 266 3 is_stmt 1 view .LVU324
 266:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1156              		.loc 1 266 25 is_stmt 0 view .LVU325
ARM GAS  /tmp/ccIebNMm.s 			page 43


 1157 0082 0C92     		str	r2, [sp, #48]
 267:Core/Src/main.cpp ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1158              		.loc 1 267 3 is_stmt 1 view .LVU326
 267:Core/Src/main.cpp ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1159              		.loc 1 267 24 is_stmt 0 view .LVU327
 1160 0084 0D92     		str	r2, [sp, #52]
 268:Core/Src/main.cpp ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1161              		.loc 1 268 3 is_stmt 1 view .LVU328
 268:Core/Src/main.cpp ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1162              		.loc 1 268 25 is_stmt 0 view .LVU329
 1163 0086 0E92     		str	r2, [sp, #56]
 269:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1164              		.loc 1 269 3 is_stmt 1 view .LVU330
 269:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1165              		.loc 1 269 26 is_stmt 0 view .LVU331
 1166 0088 0F92     		str	r2, [sp, #60]
 270:Core/Src/main.cpp ****   {
 1167              		.loc 1 270 3 is_stmt 1 view .LVU332
 270:Core/Src/main.cpp ****   {
 1168              		.loc 1 270 32 is_stmt 0 view .LVU333
 1169 008a 09A9     		add	r1, sp, #36
 1170 008c 1D48     		ldr	r0, .L43
 1171 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1172              	.LVL58:
 270:Core/Src/main.cpp ****   {
 1173              		.loc 1 270 3 discriminator 1 view .LVU334
 1174 0092 68BB     		cbnz	r0, .L38
 274:Core/Src/main.cpp ****   {
 1175              		.loc 1 274 3 is_stmt 1 view .LVU335
 274:Core/Src/main.cpp ****   {
 1176              		.loc 1 274 32 is_stmt 0 view .LVU336
 1177 0094 0422     		movs	r2, #4
 1178 0096 09A9     		add	r1, sp, #36
 1179 0098 1A48     		ldr	r0, .L43
 1180 009a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1181              	.LVL59:
 274:Core/Src/main.cpp ****   {
 1182              		.loc 1 274 3 discriminator 1 view .LVU337
 1183 009e 48BB     		cbnz	r0, .L39
 278:Core/Src/main.cpp ****   {
 1184              		.loc 1 278 3 is_stmt 1 view .LVU338
 278:Core/Src/main.cpp ****   {
 1185              		.loc 1 278 32 is_stmt 0 view .LVU339
 1186 00a0 0822     		movs	r2, #8
 1187 00a2 09A9     		add	r1, sp, #36
 1188 00a4 1748     		ldr	r0, .L43
 1189 00a6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1190              	.LVL60:
 278:Core/Src/main.cpp ****   {
 1191              		.loc 1 278 3 discriminator 1 view .LVU340
 1192 00aa 28BB     		cbnz	r0, .L40
 282:Core/Src/main.cpp ****   {
 1193              		.loc 1 282 3 is_stmt 1 view .LVU341
 282:Core/Src/main.cpp ****   {
 1194              		.loc 1 282 32 is_stmt 0 view .LVU342
 1195 00ac 0C22     		movs	r2, #12
 1196 00ae 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccIebNMm.s 			page 44


 1197 00b0 1448     		ldr	r0, .L43
 1198 00b2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1199              	.LVL61:
 282:Core/Src/main.cpp ****   {
 1200              		.loc 1 282 3 discriminator 1 view .LVU343
 1201 00b6 08BB     		cbnz	r0, .L41
 286:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1202              		.loc 1 286 3 is_stmt 1 view .LVU344
 286:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1203              		.loc 1 286 40 is_stmt 0 view .LVU345
 1204 00b8 0023     		movs	r3, #0
 1205 00ba 0193     		str	r3, [sp, #4]
 287:Core/Src/main.cpp ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1206              		.loc 1 287 3 is_stmt 1 view .LVU346
 287:Core/Src/main.cpp ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1207              		.loc 1 287 41 is_stmt 0 view .LVU347
 1208 00bc 0293     		str	r3, [sp, #8]
 288:Core/Src/main.cpp ****   sBreakDeadTimeConfig.DeadTime = 0;
 1209              		.loc 1 288 3 is_stmt 1 view .LVU348
 288:Core/Src/main.cpp ****   sBreakDeadTimeConfig.DeadTime = 0;
 1210              		.loc 1 288 34 is_stmt 0 view .LVU349
 1211 00be 0393     		str	r3, [sp, #12]
 289:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1212              		.loc 1 289 3 is_stmt 1 view .LVU350
 289:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1213              		.loc 1 289 33 is_stmt 0 view .LVU351
 1214 00c0 0493     		str	r3, [sp, #16]
 290:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1215              		.loc 1 290 3 is_stmt 1 view .LVU352
 290:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1216              		.loc 1 290 35 is_stmt 0 view .LVU353
 1217 00c2 0593     		str	r3, [sp, #20]
 291:Core/Src/main.cpp ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1218              		.loc 1 291 3 is_stmt 1 view .LVU354
 291:Core/Src/main.cpp ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1219              		.loc 1 291 38 is_stmt 0 view .LVU355
 1220 00c4 4FF40052 		mov	r2, #8192
 1221 00c8 0692     		str	r2, [sp, #24]
 292:Core/Src/main.cpp ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1222              		.loc 1 292 3 is_stmt 1 view .LVU356
 292:Core/Src/main.cpp ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1223              		.loc 1 292 40 is_stmt 0 view .LVU357
 1224 00ca 0893     		str	r3, [sp, #32]
 293:Core/Src/main.cpp ****   {
 1225              		.loc 1 293 3 is_stmt 1 view .LVU358
 293:Core/Src/main.cpp ****   {
 1226              		.loc 1 293 36 is_stmt 0 view .LVU359
 1227 00cc 01A9     		add	r1, sp, #4
 1228 00ce 0D48     		ldr	r0, .L43
 1229 00d0 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1230              	.LVL62:
 293:Core/Src/main.cpp ****   {
 1231              		.loc 1 293 3 discriminator 1 view .LVU360
 1232 00d4 A0B9     		cbnz	r0, .L42
 300:Core/Src/main.cpp **** 
 1233              		.loc 1 300 3 is_stmt 1 view .LVU361
 300:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccIebNMm.s 			page 45


 1234              		.loc 1 300 22 is_stmt 0 view .LVU362
 1235 00d6 0B48     		ldr	r0, .L43
 1236 00d8 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1237              	.LVL63:
 302:Core/Src/main.cpp **** 
 1238              		.loc 1 302 1 view .LVU363
 1239 00dc 16B0     		add	sp, sp, #88
 1240              		.cfi_remember_state
 1241              		.cfi_def_cfa_offset 8
 1242              		@ sp needed
 1243 00de 10BD     		pop	{r4, pc}
 1244              	.L34:
 1245              		.cfi_restore_state
 246:Core/Src/main.cpp ****   }
 1246              		.loc 1 246 5 is_stmt 1 view .LVU364
 246:Core/Src/main.cpp ****   }
 1247              		.loc 1 246 18 is_stmt 0 view .LVU365
 1248 00e0 FFF7FEFF 		bl	Error_Handler
 1249              	.LVL64:
 1250              	.L35:
 251:Core/Src/main.cpp ****   }
 1251              		.loc 1 251 5 is_stmt 1 view .LVU366
 251:Core/Src/main.cpp ****   }
 1252              		.loc 1 251 18 is_stmt 0 view .LVU367
 1253 00e4 FFF7FEFF 		bl	Error_Handler
 1254              	.LVL65:
 1255              	.L36:
 255:Core/Src/main.cpp ****   }
 1256              		.loc 1 255 5 is_stmt 1 view .LVU368
 255:Core/Src/main.cpp ****   }
 1257              		.loc 1 255 18 is_stmt 0 view .LVU369
 1258 00e8 FFF7FEFF 		bl	Error_Handler
 1259              	.LVL66:
 1260              	.L37:
 261:Core/Src/main.cpp ****   }
 1261              		.loc 1 261 5 is_stmt 1 view .LVU370
 261:Core/Src/main.cpp ****   }
 1262              		.loc 1 261 18 is_stmt 0 view .LVU371
 1263 00ec FFF7FEFF 		bl	Error_Handler
 1264              	.LVL67:
 1265              	.L38:
 272:Core/Src/main.cpp ****   }
 1266              		.loc 1 272 5 is_stmt 1 view .LVU372
 272:Core/Src/main.cpp ****   }
 1267              		.loc 1 272 18 is_stmt 0 view .LVU373
 1268 00f0 FFF7FEFF 		bl	Error_Handler
 1269              	.LVL68:
 1270              	.L39:
 276:Core/Src/main.cpp ****   }
 1271              		.loc 1 276 5 is_stmt 1 view .LVU374
 276:Core/Src/main.cpp ****   }
 1272              		.loc 1 276 18 is_stmt 0 view .LVU375
 1273 00f4 FFF7FEFF 		bl	Error_Handler
 1274              	.LVL69:
 1275              	.L40:
 280:Core/Src/main.cpp ****   }
 1276              		.loc 1 280 5 is_stmt 1 view .LVU376
ARM GAS  /tmp/ccIebNMm.s 			page 46


 280:Core/Src/main.cpp ****   }
 1277              		.loc 1 280 18 is_stmt 0 view .LVU377
 1278 00f8 FFF7FEFF 		bl	Error_Handler
 1279              	.LVL70:
 1280              	.L41:
 284:Core/Src/main.cpp ****   }
 1281              		.loc 1 284 5 is_stmt 1 view .LVU378
 284:Core/Src/main.cpp ****   }
 1282              		.loc 1 284 18 is_stmt 0 view .LVU379
 1283 00fc FFF7FEFF 		bl	Error_Handler
 1284              	.LVL71:
 1285              	.L42:
 295:Core/Src/main.cpp ****   }
 1286              		.loc 1 295 5 is_stmt 1 view .LVU380
 295:Core/Src/main.cpp ****   }
 1287              		.loc 1 295 18 is_stmt 0 view .LVU381
 1288 0100 FFF7FEFF 		bl	Error_Handler
 1289              	.LVL72:
 1290              	.L44:
 1291              		.align	2
 1292              	.L43:
 1293 0104 00000000 		.word	htim1
 1294 0108 00000140 		.word	1073807360
 1295              		.cfi_endproc
 1296              	.LFE2694:
 1297              		.fnend
 1299              		.section	.text._ZL12MX_TIM8_Initv,"ax",%progbits
 1300              		.align	1
 1301              		.syntax unified
 1302              		.thumb
 1303              		.thumb_func
 1305              	_ZL12MX_TIM8_Initv:
 1306              		.fnstart
 1307              	.LFB2695:
 310:Core/Src/main.cpp **** 
 1308              		.loc 1 310 1 is_stmt 1 view -0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 88
 1311              		@ frame_needed = 0, uses_anonymous_args = 0
 1312 0000 10B5     		push	{r4, lr}
 1313              		.save {r4, lr}
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 4, -8
 1316              		.cfi_offset 14, -4
 1317              		.pad #88
 1318 0002 96B0     		sub	sp, sp, #88
 1319              		.cfi_def_cfa_offset 96
 316:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1320              		.loc 1 316 3 view .LVU383
 316:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1321              		.loc 1 316 26 is_stmt 0 view .LVU384
 1322 0004 0024     		movs	r4, #0
 1323 0006 1294     		str	r4, [sp, #72]
 1324 0008 1394     		str	r4, [sp, #76]
 1325 000a 1494     		str	r4, [sp, #80]
 1326 000c 1594     		str	r4, [sp, #84]
 317:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  /tmp/ccIebNMm.s 			page 47


 1327              		.loc 1 317 3 is_stmt 1 view .LVU385
 317:Core/Src/main.cpp ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1328              		.loc 1 317 27 is_stmt 0 view .LVU386
 1329 000e 1094     		str	r4, [sp, #64]
 1330 0010 1194     		str	r4, [sp, #68]
 318:Core/Src/main.cpp ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1331              		.loc 1 318 3 is_stmt 1 view .LVU387
 318:Core/Src/main.cpp ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1332              		.loc 1 318 22 is_stmt 0 view .LVU388
 1333 0012 0994     		str	r4, [sp, #36]
 1334 0014 0A94     		str	r4, [sp, #40]
 1335 0016 0B94     		str	r4, [sp, #44]
 1336 0018 0C94     		str	r4, [sp, #48]
 1337 001a 0D94     		str	r4, [sp, #52]
 1338 001c 0E94     		str	r4, [sp, #56]
 1339 001e 0F94     		str	r4, [sp, #60]
 319:Core/Src/main.cpp **** 
 1340              		.loc 1 319 3 is_stmt 1 view .LVU389
 319:Core/Src/main.cpp **** 
 1341              		.loc 1 319 34 is_stmt 0 view .LVU390
 1342 0020 2022     		movs	r2, #32
 1343 0022 2146     		mov	r1, r4
 1344 0024 01A8     		add	r0, sp, #4
 1345 0026 FFF7FEFF 		bl	memset
 1346              	.LVL73:
 324:Core/Src/main.cpp ****   htim8.Init.Prescaler = 500;
 1347              		.loc 1 324 3 is_stmt 1 view .LVU391
 324:Core/Src/main.cpp ****   htim8.Init.Prescaler = 500;
 1348              		.loc 1 324 18 is_stmt 0 view .LVU392
 1349 002a 3C48     		ldr	r0, .L67
 1350 002c 3C4B     		ldr	r3, .L67+4
 1351 002e 0360     		str	r3, [r0]
 325:Core/Src/main.cpp ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 1352              		.loc 1 325 3 is_stmt 1 view .LVU393
 325:Core/Src/main.cpp ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 1353              		.loc 1 325 24 is_stmt 0 view .LVU394
 1354 0030 4FF4FA73 		mov	r3, #500
 1355 0034 4360     		str	r3, [r0, #4]
 326:Core/Src/main.cpp ****   htim8.Init.Period = 60000;
 1356              		.loc 1 326 3 is_stmt 1 view .LVU395
 326:Core/Src/main.cpp ****   htim8.Init.Period = 60000;
 1357              		.loc 1 326 26 is_stmt 0 view .LVU396
 1358 0036 8460     		str	r4, [r0, #8]
 327:Core/Src/main.cpp ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1359              		.loc 1 327 3 is_stmt 1 view .LVU397
 327:Core/Src/main.cpp ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1360              		.loc 1 327 21 is_stmt 0 view .LVU398
 1361 0038 4EF66023 		movw	r3, #60000
 1362 003c C360     		str	r3, [r0, #12]
 328:Core/Src/main.cpp ****   htim8.Init.RepetitionCounter = 0;
 1363              		.loc 1 328 3 is_stmt 1 view .LVU399
 328:Core/Src/main.cpp ****   htim8.Init.RepetitionCounter = 0;
 1364              		.loc 1 328 28 is_stmt 0 view .LVU400
 1365 003e 0461     		str	r4, [r0, #16]
 329:Core/Src/main.cpp ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1366              		.loc 1 329 3 is_stmt 1 view .LVU401
 329:Core/Src/main.cpp ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/ccIebNMm.s 			page 48


 1367              		.loc 1 329 32 is_stmt 0 view .LVU402
 1368 0040 4461     		str	r4, [r0, #20]
 330:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 1369              		.loc 1 330 3 is_stmt 1 view .LVU403
 330:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 1370              		.loc 1 330 32 is_stmt 0 view .LVU404
 1371 0042 8461     		str	r4, [r0, #24]
 331:Core/Src/main.cpp ****   {
 1372              		.loc 1 331 3 is_stmt 1 view .LVU405
 331:Core/Src/main.cpp ****   {
 1373              		.loc 1 331 24 is_stmt 0 view .LVU406
 1374 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1375              	.LVL74:
 331:Core/Src/main.cpp ****   {
 1376              		.loc 1 331 3 discriminator 1 view .LVU407
 1377 0048 0028     		cmp	r0, #0
 1378 004a 52D1     		bne	.L57
 335:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 1379              		.loc 1 335 3 is_stmt 1 view .LVU408
 335:Core/Src/main.cpp ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 1380              		.loc 1 335 34 is_stmt 0 view .LVU409
 1381 004c 4FF48053 		mov	r3, #4096
 1382 0050 1293     		str	r3, [sp, #72]
 336:Core/Src/main.cpp ****   {
 1383              		.loc 1 336 3 is_stmt 1 view .LVU410
 336:Core/Src/main.cpp ****   {
 1384              		.loc 1 336 32 is_stmt 0 view .LVU411
 1385 0052 12A9     		add	r1, sp, #72
 1386 0054 3148     		ldr	r0, .L67
 1387 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1388              	.LVL75:
 336:Core/Src/main.cpp ****   {
 1389              		.loc 1 336 3 discriminator 1 view .LVU412
 1390 005a 0028     		cmp	r0, #0
 1391 005c 4BD1     		bne	.L58
 340:Core/Src/main.cpp ****   {
 1392              		.loc 1 340 3 is_stmt 1 view .LVU413
 340:Core/Src/main.cpp ****   {
 1393              		.loc 1 340 23 is_stmt 0 view .LVU414
 1394 005e 2F48     		ldr	r0, .L67
 1395 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1396              	.LVL76:
 340:Core/Src/main.cpp ****   {
 1397              		.loc 1 340 3 discriminator 1 view .LVU415
 1398 0064 0028     		cmp	r0, #0
 1399 0066 48D1     		bne	.L59
 344:Core/Src/main.cpp ****   {
 1400              		.loc 1 344 3 is_stmt 1 view .LVU416
 344:Core/Src/main.cpp ****   {
 1401              		.loc 1 344 22 is_stmt 0 view .LVU417
 1402 0068 2C48     		ldr	r0, .L67
 1403 006a FFF7FEFF 		bl	HAL_TIM_OC_Init
 1404              	.LVL77:
 344:Core/Src/main.cpp ****   {
 1405              		.loc 1 344 3 discriminator 1 view .LVU418
 1406 006e 0028     		cmp	r0, #0
 1407 0070 45D1     		bne	.L60
ARM GAS  /tmp/ccIebNMm.s 			page 49


 348:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1408              		.loc 1 348 3 is_stmt 1 view .LVU419
 348:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1409              		.loc 1 348 37 is_stmt 0 view .LVU420
 1410 0072 0023     		movs	r3, #0
 1411 0074 1093     		str	r3, [sp, #64]
 349:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 1412              		.loc 1 349 3 is_stmt 1 view .LVU421
 349:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 1413              		.loc 1 349 33 is_stmt 0 view .LVU422
 1414 0076 1193     		str	r3, [sp, #68]
 350:Core/Src/main.cpp ****   {
 1415              		.loc 1 350 3 is_stmt 1 view .LVU423
 350:Core/Src/main.cpp ****   {
 1416              		.loc 1 350 44 is_stmt 0 view .LVU424
 1417 0078 10A9     		add	r1, sp, #64
 1418 007a 2848     		ldr	r0, .L67
 1419 007c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1420              	.LVL78:
 350:Core/Src/main.cpp ****   {
 1421              		.loc 1 350 3 discriminator 1 view .LVU425
 1422 0080 0028     		cmp	r0, #0
 1423 0082 3ED1     		bne	.L61
 354:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 1424              		.loc 1 354 3 is_stmt 1 view .LVU426
 354:Core/Src/main.cpp ****   sConfigOC.Pulse = 0;
 1425              		.loc 1 354 20 is_stmt 0 view .LVU427
 1426 0084 6023     		movs	r3, #96
 1427 0086 0993     		str	r3, [sp, #36]
 355:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1428              		.loc 1 355 3 is_stmt 1 view .LVU428
 355:Core/Src/main.cpp ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1429              		.loc 1 355 19 is_stmt 0 view .LVU429
 1430 0088 0022     		movs	r2, #0
 1431 008a 0A92     		str	r2, [sp, #40]
 356:Core/Src/main.cpp ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1432              		.loc 1 356 3 is_stmt 1 view .LVU430
 356:Core/Src/main.cpp ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1433              		.loc 1 356 24 is_stmt 0 view .LVU431
 1434 008c 0B92     		str	r2, [sp, #44]
 357:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1435              		.loc 1 357 3 is_stmt 1 view .LVU432
 357:Core/Src/main.cpp ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1436              		.loc 1 357 25 is_stmt 0 view .LVU433
 1437 008e 0C92     		str	r2, [sp, #48]
 358:Core/Src/main.cpp ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1438              		.loc 1 358 3 is_stmt 1 view .LVU434
 358:Core/Src/main.cpp ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1439              		.loc 1 358 24 is_stmt 0 view .LVU435
 1440 0090 0D92     		str	r2, [sp, #52]
 359:Core/Src/main.cpp ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1441              		.loc 1 359 3 is_stmt 1 view .LVU436
 359:Core/Src/main.cpp ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1442              		.loc 1 359 25 is_stmt 0 view .LVU437
 1443 0092 0E92     		str	r2, [sp, #56]
 360:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1444              		.loc 1 360 3 is_stmt 1 view .LVU438
ARM GAS  /tmp/ccIebNMm.s 			page 50


 360:Core/Src/main.cpp ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1445              		.loc 1 360 26 is_stmt 0 view .LVU439
 1446 0094 0F92     		str	r2, [sp, #60]
 361:Core/Src/main.cpp ****   {
 1447              		.loc 1 361 3 is_stmt 1 view .LVU440
 361:Core/Src/main.cpp ****   {
 1448              		.loc 1 361 32 is_stmt 0 view .LVU441
 1449 0096 09A9     		add	r1, sp, #36
 1450 0098 2048     		ldr	r0, .L67
 1451 009a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1452              	.LVL79:
 361:Core/Src/main.cpp ****   {
 1453              		.loc 1 361 3 discriminator 1 view .LVU442
 1454 009e 0028     		cmp	r0, #0
 1455 00a0 31D1     		bne	.L62
 365:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1456              		.loc 1 365 3 is_stmt 1 view .LVU443
 365:Core/Src/main.cpp ****   if (HAL_TIM_OC_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1457              		.loc 1 365 20 is_stmt 0 view .LVU444
 1458 00a2 0023     		movs	r3, #0
 1459 00a4 0993     		str	r3, [sp, #36]
 366:Core/Src/main.cpp ****   {
 1460              		.loc 1 366 3 is_stmt 1 view .LVU445
 366:Core/Src/main.cpp ****   {
 1461              		.loc 1 366 31 is_stmt 0 view .LVU446
 1462 00a6 0422     		movs	r2, #4
 1463 00a8 09A9     		add	r1, sp, #36
 1464 00aa 1C48     		ldr	r0, .L67
 1465 00ac FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 1466              	.LVL80:
 366:Core/Src/main.cpp ****   {
 1467              		.loc 1 366 3 discriminator 1 view .LVU447
 1468 00b0 58BB     		cbnz	r0, .L63
 370:Core/Src/main.cpp ****   {
 1469              		.loc 1 370 3 is_stmt 1 view .LVU448
 370:Core/Src/main.cpp ****   {
 1470              		.loc 1 370 31 is_stmt 0 view .LVU449
 1471 00b2 0822     		movs	r2, #8
 1472 00b4 09A9     		add	r1, sp, #36
 1473 00b6 1948     		ldr	r0, .L67
 1474 00b8 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 1475              	.LVL81:
 370:Core/Src/main.cpp ****   {
 1476              		.loc 1 370 3 discriminator 1 view .LVU450
 1477 00bc 38BB     		cbnz	r0, .L64
 374:Core/Src/main.cpp ****   {
 1478              		.loc 1 374 3 is_stmt 1 view .LVU451
 374:Core/Src/main.cpp ****   {
 1479              		.loc 1 374 31 is_stmt 0 view .LVU452
 1480 00be 0C22     		movs	r2, #12
 1481 00c0 09A9     		add	r1, sp, #36
 1482 00c2 1648     		ldr	r0, .L67
 1483 00c4 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 1484              	.LVL82:
 374:Core/Src/main.cpp ****   {
 1485              		.loc 1 374 3 discriminator 1 view .LVU453
 1486 00c8 18BB     		cbnz	r0, .L65
ARM GAS  /tmp/ccIebNMm.s 			page 51


 378:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1487              		.loc 1 378 3 is_stmt 1 view .LVU454
 378:Core/Src/main.cpp ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1488              		.loc 1 378 40 is_stmt 0 view .LVU455
 1489 00ca 0023     		movs	r3, #0
 1490 00cc 0193     		str	r3, [sp, #4]
 379:Core/Src/main.cpp ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1491              		.loc 1 379 3 is_stmt 1 view .LVU456
 379:Core/Src/main.cpp ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1492              		.loc 1 379 41 is_stmt 0 view .LVU457
 1493 00ce 0293     		str	r3, [sp, #8]
 380:Core/Src/main.cpp ****   sBreakDeadTimeConfig.DeadTime = 0;
 1494              		.loc 1 380 3 is_stmt 1 view .LVU458
 380:Core/Src/main.cpp ****   sBreakDeadTimeConfig.DeadTime = 0;
 1495              		.loc 1 380 34 is_stmt 0 view .LVU459
 1496 00d0 0393     		str	r3, [sp, #12]
 381:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1497              		.loc 1 381 3 is_stmt 1 view .LVU460
 381:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1498              		.loc 1 381 33 is_stmt 0 view .LVU461
 1499 00d2 0493     		str	r3, [sp, #16]
 382:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1500              		.loc 1 382 3 is_stmt 1 view .LVU462
 382:Core/Src/main.cpp ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1501              		.loc 1 382 35 is_stmt 0 view .LVU463
 1502 00d4 0593     		str	r3, [sp, #20]
 383:Core/Src/main.cpp ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1503              		.loc 1 383 3 is_stmt 1 view .LVU464
 383:Core/Src/main.cpp ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1504              		.loc 1 383 38 is_stmt 0 view .LVU465
 1505 00d6 4FF40052 		mov	r2, #8192
 1506 00da 0692     		str	r2, [sp, #24]
 384:Core/Src/main.cpp ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 1507              		.loc 1 384 3 is_stmt 1 view .LVU466
 384:Core/Src/main.cpp ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 1508              		.loc 1 384 40 is_stmt 0 view .LVU467
 1509 00dc 0893     		str	r3, [sp, #32]
 385:Core/Src/main.cpp ****   {
 1510              		.loc 1 385 3 is_stmt 1 view .LVU468
 385:Core/Src/main.cpp ****   {
 1511              		.loc 1 385 36 is_stmt 0 view .LVU469
 1512 00de 01A9     		add	r1, sp, #4
 1513 00e0 0E48     		ldr	r0, .L67
 1514 00e2 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1515              	.LVL83:
 385:Core/Src/main.cpp ****   {
 1516              		.loc 1 385 3 discriminator 1 view .LVU470
 1517 00e6 B0B9     		cbnz	r0, .L66
 392:Core/Src/main.cpp **** 
 1518              		.loc 1 392 3 is_stmt 1 view .LVU471
 392:Core/Src/main.cpp **** 
 1519              		.loc 1 392 22 is_stmt 0 view .LVU472
 1520 00e8 0C48     		ldr	r0, .L67
 1521 00ea FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1522              	.LVL84:
 394:Core/Src/main.cpp **** 
 1523              		.loc 1 394 1 view .LVU473
ARM GAS  /tmp/ccIebNMm.s 			page 52


 1524 00ee 16B0     		add	sp, sp, #88
 1525              		.cfi_remember_state
 1526              		.cfi_def_cfa_offset 8
 1527              		@ sp needed
 1528 00f0 10BD     		pop	{r4, pc}
 1529              	.L57:
 1530              		.cfi_restore_state
 333:Core/Src/main.cpp ****   }
 1531              		.loc 1 333 5 is_stmt 1 view .LVU474
 333:Core/Src/main.cpp ****   }
 1532              		.loc 1 333 18 is_stmt 0 view .LVU475
 1533 00f2 FFF7FEFF 		bl	Error_Handler
 1534              	.LVL85:
 1535              	.L58:
 338:Core/Src/main.cpp ****   }
 1536              		.loc 1 338 5 is_stmt 1 view .LVU476
 338:Core/Src/main.cpp ****   }
 1537              		.loc 1 338 18 is_stmt 0 view .LVU477
 1538 00f6 FFF7FEFF 		bl	Error_Handler
 1539              	.LVL86:
 1540              	.L59:
 342:Core/Src/main.cpp ****   }
 1541              		.loc 1 342 5 is_stmt 1 view .LVU478
 342:Core/Src/main.cpp ****   }
 1542              		.loc 1 342 18 is_stmt 0 view .LVU479
 1543 00fa FFF7FEFF 		bl	Error_Handler
 1544              	.LVL87:
 1545              	.L60:
 346:Core/Src/main.cpp ****   }
 1546              		.loc 1 346 5 is_stmt 1 view .LVU480
 346:Core/Src/main.cpp ****   }
 1547              		.loc 1 346 18 is_stmt 0 view .LVU481
 1548 00fe FFF7FEFF 		bl	Error_Handler
 1549              	.LVL88:
 1550              	.L61:
 352:Core/Src/main.cpp ****   }
 1551              		.loc 1 352 5 is_stmt 1 view .LVU482
 352:Core/Src/main.cpp ****   }
 1552              		.loc 1 352 18 is_stmt 0 view .LVU483
 1553 0102 FFF7FEFF 		bl	Error_Handler
 1554              	.LVL89:
 1555              	.L62:
 363:Core/Src/main.cpp ****   }
 1556              		.loc 1 363 5 is_stmt 1 view .LVU484
 363:Core/Src/main.cpp ****   }
 1557              		.loc 1 363 18 is_stmt 0 view .LVU485
 1558 0106 FFF7FEFF 		bl	Error_Handler
 1559              	.LVL90:
 1560              	.L63:
 368:Core/Src/main.cpp ****   }
 1561              		.loc 1 368 5 is_stmt 1 view .LVU486
 368:Core/Src/main.cpp ****   }
 1562              		.loc 1 368 18 is_stmt 0 view .LVU487
 1563 010a FFF7FEFF 		bl	Error_Handler
 1564              	.LVL91:
 1565              	.L64:
 372:Core/Src/main.cpp ****   }
ARM GAS  /tmp/ccIebNMm.s 			page 53


 1566              		.loc 1 372 5 is_stmt 1 view .LVU488
 372:Core/Src/main.cpp ****   }
 1567              		.loc 1 372 18 is_stmt 0 view .LVU489
 1568 010e FFF7FEFF 		bl	Error_Handler
 1569              	.LVL92:
 1570              	.L65:
 376:Core/Src/main.cpp ****   }
 1571              		.loc 1 376 5 is_stmt 1 view .LVU490
 376:Core/Src/main.cpp ****   }
 1572              		.loc 1 376 18 is_stmt 0 view .LVU491
 1573 0112 FFF7FEFF 		bl	Error_Handler
 1574              	.LVL93:
 1575              	.L66:
 387:Core/Src/main.cpp ****   }
 1576              		.loc 1 387 5 is_stmt 1 view .LVU492
 387:Core/Src/main.cpp ****   }
 1577              		.loc 1 387 18 is_stmt 0 view .LVU493
 1578 0116 FFF7FEFF 		bl	Error_Handler
 1579              	.LVL94:
 1580              	.L68:
 1581 011a 00BF     		.align	2
 1582              	.L67:
 1583 011c 00000000 		.word	htim8
 1584 0120 00040140 		.word	1073808384
 1585              		.cfi_endproc
 1586              	.LFE2695:
 1587              		.fnend
 1589              		.section	.text._ZL12MX_I2C1_Initv,"ax",%progbits
 1590              		.align	1
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1595              	_ZL12MX_I2C1_Initv:
 1596              		.fnstart
 1597              	.LFB2693:
 194:Core/Src/main.cpp **** 
 1598              		.loc 1 194 1 is_stmt 1 view -0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602 0000 08B5     		push	{r3, lr}
 1603              		.save {r3, lr}
 1604              		.cfi_def_cfa_offset 8
 1605              		.cfi_offset 3, -8
 1606              		.cfi_offset 14, -4
 203:Core/Src/main.cpp ****   hi2c1.Init.ClockSpeed = 100000;
 1607              		.loc 1 203 3 view .LVU495
 203:Core/Src/main.cpp ****   hi2c1.Init.ClockSpeed = 100000;
 1608              		.loc 1 203 18 is_stmt 0 view .LVU496
 1609 0002 0A48     		ldr	r0, .L73
 1610 0004 0A4B     		ldr	r3, .L73+4
 1611 0006 0360     		str	r3, [r0]
 204:Core/Src/main.cpp ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1612              		.loc 1 204 3 is_stmt 1 view .LVU497
 204:Core/Src/main.cpp ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1613              		.loc 1 204 25 is_stmt 0 view .LVU498
 1614 0008 0A4B     		ldr	r3, .L73+8
ARM GAS  /tmp/ccIebNMm.s 			page 54


 1615 000a 4360     		str	r3, [r0, #4]
 205:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 1616              		.loc 1 205 3 is_stmt 1 view .LVU499
 205:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 1617              		.loc 1 205 24 is_stmt 0 view .LVU500
 1618 000c 0023     		movs	r3, #0
 1619 000e 8360     		str	r3, [r0, #8]
 206:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1620              		.loc 1 206 3 is_stmt 1 view .LVU501
 206:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1621              		.loc 1 206 26 is_stmt 0 view .LVU502
 1622 0010 C360     		str	r3, [r0, #12]
 207:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1623              		.loc 1 207 3 is_stmt 1 view .LVU503
 207:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1624              		.loc 1 207 29 is_stmt 0 view .LVU504
 1625 0012 4FF48042 		mov	r2, #16384
 1626 0016 0261     		str	r2, [r0, #16]
 208:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 1627              		.loc 1 208 3 is_stmt 1 view .LVU505
 208:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 1628              		.loc 1 208 30 is_stmt 0 view .LVU506
 1629 0018 4361     		str	r3, [r0, #20]
 209:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1630              		.loc 1 209 3 is_stmt 1 view .LVU507
 209:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1631              		.loc 1 209 26 is_stmt 0 view .LVU508
 1632 001a 8361     		str	r3, [r0, #24]
 210:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1633              		.loc 1 210 3 is_stmt 1 view .LVU509
 210:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1634              		.loc 1 210 30 is_stmt 0 view .LVU510
 1635 001c C361     		str	r3, [r0, #28]
 211:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1636              		.loc 1 211 3 is_stmt 1 view .LVU511
 211:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1637              		.loc 1 211 28 is_stmt 0 view .LVU512
 1638 001e 0362     		str	r3, [r0, #32]
 212:Core/Src/main.cpp ****   {
 1639              		.loc 1 212 3 is_stmt 1 view .LVU513
 212:Core/Src/main.cpp ****   {
 1640              		.loc 1 212 19 is_stmt 0 view .LVU514
 1641 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1642              	.LVL95:
 212:Core/Src/main.cpp ****   {
 1643              		.loc 1 212 3 discriminator 1 view .LVU515
 1644 0024 00B9     		cbnz	r0, .L72
 220:Core/Src/main.cpp **** 
 1645              		.loc 1 220 1 view .LVU516
 1646 0026 08BD     		pop	{r3, pc}
 1647              	.L72:
 214:Core/Src/main.cpp ****   }
 1648              		.loc 1 214 5 is_stmt 1 view .LVU517
 214:Core/Src/main.cpp ****   }
 1649              		.loc 1 214 18 is_stmt 0 view .LVU518
 1650 0028 FFF7FEFF 		bl	Error_Handler
 1651              	.LVL96:
ARM GAS  /tmp/ccIebNMm.s 			page 55


 1652              	.L74:
 1653              		.align	2
 1654              	.L73:
 1655 002c 00000000 		.word	hi2c1
 1656 0030 00540040 		.word	1073763328
 1657 0034 A0860100 		.word	100000
 1658              		.cfi_endproc
 1659              	.LFE2693:
 1660              		.fnend
 1662              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
 1663              		.align	1
 1664              		.global	_Z18SystemClock_Configv
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1669              	_Z18SystemClock_Configv:
 1670              		.fnstart
 1671              	.LFB2692:
 146:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1672              		.loc 1 146 1 is_stmt 1 view -0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 80
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676 0000 00B5     		push	{lr}
 1677              		.save {lr}
 1678              		.cfi_def_cfa_offset 4
 1679              		.cfi_offset 14, -4
 1680              		.pad #84
 1681 0002 95B0     		sub	sp, sp, #84
 1682              		.cfi_def_cfa_offset 88
 147:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1683              		.loc 1 147 3 view .LVU520
 147:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1684              		.loc 1 147 22 is_stmt 0 view .LVU521
 1685 0004 3422     		movs	r2, #52
 1686 0006 0021     		movs	r1, #0
 1687 0008 07A8     		add	r0, sp, #28
 1688 000a FFF7FEFF 		bl	memset
 1689              	.LVL97:
 148:Core/Src/main.cpp **** 
 1690              		.loc 1 148 3 is_stmt 1 view .LVU522
 148:Core/Src/main.cpp **** 
 1691              		.loc 1 148 22 is_stmt 0 view .LVU523
 1692 000e 0023     		movs	r3, #0
 1693 0010 0293     		str	r3, [sp, #8]
 1694 0012 0393     		str	r3, [sp, #12]
 1695 0014 0493     		str	r3, [sp, #16]
 1696 0016 0593     		str	r3, [sp, #20]
 1697 0018 0693     		str	r3, [sp, #24]
 152:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1698              		.loc 1 152 3 is_stmt 1 view .LVU524
 1699              	.LBB301:
 152:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1700              		.loc 1 152 3 view .LVU525
 1701 001a 0093     		str	r3, [sp]
 152:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1702              		.loc 1 152 3 view .LVU526
ARM GAS  /tmp/ccIebNMm.s 			page 56


 1703 001c 1F4A     		ldr	r2, .L81
 1704 001e 116C     		ldr	r1, [r2, #64]
 1705 0020 41F08051 		orr	r1, r1, #268435456
 1706 0024 1164     		str	r1, [r2, #64]
 152:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1707              		.loc 1 152 3 view .LVU527
 1708 0026 126C     		ldr	r2, [r2, #64]
 1709 0028 02F08052 		and	r2, r2, #268435456
 1710 002c 0092     		str	r2, [sp]
 152:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1711              		.loc 1 152 3 view .LVU528
 1712 002e 009A     		ldr	r2, [sp]
 1713              	.LBE301:
 152:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1714              		.loc 1 152 3 view .LVU529
 153:Core/Src/main.cpp **** 
 1715              		.loc 1 153 3 view .LVU530
 1716              	.LBB302:
 153:Core/Src/main.cpp **** 
 1717              		.loc 1 153 3 view .LVU531
 1718 0030 0193     		str	r3, [sp, #4]
 153:Core/Src/main.cpp **** 
 1719              		.loc 1 153 3 view .LVU532
 1720 0032 1B49     		ldr	r1, .L81+4
 1721 0034 0A68     		ldr	r2, [r1]
 1722 0036 22F44042 		bic	r2, r2, #49152
 1723 003a 42F48042 		orr	r2, r2, #16384
 1724 003e 0A60     		str	r2, [r1]
 153:Core/Src/main.cpp **** 
 1725              		.loc 1 153 3 view .LVU533
 1726 0040 0A68     		ldr	r2, [r1]
 1727 0042 02F44042 		and	r2, r2, #49152
 1728 0046 0192     		str	r2, [sp, #4]
 153:Core/Src/main.cpp **** 
 1729              		.loc 1 153 3 view .LVU534
 1730 0048 019A     		ldr	r2, [sp, #4]
 1731              	.LBE302:
 153:Core/Src/main.cpp **** 
 1732              		.loc 1 153 3 view .LVU535
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1733              		.loc 1 158 3 view .LVU536
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1734              		.loc 1 158 36 is_stmt 0 view .LVU537
 1735 004a 0222     		movs	r2, #2
 1736 004c 0792     		str	r2, [sp, #28]
 159:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1737              		.loc 1 159 3 is_stmt 1 view .LVU538
 159:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1738              		.loc 1 159 30 is_stmt 0 view .LVU539
 1739 004e 0121     		movs	r1, #1
 1740 0050 0A91     		str	r1, [sp, #40]
 160:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1741              		.loc 1 160 3 is_stmt 1 view .LVU540
 160:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1742              		.loc 1 160 41 is_stmt 0 view .LVU541
 1743 0052 1021     		movs	r1, #16
 1744 0054 0B91     		str	r1, [sp, #44]
ARM GAS  /tmp/ccIebNMm.s 			page 57


 161:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1745              		.loc 1 161 3 is_stmt 1 view .LVU542
 161:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1746              		.loc 1 161 34 is_stmt 0 view .LVU543
 1747 0056 0D92     		str	r2, [sp, #52]
 162:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1748              		.loc 1 162 3 is_stmt 1 view .LVU544
 162:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1749              		.loc 1 162 35 is_stmt 0 view .LVU545
 1750 0058 0E93     		str	r3, [sp, #56]
 163:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1751              		.loc 1 163 3 is_stmt 1 view .LVU546
 163:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1752              		.loc 1 163 30 is_stmt 0 view .LVU547
 1753 005a 0F91     		str	r1, [sp, #60]
 164:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1754              		.loc 1 164 3 is_stmt 1 view .LVU548
 164:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1755              		.loc 1 164 30 is_stmt 0 view .LVU549
 1756 005c 4FF4A873 		mov	r3, #336
 1757 0060 1093     		str	r3, [sp, #64]
 165:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1758              		.loc 1 165 3 is_stmt 1 view .LVU550
 165:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1759              		.loc 1 165 30 is_stmt 0 view .LVU551
 1760 0062 0423     		movs	r3, #4
 1761 0064 1193     		str	r3, [sp, #68]
 166:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1762              		.loc 1 166 3 is_stmt 1 view .LVU552
 166:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1763              		.loc 1 166 30 is_stmt 0 view .LVU553
 1764 0066 1292     		str	r2, [sp, #72]
 167:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1765              		.loc 1 167 3 is_stmt 1 view .LVU554
 167:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1766              		.loc 1 167 30 is_stmt 0 view .LVU555
 1767 0068 1392     		str	r2, [sp, #76]
 168:Core/Src/main.cpp ****   {
 1768              		.loc 1 168 3 is_stmt 1 view .LVU556
 168:Core/Src/main.cpp ****   {
 1769              		.loc 1 168 24 is_stmt 0 view .LVU557
 1770 006a 07A8     		add	r0, sp, #28
 1771 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1772              	.LVL98:
 168:Core/Src/main.cpp ****   {
 1773              		.loc 1 168 3 discriminator 1 view .LVU558
 1774 0070 80B9     		cbnz	r0, .L79
 175:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1775              		.loc 1 175 3 is_stmt 1 view .LVU559
 175:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1776              		.loc 1 175 31 is_stmt 0 view .LVU560
 1777 0072 0F23     		movs	r3, #15
 1778 0074 0293     		str	r3, [sp, #8]
 177:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1779              		.loc 1 177 3 is_stmt 1 view .LVU561
 177:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1780              		.loc 1 177 34 is_stmt 0 view .LVU562
ARM GAS  /tmp/ccIebNMm.s 			page 58


 1781 0076 0221     		movs	r1, #2
 1782 0078 0391     		str	r1, [sp, #12]
 178:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1783              		.loc 1 178 3 is_stmt 1 view .LVU563
 178:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1784              		.loc 1 178 35 is_stmt 0 view .LVU564
 1785 007a 0023     		movs	r3, #0
 1786 007c 0493     		str	r3, [sp, #16]
 179:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1787              		.loc 1 179 3 is_stmt 1 view .LVU565
 179:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1788              		.loc 1 179 36 is_stmt 0 view .LVU566
 1789 007e 4FF48052 		mov	r2, #4096
 1790 0082 0592     		str	r2, [sp, #20]
 180:Core/Src/main.cpp **** 
 1791              		.loc 1 180 3 is_stmt 1 view .LVU567
 180:Core/Src/main.cpp **** 
 1792              		.loc 1 180 36 is_stmt 0 view .LVU568
 1793 0084 0693     		str	r3, [sp, #24]
 182:Core/Src/main.cpp ****   {
 1794              		.loc 1 182 3 is_stmt 1 view .LVU569
 182:Core/Src/main.cpp ****   {
 1795              		.loc 1 182 26 is_stmt 0 view .LVU570
 1796 0086 02A8     		add	r0, sp, #8
 1797 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1798              	.LVL99:
 182:Core/Src/main.cpp ****   {
 1799              		.loc 1 182 3 discriminator 1 view .LVU571
 1800 008c 20B9     		cbnz	r0, .L80
 186:Core/Src/main.cpp **** 
 1801              		.loc 1 186 1 view .LVU572
 1802 008e 15B0     		add	sp, sp, #84
 1803              		.cfi_remember_state
 1804              		.cfi_def_cfa_offset 4
 1805              		@ sp needed
 1806 0090 5DF804FB 		ldr	pc, [sp], #4
 1807              	.L79:
 1808              		.cfi_restore_state
 170:Core/Src/main.cpp ****   }
 1809              		.loc 1 170 5 is_stmt 1 view .LVU573
 170:Core/Src/main.cpp ****   }
 1810              		.loc 1 170 18 is_stmt 0 view .LVU574
 1811 0094 FFF7FEFF 		bl	Error_Handler
 1812              	.LVL100:
 1813              	.L80:
 184:Core/Src/main.cpp ****   }
 1814              		.loc 1 184 5 is_stmt 1 view .LVU575
 184:Core/Src/main.cpp ****   }
 1815              		.loc 1 184 18 is_stmt 0 view .LVU576
 1816 0098 FFF7FEFF 		bl	Error_Handler
 1817              	.LVL101:
 1818              	.L82:
 1819              		.align	2
 1820              	.L81:
 1821 009c 00380240 		.word	1073887232
 1822 00a0 00700040 		.word	1073770496
 1823              		.cfi_endproc
ARM GAS  /tmp/ccIebNMm.s 			page 59


 1824              	.LFE2692:
 1825              		.fnend
 1827              		.section	.text._ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3
 1828              		.align	1
 1829              		.weak	_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1834              	_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_:
 1835              		.fnstart
 1836              	.LVL102:
 1837              	.LFB3357:
 1838              		.file 5 "/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h"
   1:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
   3:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // Copyright (C) 2001-2023 Free Software Foundation, Inc.
   4:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** //
   5:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // any later version.
  10:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  11:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  16:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  20:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  25:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** /*
  26:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  *
  27:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  *
  30:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  *
  38:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  *
  39:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  *
  42:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  /tmp/ccIebNMm.s 			page 60


  45:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  */
  50:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  51:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****  */
  55:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  56:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  59:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** # include <type_traits>
  74:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
  75:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201402L
  76:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** # include <bit> // std::__bit_width
  77:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
  78:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 202002L
  79:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** # include <compare>
  80:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
  81:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  82:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  83:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** {
  84:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  85:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
  86:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /*
  87:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  88:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  89:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    */
  90:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  91:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  92:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline int
  93:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  94:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
  95:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  96:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  97:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
  98:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  99:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 100:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 101:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
ARM GAS  /tmp/ccIebNMm.s 			page 61


 102:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 103:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 104:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return 0;
 105:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 106:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       else
 107:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 108:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 109:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 110:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 111:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus < 201103L
 112:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 113:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 114:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 115:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _BoolType>
 116:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __iter_swap
 117:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 118:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static void
 120:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 122:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 123:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    _ValueType1;
 124:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 125:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  *__a = *__b;
 126:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  *__b = __tmp;
 127:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 128:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 129:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 130:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<>
 131:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __iter_swap<true>
 132:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 133:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 134:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static void
 135:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 136:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 137:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 138:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 139:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 140:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif // C++03
 141:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 142:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 143:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 144:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 145:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 146:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 147:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   Nothing.
 148:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 149:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 150:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  iterators themselves.
 151:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 152:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 153:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 154:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline void
 155:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 156:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 157:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 158:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  /tmp/ccIebNMm.s 			page 62


 159:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 160:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 161:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 162:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 163:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus < 201103L
 164:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 165:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_ValueType1;
 166:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 167:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_ValueType2;
 168:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 169:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 170:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				  _ValueType2>)
 171:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 172:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				  _ValueType1>)
 173:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 174:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 175:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_ReferenceType1;
 176:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 177:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_ReferenceType2;
 178:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 179:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 180:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 181:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 182:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #else
 183:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 185:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       swap(*__a, *__b);
 186:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 187:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 188:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 189:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 190:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 191:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 192:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 193:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 194:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 195:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 196:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 197:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 198:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 199:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  The ranges must not overlap.
 200:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 201:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 202:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 203:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _ForwardIterator2
 204:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 205:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 206:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 207:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 208:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 209:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 210:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 211:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 212:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 213:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 214:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 215:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
ARM GAS  /tmp/ccIebNMm.s 			page 63


 216:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __first2;
 217:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 218:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 219:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 220:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 221:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 222:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 223:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 224:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 225:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 226:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 227:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 228:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  preprocessor macro.
 229:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 230:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp>
 231:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 232:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline const _Tp&
 233:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 234:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 235:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 236:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 237:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 238:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (__b < __a)
 239:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return __b;
 240:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __a;
 241:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 242:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 243:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 244:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 245:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 246:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 247:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 248:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 249:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 250:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 251:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 252:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  preprocessor macro.
 253:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 254:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp>
 255:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 256:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline const _Tp&
 257:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 258:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 259:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 260:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 261:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 262:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (__a < __b)
 263:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return __b;
 264:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __a;
 265:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 266:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 267:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 268:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 269:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 270:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 271:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 272:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
ARM GAS  /tmp/ccIebNMm.s 			page 64


 273:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 274:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 275:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 276:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 277:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 278:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 279:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 280:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline const _Tp&
 281:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 282:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 283:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 284:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (__comp(__b, __a))
 285:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return __b;
 286:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __a;
 287:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 288:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 289:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 290:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 291:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 292:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 293:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 294:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 295:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 296:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 297:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 298:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 299:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 300:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 301:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 302:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline const _Tp&
 303:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 304:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 305:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 306:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (__comp(__a, __b))
 307:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return __b;
 308:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __a;
 309:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 310:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 311:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 312:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 313:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Iterator>
 314:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 315:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _Iterator
 316:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 317:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 318:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { return __it; }
 319:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 320:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq>
 321:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _Ite
 322:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __niter_base(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq,
 323:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		 std::random_access_iterator_tag>&);
 324:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 325:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 326:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 327:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 328:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _From, typename _To>
 329:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  /tmp/ccIebNMm.s 			page 65


 330:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _From
 331:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 332:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 333:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 334:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 335:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Iterator>
 336:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 337:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _Iterator
 338:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 339:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { return __res; }
 340:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 341:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 342:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 343:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 344:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 345:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // a for loop with an explicit count.
 346:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 347:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 348:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move
 349:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 350:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 351:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 352:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _OI
 353:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 354:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 355:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 356:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    *__result = *__first;
 357:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 358:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 359:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 360:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 361:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 362:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Category>
 363:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 364:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 365:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 366:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 367:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _OI
 368:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 369:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 370:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 371:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 372:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 373:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 374:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 375:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 376:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 377:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<>
 378:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 379:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 380:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 381:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 382:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _OI
 383:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 384:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 385:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 386:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
ARM GAS  /tmp/ccIebNMm.s 			page 66


 387:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    {
 388:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      *__result = *__first;
 389:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      ++__first;
 390:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      ++__result;
 391:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    }
 392:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 393:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 394:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 395:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _Tp, typename _Up>
 396:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static void
 397:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__assign_one(_Tp* __to, _Up* __from)
 398:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{ *__to = *__from; }
 399:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 400:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 401:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 402:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<>
 403:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 404:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 405:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 406:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 407:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _OI
 408:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 409:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 410:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 411:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 412:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    {
 413:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 414:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      ++__first;
 415:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      ++__result;
 416:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    }
 417:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 418:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 419:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 420:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _Tp, typename _Up>
 421:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static void
 422:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__assign_one(_Tp* __to, _Up* __from)
 423:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{ *__to = std::move(*__from); }
 424:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 425:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 426:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 427:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove>
 428:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 429:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 430:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _Tp, typename _Up>
 431:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 432:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _Up*
 433:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_m(_Tp* __first, _Tp* __last, _Up* __result)
 434:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 435:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 436:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  if (__builtin_expect(_Num > 1, true))
 437:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 438:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  else if (_Num == 1)
 439:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    std::__copy_move<_IsMove, false, random_access_iterator_tag>::
 440:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      __assign_one(__result, __first);
 441:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result + _Num;
 442:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 443:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
ARM GAS  /tmp/ccIebNMm.s 			page 67


 444:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 445:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 446:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 447:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 448:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct _Deque_iterator;
 449:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 450:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   struct _Bit_iterator;
 451:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 452:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 453:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 454:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if _GLIBCXX_HOSTED
 455:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 456:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 457:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _CharT>
 458:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct char_traits;
 459:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 460:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 461:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     class istreambuf_iterator;
 462:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 463:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 464:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     class ostreambuf_iterator;
 465:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 466:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 467:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 468:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 469:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 470:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 471:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 472:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 473:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 474:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 475:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 476:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 477:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 478:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 479:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 480:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				    _CharT*>::__type
 481:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 482:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 483:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 484:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 485:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 486:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __is_char<_CharT>::__value,
 487:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*> >::__type
 488:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a2(
 489:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	istreambuf_iterator<_CharT, char_traits<_CharT> >,
 490:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	istreambuf_iterator<_CharT, char_traits<_CharT> >,
 491:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*>);
 492:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif // HOSTED
 493:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 494:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 495:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 496:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OI
 497:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 498:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 499:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 500:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
ARM GAS  /tmp/ccIebNMm.s 			page 68


 501:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 502:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 503:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 504:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 505:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 506:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 507:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 508:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 509:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 510:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 511:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _OI
 512:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 513:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 514:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   _OI);
 515:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 516:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 517:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 518:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 519:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 520:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 521:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 522:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 523:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 524:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 525:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 526:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 527:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 528:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 529:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 530:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 531:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OI
 532:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 533:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 534:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 535:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 536:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 537:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OI
 538:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 539:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 540:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 541:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 542:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 543:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 544:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 545:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 546:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 547:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 548:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _OI
 549:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 550:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 551:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		  _OI);
 552:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 553:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 554:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 555:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 556:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
 557:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
ARM GAS  /tmp/ccIebNMm.s 			page 69


 558:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 559:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 560:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 561:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 562:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 563:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 564:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 565:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 566:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 567:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 568:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 569:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _OutputIterator
 570:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_n_a(_InputIterator __first, _Size __n, _OutputIterator __result,
 571:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       bool)
 572:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 573:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (__n > 0)
 574:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 575:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  while (true)
 576:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    {
 577:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      *__result = *__first;
 578:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      ++__result;
 579:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      if (--__n > 0)
 580:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		++__first;
 581:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      else
 582:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		break;
 583:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    }
 584:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 585:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __result;
 586:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 587:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 588:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if _GLIBCXX_HOSTED
 589:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _CharT, typename _Size>
 590:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 591:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __is_char<_CharT>::__value, _CharT*>::__type
 592:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_n_a(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 593:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       _Size, _CharT*, bool);
 594:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 595:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _CharT, typename _Size>
 596:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 597:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __is_char<_CharT>::__value,
 598:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*> >::__type
 599:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_n_a(istreambuf_iterator<_CharT, char_traits<_CharT> >, _Size,
 600:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       _GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*>,
 601:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       bool);
 602:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 603:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 604:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 605:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 606:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 607:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 608:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 609:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 610:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   result + (last - first)
 611:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 612:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 613:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 614:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
ARM GAS  /tmp/ccIebNMm.s 			page 70


 615:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 616:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 617:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 618:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 619:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  within [first,last).
 620:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 621:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 622:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 623:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OI
 624:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 625:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 626:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 627:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 628:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 629:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::reference>)
 630:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 631:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 632:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 633:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 634:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 635:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 636:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 637:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 638:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 639:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 640:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 641:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 642:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 643:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   result + (last - first)
 644:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 645:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 646:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 647:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 648:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 649:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 650:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 651:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 652:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  within [first,last).
 653:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 654:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 655:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 656:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OI
 657:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 658:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 659:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 660:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 661:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 662:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type&&>)
 663:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 664:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 665:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 666:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 667:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 668:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 669:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 670:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #else
 671:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
ARM GAS  /tmp/ccIebNMm.s 			page 71


 672:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 673:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 674:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 675:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move_backward
 676:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 677:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 678:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _BI2
 680:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 681:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 682:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  while (__first != __last)
 683:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    *--__result = *--__last;
 684:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 685:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 686:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 687:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 688:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 689:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Category>
 690:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 691:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 692:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 693:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 694:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _BI2
 695:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 696:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 697:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  while (__first != __last)
 698:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 699:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 700:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 701:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 702:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 703:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 704:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<>
 705:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 706:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 707:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 708:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 709:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _BI2
 710:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 711:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 712:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 713:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    __n = __last - __first;
 714:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 715:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    *--__result = *--__last;
 716:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 717:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 718:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 719:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 720:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 721:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<>
 722:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 723:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 724:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 725:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 726:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _BI2
 727:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 728:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
ARM GAS  /tmp/ccIebNMm.s 			page 72


 729:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 730:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    __n = __last - __first;
 731:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 732:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 733:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result;
 734:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 735:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 736:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 737:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 738:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove>
 739:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 740:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 741:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       template<typename _Tp, typename _Up>
 742:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 743:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	static _Up*
 744:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__copy_move_b(_Tp* __first, _Tp* __last, _Up* __result)
 745:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 746:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 747:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  if (__builtin_expect(_Num > 1, true))
 748:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 749:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  else if (_Num == 1)
 750:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    std::__copy_move<_IsMove, false, random_access_iterator_tag>::
 751:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      __assign_one(__result - 1, __first);
 752:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return __result - _Num;
 753:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 754:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     };
 755:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 756:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 757:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 758:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _BI2
 759:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 760:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 761:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 762:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 763:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 764:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 765:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 766:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 767:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 768:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 769:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 770:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 								 __last,
 771:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 								 __result);
 772:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 773:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 774:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 775:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 776:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _BI2
 777:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 778:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 779:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 780:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 781:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 782:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _OI
 783:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 784:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 785:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 			    _OI);
ARM GAS  /tmp/ccIebNMm.s 			page 73


 786:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 787:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 788:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 789:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 790:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a1(
 791:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 792:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 793:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 794:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 795:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 796:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 797:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 798:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 799:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 800:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 801:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 802:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 803:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 804:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OI
 805:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 806:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 807:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 808:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 809:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 810:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 811:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 812:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 813:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 814:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 815:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _OI
 816:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a(
 817:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 818:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 819:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		_OI);
 820:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 821:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 822:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 823:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 824:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 825:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 826:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 827:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<bool _IsMove,
 828:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 829:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 830:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 831:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __copy_move_backward_a(
 832:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 833:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 834:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 835:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 836:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 837:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 838:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 839:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 840:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 841:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 842:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   result - (last - first)
ARM GAS  /tmp/ccIebNMm.s 			page 74


 843:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 844:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 845:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 846:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 847:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 848:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 849:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 850:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 851:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 852:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 853:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 854:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 855:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 856:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _BI2
 857:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 858:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 859:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 860:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 861:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 862:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_BI2,
 863:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::reference>)
 864:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 865:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 866:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 867:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 868:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 869:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 870:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 871:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 872:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 873:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 874:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 875:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 876:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 877:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   result - (last - first)
 878:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 879:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 880:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 881:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 882:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 883:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 884:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 885:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 886:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 887:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 888:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 889:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 890:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 891:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _BI2
 892:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 893:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 894:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
 895:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 896:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 897:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_BI2,
 898:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type&&>)
 899:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
ARM GAS  /tmp/ccIebNMm.s 			page 75


 900:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 901:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 902:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 					       std::__miter_base(__last),
 903:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 					       __result);
 904:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 905:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 906:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 907:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #else
 908:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 909:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 910:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 911:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 912:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 913:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline typename
 914:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 915:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 916:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      const _Tp& __value)
 917:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 918:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 919:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	*__first = __value;
 920:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 921:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 922:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 923:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 924:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline typename
 925:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 926:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 927:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      const _Tp& __value)
 928:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 929:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 930:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 931:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	*__first = __tmp;
 932:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 933:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 934:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 935:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp>
 936:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 937:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline typename
 938:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 939:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 1839              		.loc 5 939 5 is_stmt 1 view -0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 1843              		.loc 5 939 5 is_stmt 0 view .LVU578
 1844 0000 08B5     		push	{r3, lr}
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 3, -8
 1847              		.cfi_offset 14, -4
 940:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
 941:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 1848              		.loc 5 941 17 view .LVU579
 1849 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1850              	.LVL103:
 1851              	.LBB303:
 942:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 943:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
ARM GAS  /tmp/ccIebNMm.s 			page 76


 944:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	{
 945:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  for (; __first != __last; ++__first)
 946:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    *__first = __tmp;
 947:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	  return;
 948:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	}
 949:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
 950:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 1852              		.loc 5 950 7 view .LVU580
 1853 0004 0A1A     		subs	r2, r1, r0
 1854              	.LVL104:
 1855              		.loc 5 950 7 view .LVU581
 1856 0006 00D1     		bne	.L86
 1857              	.LVL105:
 1858              	.L83:
 1859              		.loc 5 950 7 view .LVU582
 1860              	.LBE303:
 951:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 952:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
 1861              		.loc 5 952 5 view .LVU583
 1862 0008 08BD     		pop	{r3, pc}
 1863              	.LVL106:
 1864              	.L86:
 1865              	.LBB304:
 951:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 1866              		.loc 5 951 18 view .LVU584
 1867 000a 1946     		mov	r1, r3
 1868              	.LVL107:
 951:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 1869              		.loc 5 951 18 view .LVU585
 1870 000c FFF7FEFF 		bl	memset
 1871              	.LVL108:
 951:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 1872              		.loc 5 951 18 view .LVU586
 1873              	.LBE304:
 1874              		.loc 5 952 5 view .LVU587
 1875 0010 FAE7     		b	.L83
 1876              		.cfi_endproc
 1877              	.LFE3357:
 1878              		.cantunwind
 1879              		.fnend
 1881              		.section	.text.main,"ax",%progbits
 1882              		.align	1
 1883              		.global	main
 1884              		.syntax unified
 1885              		.thumb
 1886              		.thumb_func
 1888              	main:
 1889              		.fnstart
 1890              	.LFB2689:
  45:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 1891              		.loc 1 45 1 is_stmt 1 view -0
 1892              		.cfi_startproc
 1893              		@ args = 0, pretend = 0, frame = 728
 1894              		@ frame_needed = 0, uses_anonymous_args = 0
 1895 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1896              		.save {r4, r5, r6, r7, lr}
 1897              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccIebNMm.s 			page 77


 1898              		.cfi_offset 4, -20
 1899              		.cfi_offset 5, -16
 1900              		.cfi_offset 6, -12
 1901              		.cfi_offset 7, -8
 1902              		.cfi_offset 14, -4
 1903              		.pad #772
 1904 0002 ADF5417D 		sub	sp, sp, #772
 1905              		.cfi_def_cfa_offset 792
  47:Core/Src/main.cpp ****   fArr3 rpyInitial = {0,0,0};
 1906              		.loc 1 47 3 view .LVU589
  47:Core/Src/main.cpp ****   fArr3 rpyInitial = {0,0,0};
 1907              		.loc 1 47 11 is_stmt 0 view .LVU590
 1908 0006 BEA8     		add	r0, sp, #760
 1909              	.LEHB0:
 1910 0008 FFF7FEFF 		bl	_ZN7StewartC1Ev
 1911              	.LVL109:
 1912              	.LEHE0:
  48:Core/Src/main.cpp ****   fArr3 rpyFinal = {0.314, 0.128, 0.981};
 1913              		.loc 1 48 3 is_stmt 1 view .LVU591
  48:Core/Src/main.cpp ****   fArr3 rpyFinal = {0.314, 0.128, 0.981};
 1914              		.loc 1 48 9 is_stmt 0 view .LVU592
 1915 000c 9FED661A 		vldr.32	s2, .L105
 1916 0010 8DEDBB1A 		vstr.32	s2, [sp, #748]
 1917 0014 8DEDBC1A 		vstr.32	s2, [sp, #752]
 1918 0018 8DEDBD1A 		vstr.32	s2, [sp, #756]
  49:Core/Src/main.cpp ****   fArr6 lengthsInitial = stew.xfmLinPos(rpyInitial);
 1919              		.loc 1 49 3 is_stmt 1 view .LVU593
  49:Core/Src/main.cpp ****   fArr6 lengthsInitial = stew.xfmLinPos(rpyInitial);
 1920              		.loc 1 49 9 is_stmt 0 view .LVU594
 1921 001c 634A     		ldr	r2, .L105+4
 1922 001e B8AB     		add	r3, sp, #736
 1923 0020 07CA     		ldm	r2, {r0, r1, r2}
 1924 0022 83E80700 		stm	r3, {r0, r1, r2}
  50:Core/Src/main.cpp ****   fArr6 lengthsFinal = stew.xfmLinPos(rpyFinal);
 1925              		.loc 1 50 3 is_stmt 1 view .LVU595
  50:Core/Src/main.cpp ****   fArr6 lengthsFinal = stew.xfmLinPos(rpyFinal);
 1926              		.loc 1 50 40 is_stmt 0 view .LVU596
 1927 0026 B0EE410A 		vmov.f32	s0, s2
 1928 002a F0EE410A 		vmov.f32	s1, s2
 1929 002e BEA9     		add	r1, sp, #760
 1930 0030 B2A8     		add	r0, sp, #712
 1931              	.LEHB1:
 1932 0032 FFF7FEFF 		bl	_ZN7Stewart9xfmLinPosESt5arrayIfLj3EE
 1933              	.LVL110:
  51:Core/Src/main.cpp ****   Controller myCtrl;
 1934              		.loc 1 51 3 is_stmt 1 view .LVU597
  51:Core/Src/main.cpp ****   Controller myCtrl;
 1935              		.loc 1 51 38 is_stmt 0 view .LVU598
 1936 0036 9DEDB80A 		vldr.32	s0, [sp, #736]
 1937 003a DDEDB90A 		vldr.32	s1, [sp, #740]
 1938 003e 9DEDBA1A 		vldr.32	s2, [sp, #744]
 1939 0042 BEA9     		add	r1, sp, #760
 1940 0044 ACA8     		add	r0, sp, #688
 1941 0046 FFF7FEFF 		bl	_ZN7Stewart9xfmLinPosESt5arrayIfLj3EE
 1942              	.LVL111:
  52:Core/Src/main.cpp ****   CylGov myCG;
 1943              		.loc 1 52 3 is_stmt 1 view .LVU599
ARM GAS  /tmp/ccIebNMm.s 			page 78


  52:Core/Src/main.cpp ****   CylGov myCG;
 1944              		.loc 1 52 14 is_stmt 0 view .LVU600
 1945 004a A6A8     		add	r0, sp, #664
 1946 004c FFF7FEFF 		bl	_ZN10ControllerC1Ev
 1947              	.LVL112:
 1948              	.LEHE1:
  53:Core/Src/main.cpp ****   DistGov myDG(hi2c1);
 1949              		.loc 1 53 3 is_stmt 1 view .LVU601
  53:Core/Src/main.cpp ****   DistGov myDG(hi2c1);
 1950              		.loc 1 53 10 is_stmt 0 view .LVU602
 1951 0050 A0A8     		add	r0, sp, #640
 1952              	.LEHB2:
 1953 0052 FFF7FEFF 		bl	_ZN6CylGovC1Ev
 1954              	.LVL113:
  54:Core/Src/main.cpp **** 
 1955              		.loc 1 54 3 is_stmt 1 view .LVU603
  54:Core/Src/main.cpp **** 
 1956              		.loc 1 54 21 is_stmt 0 view .LVU604
 1957 0056 5649     		ldr	r1, .L105+8
 1958 0058 9AA8     		add	r0, sp, #616
 1959 005a FFF7FEFF 		bl	_ZN7DistGovC1ER17I2C_HandleTypeDef
 1960              	.LVL114:
  65:Core/Src/main.cpp **** 
 1961              		.loc 1 65 3 is_stmt 1 view .LVU605
  65:Core/Src/main.cpp **** 
 1962              		.loc 1 65 11 is_stmt 0 view .LVU606
 1963 005e FFF7FEFF 		bl	HAL_Init
 1964              	.LVL115:
  72:Core/Src/main.cpp **** 
 1965              		.loc 1 72 3 is_stmt 1 view .LVU607
  72:Core/Src/main.cpp **** 
 1966              		.loc 1 72 21 is_stmt 0 view .LVU608
 1967 0062 FFF7FEFF 		bl	_Z18SystemClock_Configv
 1968              	.LVL116:
  79:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 1969              		.loc 1 79 3 is_stmt 1 view .LVU609
  79:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 1970              		.loc 1 79 15 is_stmt 0 view .LVU610
 1971 0066 FFF7FEFF 		bl	_ZL12MX_GPIO_Initv
 1972              	.LVL117:
  80:Core/Src/main.cpp ****   MX_TIM1_Init();
 1973              		.loc 1 80 3 is_stmt 1 view .LVU611
  80:Core/Src/main.cpp ****   MX_TIM1_Init();
 1974              		.loc 1 80 22 is_stmt 0 view .LVU612
 1975 006a FFF7FEFF 		bl	_ZL19MX_USART2_UART_Initv
 1976              	.LVL118:
  81:Core/Src/main.cpp ****   MX_TIM8_Init();
 1977              		.loc 1 81 3 is_stmt 1 view .LVU613
  81:Core/Src/main.cpp ****   MX_TIM8_Init();
 1978              		.loc 1 81 15 is_stmt 0 view .LVU614
 1979 006e FFF7FEFF 		bl	_ZL12MX_TIM1_Initv
 1980              	.LVL119:
  82:Core/Src/main.cpp ****   MX_I2C1_Init();
 1981              		.loc 1 82 3 is_stmt 1 view .LVU615
  82:Core/Src/main.cpp ****   MX_I2C1_Init();
 1982              		.loc 1 82 15 is_stmt 0 view .LVU616
 1983 0072 FFF7FEFF 		bl	_ZL12MX_TIM8_Initv
ARM GAS  /tmp/ccIebNMm.s 			page 79


 1984              	.LVL120:
  83:Core/Src/main.cpp **** 
 1985              		.loc 1 83 3 is_stmt 1 view .LVU617
  83:Core/Src/main.cpp **** 
 1986              		.loc 1 83 15 is_stmt 0 view .LVU618
 1987 0076 FFF7FEFF 		bl	_ZL12MX_I2C1_Initv
 1988              	.LVL121:
  86:Core/Src/main.cpp ****   //HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_ALL);
 1989              		.loc 1 86 3 is_stmt 1 view .LVU619
  86:Core/Src/main.cpp ****   //HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_ALL);
 1990              		.loc 1 86 20 is_stmt 0 view .LVU620
 1991 007a 0021     		movs	r1, #0
 1992 007c 4D48     		ldr	r0, .L105+12
 1993 007e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1994              	.LVL122:
  88:Core/Src/main.cpp ****   std::array<char,500> uart_buf;
 1995              		.loc 1 88 3 is_stmt 1 view .LVU621
  88:Core/Src/main.cpp ****   std::array<char,500> uart_buf;
 1996              		.loc 1 88 9 is_stmt 0 view .LVU622
 1997 0082 94AC     		add	r4, sp, #592
 1998 0084 B2AD     		add	r5, sp, #712
 1999 0086 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2000 0088 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2001 008a 95E80300 		ldm	r5, {r0, r1}
 2002 008e 84E80300 		stm	r4, {r0, r1}
  89:Core/Src/main.cpp ****   unsigned int uart_buf_len = 0;
 2003              		.loc 1 89 3 is_stmt 1 view .LVU623
  90:Core/Src/main.cpp ****   
 2004              		.loc 1 90 3 view .LVU624
 2005              	.LVL123:
  96:Core/Src/main.cpp ****   long timeLast = 0;
 2006              		.loc 1 96 3 view .LVU625
  97:Core/Src/main.cpp ****   const long interval = 30000;
 2007              		.loc 1 97 3 view .LVU626
  98:Core/Src/main.cpp ****   while(true)
 2008              		.loc 1 98 3 view .LVU627
  97:Core/Src/main.cpp ****   const long interval = 30000;
 2009              		.loc 1 97 8 is_stmt 0 view .LVU628
 2010 0092 0027     		movs	r7, #0
 2011              	.LVL124:
 2012              	.L93:
  99:Core/Src/main.cpp ****   {
 2013              		.loc 1 99 3 is_stmt 1 view .LVU629
 2014              	.LBB305:
 101:Core/Src/main.cpp ****     if(timeNow-timeLast > interval) {
 2015              		.loc 1 101 5 view .LVU630
 101:Core/Src/main.cpp ****     if(timeNow-timeLast > interval) {
 2016              		.loc 1 101 26 is_stmt 0 view .LVU631
 2017 0094 FFF7FEFF 		bl	HAL_GetTick
 2018              	.LVL125:
 102:Core/Src/main.cpp ****       switch(myState) {
 2019              		.loc 1 102 5 is_stmt 1 view .LVU632
 102:Core/Src/main.cpp ****       switch(myState) {
 2020              		.loc 1 102 15 is_stmt 0 view .LVU633
 2021 0098 C21B     		subs	r2, r0, r7
 102:Core/Src/main.cpp ****       switch(myState) {
 2022              		.loc 1 102 5 view .LVU634
ARM GAS  /tmp/ccIebNMm.s 			page 80


 2023 009a 47F23053 		movw	r3, #30000
 2024 009e 9A42     		cmp	r2, r3
 2025 00a0 0CDD     		ble	.L88
 103:Core/Src/main.cpp ****         case 0:
 2026              		.loc 1 103 7 is_stmt 1 view .LVU635
 103:Core/Src/main.cpp ****         case 0:
 2027              		.loc 1 103 14 is_stmt 0 view .LVU636
 2028 00a2 454B     		ldr	r3, .L105+16
 2029 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103:Core/Src/main.cpp ****         case 0:
 2030              		.loc 1 103 7 view .LVU637
 2031 00a6 012B     		cmp	r3, #1
 2032 00a8 0DD0     		beq	.L89
 2033 00aa 022B     		cmp	r3, #2
 2034 00ac 12D0     		beq	.L90
 2035 00ae C3B9     		cbnz	r3, .L96
 104:Core/Src/main.cpp ****           lengthsFinal[0]=27;
 2036              		.loc 1 104 9 is_stmt 1 view .LVU638
 105:Core/Src/main.cpp ****           myState++;
 2037              		.loc 1 105 11 view .LVU639
 105:Core/Src/main.cpp ****           myState++;
 2038              		.loc 1 105 26 is_stmt 0 discriminator 1 view .LVU640
 2039 00b0 424A     		ldr	r2, .L105+20
 2040 00b2 AC92     		str	r2, [sp, #688]	@ float
 106:Core/Src/main.cpp ****           break;        
 2041              		.loc 1 106 11 is_stmt 1 view .LVU641
 106:Core/Src/main.cpp ****           break;        
 2042              		.loc 1 106 18 is_stmt 0 view .LVU642
 2043 00b4 0133     		adds	r3, r3, #1
 2044 00b6 404A     		ldr	r2, .L105+16
 2045 00b8 1370     		strb	r3, [r2]
 107:Core/Src/main.cpp ****         case 1:
 2046              		.loc 1 107 11 is_stmt 1 view .LVU643
 117:Core/Src/main.cpp ****     }
 2047              		.loc 1 117 16 is_stmt 0 view .LVU644
 2048 00ba 0746     		mov	r7, r0
 2049              	.LVL126:
 2050              	.L88:
 120:Core/Src/main.cpp ****     fArr6 lStep = myCtrl.step(lengthsFinal,lengths);
 2051              		.loc 1 120 5 is_stmt 1 view .LVU645
 120:Core/Src/main.cpp ****     fArr6 lStep = myCtrl.step(lengthsFinal,lengths);
 2052              		.loc 1 120 33 is_stmt 0 view .LVU646
 2053 00bc 9AA9     		add	r1, sp, #616
 2054 00be 0AA8     		add	r0, sp, #40
 2055              	.LVL127:
 120:Core/Src/main.cpp ****     fArr6 lStep = myCtrl.step(lengthsFinal,lengths);
 2056              		.loc 1 120 33 view .LVU647
 2057 00c0 FFF7FEFF 		bl	_ZN7DistGov13readDistancesEv
 2058              	.LVL128:
 2059 00c4 0FE0     		b	.L102
 2060              	.LVL129:
 2061              	.L89:
 108:Core/Src/main.cpp ****           lengthsFinal[0]=17;
 2062              		.loc 1 108 9 is_stmt 1 view .LVU648
 109:Core/Src/main.cpp ****           myState++;
 2063              		.loc 1 109 11 view .LVU649
 109:Core/Src/main.cpp ****           myState++;
ARM GAS  /tmp/ccIebNMm.s 			page 81


 2064              		.loc 1 109 26 is_stmt 0 discriminator 1 view .LVU650
 2065 00c6 3E4A     		ldr	r2, .L105+24
 2066 00c8 AC92     		str	r2, [sp, #688]	@ float
 110:Core/Src/main.cpp ****           break;
 2067              		.loc 1 110 11 is_stmt 1 view .LVU651
 110:Core/Src/main.cpp ****           break;
 2068              		.loc 1 110 18 is_stmt 0 view .LVU652
 2069 00ca 0133     		adds	r3, r3, #1
 2070 00cc 3A4A     		ldr	r2, .L105+16
 2071 00ce 1370     		strb	r3, [r2]
 111:Core/Src/main.cpp ****         case 2:
 2072              		.loc 1 111 11 is_stmt 1 view .LVU653
 117:Core/Src/main.cpp ****     }
 2073              		.loc 1 117 16 is_stmt 0 view .LVU654
 2074 00d0 0746     		mov	r7, r0
 2075              	.LVL130:
 111:Core/Src/main.cpp ****         case 2:
 2076              		.loc 1 111 11 view .LVU655
 2077 00d2 F3E7     		b	.L88
 2078              	.LVL131:
 2079              	.L90:
 112:Core/Src/main.cpp ****           lengthsFinal[0]=22;
 2080              		.loc 1 112 9 is_stmt 1 view .LVU656
 113:Core/Src/main.cpp ****           myState = 0;
 2081              		.loc 1 113 11 view .LVU657
 113:Core/Src/main.cpp ****           myState = 0;
 2082              		.loc 1 113 26 is_stmt 0 discriminator 1 view .LVU658
 2083 00d4 3B4B     		ldr	r3, .L105+28
 2084 00d6 AC93     		str	r3, [sp, #688]	@ float
 114:Core/Src/main.cpp ****           break;
 2085              		.loc 1 114 11 is_stmt 1 view .LVU659
 114:Core/Src/main.cpp ****           break;
 2086              		.loc 1 114 19 is_stmt 0 view .LVU660
 2087 00d8 374B     		ldr	r3, .L105+16
 2088 00da 0022     		movs	r2, #0
 2089 00dc 1A70     		strb	r2, [r3]
 115:Core/Src/main.cpp ****       }
 2090              		.loc 1 115 11 is_stmt 1 view .LVU661
 117:Core/Src/main.cpp ****     }
 2091              		.loc 1 117 16 is_stmt 0 view .LVU662
 2092 00de 0746     		mov	r7, r0
 2093              	.LVL132:
 115:Core/Src/main.cpp ****       }
 2094              		.loc 1 115 11 view .LVU663
 2095 00e0 ECE7     		b	.L88
 2096              	.LVL133:
 2097              	.L96:
 103:Core/Src/main.cpp ****         case 0:
 2098              		.loc 1 103 7 view .LVU664
 2099 00e2 0746     		mov	r7, r0
 2100              	.LVL134:
 103:Core/Src/main.cpp ****         case 0:
 2101              		.loc 1 103 7 view .LVU665
 2102 00e4 EAE7     		b	.L88
 2103              	.LVL135:
 2104              	.L102:
 120:Core/Src/main.cpp ****     fArr6 lStep = myCtrl.step(lengthsFinal,lengths);
ARM GAS  /tmp/ccIebNMm.s 			page 82


 2105              		.loc 1 120 33 view .LVU666
 2106 00e6 94AC     		add	r4, sp, #592
 2107 00e8 0AAD     		add	r5, sp, #40
 2108 00ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2109 00ec 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2110 00ee 95E80300 		ldm	r5, {r0, r1}
 2111 00f2 84E80300 		stm	r4, {r0, r1}
 121:Core/Src/main.cpp ****     myCG.setDutyCycles(lStep);
 2112              		.loc 1 121 5 is_stmt 1 view .LVU667
 121:Core/Src/main.cpp ****     myCG.setDutyCycles(lStep);
 2113              		.loc 1 121 30 is_stmt 0 view .LVU668
 2114 00f6 04AC     		add	r4, sp, #16
 2115 00f8 94AD     		add	r5, sp, #592
 2116 00fa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2117 00fc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2118 00fe 95E80300 		ldm	r5, {r0, r1}
 2119 0102 84E80300 		stm	r4, {r0, r1}
 2120 0106 AEAB     		add	r3, sp, #696
 2121 0108 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2122 010a 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 2123 010e ACAB     		add	r3, sp, #688
 2124 0110 0CCB     		ldm	r3, {r2, r3}
 2125 0112 A6A9     		add	r1, sp, #664
 2126 0114 11A8     		add	r0, sp, #68
 2127 0116 FFF7FEFF 		bl	_ZN10Controller4stepESt5arrayIfLj6EES1_
 2128              	.LVL136:
 122:Core/Src/main.cpp **** 
 2129              		.loc 1 122 5 is_stmt 1 view .LVU669
 122:Core/Src/main.cpp **** 
 2130              		.loc 1 122 23 is_stmt 0 view .LVU670
 2131 011a 11A9     		add	r1, sp, #68
 2132 011c A0A8     		add	r0, sp, #640
 2133 011e FFF7FEFF 		bl	_ZN6CylGov13setDutyCyclesERKSt5arrayIfLj6EE
 2134              	.LVL137:
 2135 0122 28E0     		b	.L103
 2136              	.LVL138:
 2137              	.L92:
 2138              	.LBB306:
 125:Core/Src/main.cpp ****     }
 2139              		.loc 1 125 7 is_stmt 1 view .LVU671
 2140              	.LBB307:
 2141              	.LBI307:
 201:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 202:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	__glibcxx_requires_subscript(__n);
 203:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return _M_elems[__n];
 204:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
 205:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 206:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 207:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr const_reference
 208:/usr/arm-none-eabi/include/c++/13.2.0/array ****       operator[](size_type __n) const noexcept
 209:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 210:/usr/arm-none-eabi/include/c++/13.2.0/array **** #if __cplusplus >= 201402L
 211:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	__glibcxx_requires_subscript(__n);
 212:/usr/arm-none-eabi/include/c++/13.2.0/array **** #endif
 213:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return _M_elems[__n];
 214:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
 215:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
ARM GAS  /tmp/ccIebNMm.s 			page 83


 216:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reference
 217:/usr/arm-none-eabi/include/c++/13.2.0/array ****       at(size_type __n)
 218:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 219:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	if (__n >= _Nm)
 220:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	  std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 221:/usr/arm-none-eabi/include/c++/13.2.0/array **** 					    ">= _Nm (which is %zu)"),
 222:/usr/arm-none-eabi/include/c++/13.2.0/array **** 					__n, _Nm);
 223:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return _M_elems[__n];
 224:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
 225:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 226:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr const_reference
 227:/usr/arm-none-eabi/include/c++/13.2.0/array ****       at(size_type __n) const
 228:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 229:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	// Result of conditional expression must be an lvalue so use
 230:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	// boolean ? lvalue : (throw-expr, lvalue)
 231:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return __n < _Nm ? _M_elems[__n]
 232:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	  : (std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 233:/usr/arm-none-eabi/include/c++/13.2.0/array **** 					       ">= _Nm (which is %zu)"),
 234:/usr/arm-none-eabi/include/c++/13.2.0/array **** 					   __n, _Nm),
 235:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	     _M_elems[__n]);
 236:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
 237:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 238:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 239:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reference
 240:/usr/arm-none-eabi/include/c++/13.2.0/array ****       front() noexcept
 241:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 242:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	__glibcxx_requires_nonempty();
 243:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return _M_elems[(size_type)0];
 244:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
 245:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 246:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 247:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr const_reference
 248:/usr/arm-none-eabi/include/c++/13.2.0/array ****       front() const noexcept
 249:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 250:/usr/arm-none-eabi/include/c++/13.2.0/array **** #if __cplusplus >= 201402L
 251:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	__glibcxx_requires_nonempty();
 252:/usr/arm-none-eabi/include/c++/13.2.0/array **** #endif
 253:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return _M_elems[(size_type)0];
 254:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
 255:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 256:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 257:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR reference
 258:/usr/arm-none-eabi/include/c++/13.2.0/array ****       back() noexcept
 259:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 260:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	__glibcxx_requires_nonempty();
 261:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return _M_elems[_Nm - 1];
 262:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
 263:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 264:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__]]
 265:/usr/arm-none-eabi/include/c++/13.2.0/array ****       constexpr const_reference
 266:/usr/arm-none-eabi/include/c++/13.2.0/array ****       back() const noexcept
 267:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 268:/usr/arm-none-eabi/include/c++/13.2.0/array **** #if __cplusplus >= 201402L
 269:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	__glibcxx_requires_nonempty();
 270:/usr/arm-none-eabi/include/c++/13.2.0/array **** #endif
 271:/usr/arm-none-eabi/include/c++/13.2.0/array **** 	return _M_elems[_Nm - 1];
 272:/usr/arm-none-eabi/include/c++/13.2.0/array ****       }
ARM GAS  /tmp/ccIebNMm.s 			page 84


 273:/usr/arm-none-eabi/include/c++/13.2.0/array **** 
 274:/usr/arm-none-eabi/include/c++/13.2.0/array ****       [[__nodiscard__, __gnu__::__const__, __gnu__::__always_inline__]]
 275:/usr/arm-none-eabi/include/c++/13.2.0/array ****       _GLIBCXX17_CONSTEXPR pointer
 276:/usr/arm-none-eabi/include/c++/13.2.0/array ****       data() noexcept
 2142              		.loc 3 276 7 view .LVU672
 2143              		.loc 3 276 7 is_stmt 0 view .LVU673
 2144              	.LBE307:
 2145              	.LBB308:
 2146              	.LBI308:
 2147              		.loc 3 276 7 is_stmt 1 view .LVU674
 2148              		.loc 3 276 7 is_stmt 0 view .LVU675
 2149              	.LBE308:
 125:Core/Src/main.cpp ****     }
 2150              		.loc 1 125 55 discriminator 2 view .LVU676
 2151 0124 17A8     		add	r0, sp, #92
 2152 0126 FFF7FEFF 		bl	strlen
 2153              	.LVL139:
 2154 012a 0546     		mov	r5, r0
 2155              	.LVL140:
 2156              	.LBB309:
 2157              	.LBI309:
 200:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 2158              		.loc 3 200 7 is_stmt 1 view .LVU677
 200:/usr/arm-none-eabi/include/c++/13.2.0/array ****       {
 2159              		.loc 3 200 7 is_stmt 0 view .LVU678
 2160              	.LBE309:
 125:Core/Src/main.cpp ****     }
 2161              		.loc 1 125 30 discriminator 4 view .LVU679
 2162 012c C0AB     		add	r3, sp, #768
 2163 012e 03EB8403 		add	r3, r3, r4, lsl #2
 2164 0132 53F8B00C 		ldr	r0, [r3, #-176]	@ float
 2165 0136 FFF7FEFF 		bl	__aeabi_f2d
 2166              	.LVL141:
 2167 013a 0246     		mov	r2, r0
 2168 013c 0B46     		mov	r3, r1
 2169 013e 2249     		ldr	r1, .L105+32
 2170 0140 17A8     		add	r0, sp, #92
 2171 0142 2844     		add	r0, r0, r5
 2172 0144 FFF7FEFF 		bl	sprintf
 2173              	.LVL142:
 125:Core/Src/main.cpp ****     }
 2174              		.loc 1 125 20 discriminator 5 view .LVU680
 2175 0148 0644     		add	r6, r6, r0
 2176              	.LVL143:
 124:Core/Src/main.cpp ****       uart_buf_len += sprintf(uart_buf.data() + strlen(uart_buf.data()), "%3.2f ", lengths[j]);
 2177              		.loc 1 124 5 is_stmt 1 discriminator 3 view .LVU681
 2178 014a 0134     		adds	r4, r4, #1
 2179              	.LVL144:
 124:Core/Src/main.cpp ****       uart_buf_len += sprintf(uart_buf.data() + strlen(uart_buf.data()), "%3.2f ", lengths[j]);
 2180              		.loc 1 124 5 is_stmt 0 discriminator 3 view .LVU682
 2181 014c E4B2     		uxtb	r4, r4
 2182              	.LVL145:
 2183              	.L91:
 124:Core/Src/main.cpp ****       uart_buf_len += sprintf(uart_buf.data() + strlen(uart_buf.data()), "%3.2f ", lengths[j]);
 2184              		.loc 1 124 27 is_stmt 1 discriminator 1 view .LVU683
 2185 014e 052C     		cmp	r4, #5
 2186 0150 E8D9     		bls	.L92
ARM GAS  /tmp/ccIebNMm.s 			page 85


 2187              	.LBE306:
 127:Core/Src/main.cpp ****     //uart_buf_len = sprintf(uart_buf.data(), "%3.2f %i %i \r\n", lStep[0], HAL_GPIO_ReadPin(GPIOA,
 2188              		.loc 1 127 5 view .LVU684
 2189              	.LVL146:
 2190              	.LBB310:
 2191              	.LBI310:
 2192              		.loc 3 276 7 view .LVU685
 2193              		.loc 3 276 7 is_stmt 0 view .LVU686
 2194              	.LBE310:
 2195              	.LBB311:
 2196              	.LBI311:
 2197              		.loc 3 276 7 is_stmt 1 view .LVU687
 2198              		.loc 3 276 7 is_stmt 0 view .LVU688
 2199              	.LBE311:
 127:Core/Src/main.cpp ****     //uart_buf_len = sprintf(uart_buf.data(), "%3.2f %i %i \r\n", lStep[0], HAL_GPIO_ReadPin(GPIOA,
 2200              		.loc 1 127 53 discriminator 2 view .LVU689
 2201 0152 17AC     		add	r4, sp, #92
 2202              	.LVL147:
 127:Core/Src/main.cpp ****     //uart_buf_len = sprintf(uart_buf.data(), "%3.2f %i %i \r\n", lStep[0], HAL_GPIO_ReadPin(GPIOA,
 2203              		.loc 1 127 53 discriminator 2 view .LVU690
 2204 0154 2046     		mov	r0, r4
 2205 0156 FFF7FEFF 		bl	strlen
 2206              	.LVL148:
 127:Core/Src/main.cpp ****     //uart_buf_len = sprintf(uart_buf.data(), "%3.2f %i %i \r\n", lStep[0], HAL_GPIO_ReadPin(GPIOA,
 2207              		.loc 1 127 28 discriminator 3 view .LVU691
 2208 015a 2218     		adds	r2, r4, r0
 2209 015c 1B4B     		ldr	r3, .L105+36
 2210 015e 1988     		ldrh	r1, [r3]	@ unaligned
 2211 0160 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2212 0162 2152     		strh	r1, [r4, r0]	@ unaligned
 2213 0164 9370     		strb	r3, [r2, #2]
 127:Core/Src/main.cpp ****     //uart_buf_len = sprintf(uart_buf.data(), "%3.2f %i %i \r\n", lStep[0], HAL_GPIO_ReadPin(GPIOA,
 2214              		.loc 1 127 18 discriminator 4 view .LVU692
 2215 0166 B21C     		adds	r2, r6, #2
 2216              	.LVL149:
 129:Core/Src/main.cpp ****     uart_buf_len = 0;
 2217              		.loc 1 129 5 is_stmt 1 view .LVU693
 2218              	.LBB312:
 2219              	.LBI312:
 2220              		.loc 3 276 7 view .LVU694
 2221              		.loc 3 276 7 is_stmt 0 view .LVU695
 2222              	.LBE312:
 129:Core/Src/main.cpp ****     uart_buf_len = 0;
 2223              		.loc 1 129 22 discriminator 1 view .LVU696
 2224 0168 6423     		movs	r3, #100
 2225 016a 92B2     		uxth	r2, r2
 2226              	.LVL150:
 129:Core/Src/main.cpp ****     uart_buf_len = 0;
 2227              		.loc 1 129 22 discriminator 1 view .LVU697
 2228 016c 2146     		mov	r1, r4
 2229 016e 1848     		ldr	r0, .L105+40
 2230 0170 FFF7FEFF 		bl	HAL_UART_Transmit
 2231              	.LVL151:
 2232 0174 02E0     		b	.L104
 2233              	.LVL152:
 2234              	.L103:
 2235              	.LBB313:
ARM GAS  /tmp/ccIebNMm.s 			page 86


 124:Core/Src/main.cpp ****       uart_buf_len += sprintf(uart_buf.data() + strlen(uart_buf.data()), "%3.2f ", lengths[j]);
 2236              		.loc 1 124 18 view .LVU698
 2237 0176 0024     		movs	r4, #0
 2238              	.LBE313:
 122:Core/Src/main.cpp **** 
 2239              		.loc 1 122 23 view .LVU699
 2240 0178 2646     		mov	r6, r4
 2241 017a E8E7     		b	.L91
 2242              	.LVL153:
 2243              	.L104:
 130:Core/Src/main.cpp ****     uart_buf.fill((char)0);
 2244              		.loc 1 130 5 is_stmt 1 view .LVU700
 131:Core/Src/main.cpp ****     HAL_Delay(25);
 2245              		.loc 1 131 5 view .LVU701
 131:Core/Src/main.cpp ****     HAL_Delay(25);
 2246              		.loc 1 131 19 is_stmt 0 view .LVU702
 2247 017c 0023     		movs	r3, #0
 2248 017e 8DF8FF32 		strb	r3, [sp, #767]
 2249              	.LVL154:
 2250              	.LBB314:
 2251              	.LBI314:
 115:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { std::fill_n(begin(), size(), __u); }
 2252              		.loc 3 115 7 is_stmt 1 view .LVU703
 2253              	.LBB315:
 2254              	.LBI315:
 126:/usr/arm-none-eabi/include/c++/13.2.0/array ****       { return iterator(data()); }
 2255              		.loc 3 126 7 view .LVU704
 2256              	.LBB316:
 2257              	.LBI316:
 2258              		.loc 3 276 7 view .LVU705
 2259              		.loc 3 276 7 is_stmt 0 view .LVU706
 2260              	.LBE316:
 2261              	.LBE315:
 2262              	.LBB317:
 2263              	.LBI317:
 953:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 954:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 955:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 956:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline void
 957:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 958:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 959:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      const _Tp& __value)
 960:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 961:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 962:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Tp, typename _VTp>
 963:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     void
 964:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 965:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 966:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	      const _VTp&);
 967:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 968:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   _GLIBCXX20_CONSTEXPR
 969:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   void
 970:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __fill_a1(_GLIBCXX_STD_C::_Bit_iterator, _GLIBCXX_STD_C::_Bit_iterator,
 971:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	    const bool&);
 972:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 973:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _FIte, typename _Tp>
 974:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  /tmp/ccIebNMm.s 			page 87


 975:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline void
 976:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 977:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 978:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 979:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 980:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     void
 981:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 982:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 983:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	     const _Tp&);
 984:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 985:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
 986:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 987:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 988:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 989:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 990:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 991:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   Nothing.
 992:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
 993:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 994:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 995:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 996:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
 997:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 998:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 999:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline void
1000:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
1001:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
1002:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       // concept requirements
1003:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1004:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 				  _ForwardIterator>)
1005:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
1006:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1007:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       std::__fill_a(__first, __last, __value);
1008:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
1009:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1010:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // Used by fill_n, generate_n, etc. to convert _Size to an integral type:
1011:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR int
1012:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(int __n) { return __n; }
1013:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned
1014:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(unsigned __n) { return __n; }
1015:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long
1016:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(long __n) { return __n; }
1017:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned long
1018:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(unsigned long __n) { return __n; }
1019:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
1020:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(long long __n) { return __n; }
1021:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned long long
1022:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(unsigned long long __n) { return __n; }
1023:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1024:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_0)
1025:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_0
1026:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_0 __n) { return __n; }
1027:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_0
1028:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_0 __n) { return __n; }
1029:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1030:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_1)
1031:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_1
ARM GAS  /tmp/ccIebNMm.s 			page 88


1032:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_1 __n) { return __n; }
1033:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_1
1034:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_1 __n) { return __n; }
1035:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1036:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_2)
1037:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_2
1038:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_2 __n) { return __n; }
1039:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_2
1040:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_2 __n) { return __n; }
1041:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1042:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_3)
1043:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_3
1044:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_3 __n) { return __n; }
1045:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_3
1046:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_3 __n) { return __n; }
1047:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1048:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1049:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
1050:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(float __n) { return (long long)__n; }
1051:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
1052:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(double __n) { return (long long)__n; }
1053:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
1054:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(long double __n) { return (long long)__n; }
1055:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128)
1056:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __extension__ inline _GLIBCXX_CONSTEXPR long long
1057:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   __size_to_integer(__float128 __n) { return (long long)__n; }
1058:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1059:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1060:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1061:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1062:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline typename
1063:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
1064:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)
1065:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
1066:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       for (; __n > 0; --__n, (void) ++__first)
1067:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	*__first = __value;
1068:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __first;
1069:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
1070:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1071:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1072:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1073:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline typename
1074:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
1075:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)
1076:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
1077:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       const _Tp __tmp = __value;
1078:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       for (; __n > 0; --__n, (void) ++__first)
1079:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	*__first = __tmp;
1080:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __first;
1081:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
1082:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1083:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Size,
1084:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	   typename _Tp>
1085:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
1086:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_n_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>& __first,
1087:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       _Size __n, const _Tp& __value,
1088:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       std::input_iterator_tag);
ARM GAS  /tmp/ccIebNMm.s 			page 89


1089:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1090:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1091:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1092:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OutputIterator
1093:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1094:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       std::output_iterator_tag)
1095:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
1096:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
1097:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1098:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1099:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __fill_n_a1(__first, __n, __value);
1100:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
1101:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1102:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1103:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1104:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OutputIterator
1105:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1106:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       std::input_iterator_tag)
1107:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
1108:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
1109:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1110:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1111:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __fill_n_a1(__first, __n, __value);
1112:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
1113:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1114:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1115:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1116:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OutputIterator
1117:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1118:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       std::random_access_iterator_tag)
1119:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     {
1120:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #if __cplusplus >= 201103L
1121:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1122:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** #endif
1123:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       if (__n <= 0)
1124:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	return __first;
1125:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1126:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       __glibcxx_requires_can_increment(__first, __n);
1127:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1128:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __value);
1129:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****       return __first + __n;
1130:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     }
1131:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
1132:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   /**
1133:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
1134:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
1135:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __first  An output iterator.
1136:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __n      The count of copies to perform.
1137:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
1138:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  @return   The iterator at first+n.
1139:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
1140:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
1141:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
1142:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
1143:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *
1144:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****    *  If @p __n is negative, the function does nothing.
1145:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   */
ARM GAS  /tmp/ccIebNMm.s 			page 90


1146:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1147:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // DR 865. More algorithms that throw away information
1148:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   // DR 426. search_n(), fill_n(), and generate_n() with negative n
1149:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
1150:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1151:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     inline _OI
1152:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 2264              		.loc 5 1152 5 is_stmt 1 view .LVU707
 2265              	.LBB318:
 2266              	.LBI318:
1117:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 	       std::random_access_iterator_tag)
 2267              		.loc 5 1117 5 view .LVU708
 2268              	.LBB319:
 2269              	.LBB320:
 2270              	.LBI320:
 976:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 2271              		.loc 5 976 5 view .LVU709
 2272              	.LBB321:
 977:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 2273              		.loc 5 977 21 is_stmt 0 view .LVU710
 2274 0182 0DF2FF22 		addw	r2, sp, #767
 2275              	.LVL155:
 977:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 2276              		.loc 5 977 21 view .LVU711
 2277 0186 94A9     		add	r1, sp, #592
 2278              	.LVL156:
 977:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 2279              		.loc 5 977 21 view .LVU712
 2280 0188 2046     		mov	r0, r4
 2281 018a FFF7FEFF 		bl	_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_
 2282              	.LVL157:
 977:/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_algobase.h **** 
 2283              		.loc 5 977 21 view .LVU713
 2284              	.LBE321:
 2285              	.LBE320:
 2286              	.LBE319:
 2287              	.LBE318:
 2288              	.LBE317:
 2289              	.LBE314:
 132:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 2290              		.loc 1 132 5 is_stmt 1 view .LVU714
 132:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 2291              		.loc 1 132 14 is_stmt 0 view .LVU715
 2292 018e 1920     		movs	r0, #25
 2293 0190 FFF7FEFF 		bl	HAL_Delay
 2294              	.LVL158:
 2295              	.LEHE2:
 2296 0194 7EE7     		b	.L93
 2297              	.LVL159:
 2298              	.L99:
 132:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 2299              		.loc 1 132 14 view .LVU716
 2300              	.LBE305:
 139:Core/Src/main.cpp **** 
 2301              		.loc 1 139 1 view .LVU717
 2302 0196 A6A8     		add	r0, sp, #664
 2303 0198 FFF7FEFF 		bl	_ZN10ControllerD1Ev
ARM GAS  /tmp/ccIebNMm.s 			page 91


 2304              	.LVL160:
 2305              	.L95:
 2306 019c BEA8     		add	r0, sp, #760
 2307 019e FFF7FEFF 		bl	_ZN7StewartD1Ev
 2308              	.LVL161:
 2309              	.LEHB3:
 2310 01a2 FFF7FEFF 		bl	__cxa_end_cleanup
 2311              	.LVL162:
 2312              	.LEHE3:
 2313              	.L98:
 2314 01a6 F9E7     		b	.L95
 2315              	.L106:
 2316              		.align	2
 2317              	.L105:
 2318 01a8 00000000 		.word	0
 2319 01ac 00000000 		.word	.LANCHOR0
 2320 01b0 00000000 		.word	hi2c1
 2321 01b4 00000000 		.word	htim1
 2322 01b8 00000000 		.word	myState
 2323 01bc 0000D841 		.word	1104674816
 2324 01c0 00008841 		.word	1099431936
 2325 01c4 0000B041 		.word	1102053376
 2326 01c8 00000000 		.word	.LC1
 2327 01cc 08000000 		.word	.LC2
 2328 01d0 00000000 		.word	huart2
 2329              		.cfi_endproc
 2330              	.LFE2689:
 2331              		.global	__gxx_personality_v0
 2332              		.personality	__gxx_personality_v0
 2333              		.handlerdata
 2334              	.LLSDA2689:
 2335 0008 FF       		.byte	0xff
 2336 0009 FF       		.byte	0xff
 2337 000a 01       		.byte	0x1
 2338 000b 14       		.uleb128 .LLSDACSE2689-.LLSDACSB2689
 2339              	.LLSDACSB2689:
 2340 000c 08       		.uleb128 .LEHB0-.LFB2689
 2341 000d 04       		.uleb128 .LEHE0-.LEHB0
 2342 000e 00       		.uleb128 0
 2343 000f 00       		.uleb128 0
 2344 0010 32       		.uleb128 .LEHB1-.LFB2689
 2345 0011 1E       		.uleb128 .LEHE1-.LEHB1
 2346 0012 A603     		.uleb128 .L98-.LFB2689
 2347 0014 00       		.uleb128 0
 2348 0015 52       		.uleb128 .LEHB2-.LFB2689
 2349 0016 C202     		.uleb128 .LEHE2-.LEHB2
 2350 0018 9603     		.uleb128 .L99-.LFB2689
 2351 001a 00       		.uleb128 0
 2352 001b A203     		.uleb128 .LEHB3-.LFB2689
 2353 001d 04       		.uleb128 .LEHE3-.LEHB3
 2354 001e 00       		.uleb128 0
 2355 001f 00       		.uleb128 0
 2356              	.LLSDACSE2689:
 2357              		.section	.text.main
 2358              		.fnend
 2360              		.section	.text._GLOBAL__sub_I_hi2c1,"ax",%progbits
 2361              		.align	1
ARM GAS  /tmp/ccIebNMm.s 			page 92


 2362              		.syntax unified
 2363              		.thumb
 2364              		.thumb_func
 2366              	_GLOBAL__sub_I_hi2c1:
 2367              		.fnstart
 2368              	.LFB3377:
 2369              		.loc 1 522 1 is_stmt 1 view -0
 2370              		.cfi_startproc
 2371              		@ args = 0, pretend = 0, frame = 0
 2372              		@ frame_needed = 0, uses_anonymous_args = 0
 2373 0000 08B5     		push	{r3, lr}
 2374              		.cfi_def_cfa_offset 8
 2375              		.cfi_offset 3, -8
 2376              		.cfi_offset 14, -4
 2377              		.loc 1 522 1 is_stmt 0 view .LVU719
 2378 0002 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0v
 2379              	.LVL163:
 2380 0006 08BD     		pop	{r3, pc}
 2381              		.cfi_endproc
 2382              	.LFE3377:
 2383              		.cantunwind
 2384              		.fnend
 2386              		.section	.init_array,"aw",%init_array
 2387              		.align	2
 2388 0000 00000000 		.word	_GLOBAL__sub_I_hi2c1(target1)
 2389              		.global	myState
 2390              		.section	.bss.myState,"aw",%nobits
 2393              	myState:
 2394 0000 00       		.space	1
 2395              		.global	htim8
 2396              		.section	.bss.htim8,"aw",%nobits
 2397              		.align	2
 2400              	htim8:
 2401 0000 00000000 		.space	72
 2401      00000000 
 2401      00000000 
 2401      00000000 
 2401      00000000 
 2402              		.global	htim1
 2403              		.section	.bss.htim1,"aw",%nobits
 2404              		.align	2
 2407              	htim1:
 2408 0000 00000000 		.space	72
 2408      00000000 
 2408      00000000 
 2408      00000000 
 2408      00000000 
 2409              		.global	huart2
 2410              		.section	.bss.huart2,"aw",%nobits
 2411              		.align	2
 2414              	huart2:
 2415 0000 00000000 		.space	68
 2415      00000000 
 2415      00000000 
 2415      00000000 
 2415      00000000 
 2416              		.global	hi2c1
ARM GAS  /tmp/ccIebNMm.s 			page 93


 2417              		.section	.bss.hi2c1,"aw",%nobits
 2418              		.align	2
 2421              	hi2c1:
 2422 0000 00000000 		.space	84
 2422      00000000 
 2422      00000000 
 2422      00000000 
 2422      00000000 
 2423              		.section	.bss._ZL19ROTATION_COMPONENTS,"aw",%nobits
 2424              		.align	2
 2427              	_ZL19ROTATION_COMPONENTS:
 2428 0000 00000000 		.space	27
 2428      00000000 
 2428      00000000 
 2428      00000000 
 2428      00000000 
 2429              		.section	.bss._ZL10ROTATION_Z,"aw",%nobits
 2430              		.align	2
 2433              	_ZL10ROTATION_Z:
 2434 0000 00000000 		.space	9
 2434      00000000 
 2434      00
 2435              		.section	.bss._ZL10ROTATION_Y,"aw",%nobits
 2436              		.align	2
 2439              	_ZL10ROTATION_Y:
 2440 0000 00000000 		.space	9
 2440      00000000 
 2440      00
 2441              		.section	.bss._ZL10ROTATION_X,"aw",%nobits
 2442              		.align	2
 2445              	_ZL10ROTATION_X:
 2446 0000 00000000 		.space	9
 2446      00000000 
 2446      00
 2447              		.section	.rodata
 2448              		.align	2
 2449              		.set	.LANCHOR0,. + 0
 2450              	.LC0:
 2451 0000 9CC4A03E 		.word	1050723484
 2452 0004 6F12033E 		.word	1040388719
 2453 0008 D1227B3F 		.word	1065034449
 2454              		.text
 2455              	.Letext0:
 2456              		.file 6 "/usr/arm-none-eabi/include/c++/13.2.0/cmath"
 2457              		.file 7 "/usr/arm-none-eabi/include/c++/13.2.0/type_traits"
 2458              		.file 8 "/usr/arm-none-eabi/include/c++/13.2.0/bits/stl_iterator_base_types.h"
 2459              		.file 9 "/usr/arm-none-eabi/include/c++/13.2.0/debug/debug.h"
 2460              		.file 10 "/usr/arm-none-eabi/include/c++/13.2.0/bits/std_abs.h"
 2461              		.file 11 "/usr/arm-none-eabi/include/c++/13.2.0/cstdint"
 2462              		.file 12 "/usr/arm-none-eabi/include/c++/13.2.0/cwchar"
 2463              		.file 13 "/usr/arm-none-eabi/include/c++/13.2.0/bits/exception_ptr.h"
 2464              		.file 14 "/usr/arm-none-eabi/include/c++/13.2.0/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h
 2465              		.file 15 "/usr/arm-none-eabi/include/c++/13.2.0/clocale"
 2466              		.file 16 "/usr/arm-none-eabi/include/c++/13.2.0/cstdlib"
 2467              		.file 17 "/usr/arm-none-eabi/include/c++/13.2.0/cstdio"
 2468              		.file 18 "/usr/arm-none-eabi/include/c++/13.2.0/cstddef"
 2469              		.file 19 "/usr/arm-none-eabi/include/c++/13.2.0/cwctype"
ARM GAS  /tmp/ccIebNMm.s 			page 94


 2470              		.file 20 "/usr/arm-none-eabi/include/c++/13.2.0/bits/charconv.h"
 2471              		.file 21 "/usr/arm-none-eabi/include/c++/13.2.0/bits/predefined_ops.h"
 2472              		.file 22 "/usr/lib/gcc/arm-none-eabi/13.2.0/include/stddef.h"
 2473              		.file 23 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2474              		.file 24 "/usr/arm-none-eabi/include/sys/_types.h"
 2475              		.file 25 "/usr/arm-none-eabi/include/sys/reent.h"
 2476              		.file 26 "/usr/arm-none-eabi/include/sys/lock.h"
 2477              		.file 27 "/usr/arm-none-eabi/include/math.h"
 2478              		.file 28 "/usr/arm-none-eabi/include/stdlib.h"
 2479              		.file 29 "/usr/arm-none-eabi/include/c++/13.2.0/math.h"
 2480              		.file 30 "/usr/lib/gcc/arm-none-eabi/13.2.0/include/stdarg.h"
 2481              		.file 31 "/usr/arm-none-eabi/include/stdio.h"
 2482              		.file 32 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2483              		.file 33 "/usr/arm-none-eabi/include/stdint.h"
 2484              		.file 34 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2485              		.file 35 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2486              		.file 36 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2487              		.file 37 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2488              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2489              		.file 39 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2490              		.file 40 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2491              		.file 41 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2492              		.file 42 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2493              		.file 43 "/usr/arm-none-eabi/include/wchar.h"
 2494              		.file 44 "/usr/arm-none-eabi/include/locale.h"
 2495              		.file 45 "/usr/arm-none-eabi/include/wctype.h"
 2496              		.file 46 "Application/Include/controller.h"
 2497              		.file 47 "Application/Include/stewart.h"
 2498              		.file 48 "Intermediate/include/CylCtrlInterf.h"
 2499              		.file 49 "Intermediate/include/i2cInterf.h"
 2500              		.file 50 "Intermediate/include/distanceInterf.h"
 2501              		.file 51 "Core/Inc/pins.h"
 2502              		.file 52 "Application/Include/distGovernor.h"
 2503              		.file 53 "Application/Include/cylGovernor.h"
 2504              		.file 54 "Core/Inc/main.h"
 2505              		.file 55 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2506              		.file 56 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2507              		.file 57 "/usr/arm-none-eabi/include/string.h"
 2508              		.file 58 "/usr/arm-none-eabi/include/c++/13.2.0/bits/memory_resource.h"
 2509              		.file 59 "/usr/arm-none-eabi/include/c++/13.2.0/system_error"
 2510              		.file 60 "<built-in>"
ARM GAS  /tmp/ccIebNMm.s 			page 95


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccIebNMm.s:21     .text._Z41__static_initialization_and_destruction_0v:00000000 $t
     /tmp/ccIebNMm.s:26     .text._Z41__static_initialization_and_destruction_0v:00000000 _Z41__static_initialization_and_destruction_0v
     /tmp/ccIebNMm.s:528    .text._Z41__static_initialization_and_destruction_0v:00000084 $d
     /tmp/ccIebNMm.s:2445   .bss._ZL10ROTATION_X:00000000 _ZL10ROTATION_X
     /tmp/ccIebNMm.s:2439   .bss._ZL10ROTATION_Y:00000000 _ZL10ROTATION_Y
     /tmp/ccIebNMm.s:2433   .bss._ZL10ROTATION_Z:00000000 _ZL10ROTATION_Z
     /tmp/ccIebNMm.s:2427   .bss._ZL19ROTATION_COMPONENTS:00000000 _ZL19ROTATION_COMPONENTS
.ARM.exidx.text._Z41__static_initialization_and_destruction_0v:00000000 $d
     /tmp/ccIebNMm.s:538    .text._ZL12MX_GPIO_Initv:00000000 $t
     /tmp/ccIebNMm.s:543    .text._ZL12MX_GPIO_Initv:00000000 _ZL12MX_GPIO_Initv
     /tmp/ccIebNMm.s:766    .text._ZL12MX_GPIO_Initv:000000f8 $d
.ARM.exidx.text._ZL12MX_GPIO_Initv:00000000 $d
     /tmp/ccIebNMm.s:775    .rodata._Z12printlengthsSt5arrayIfLj6EE.str1.4:00000000 $d
     /tmp/ccIebNMm.s:782    .text._Z12printlengthsSt5arrayIfLj6EE:00000000 $t
     /tmp/ccIebNMm.s:788    .text._Z12printlengthsSt5arrayIfLj6EE:00000000 _Z12printlengthsSt5arrayIfLj6EE
     /tmp/ccIebNMm.s:911    .text._Z12printlengthsSt5arrayIfLj6EE:0000006c $d
     /tmp/ccIebNMm.s:2414   .bss.huart2:00000000 huart2
.ARM.extab.text._Z12printlengthsSt5arrayIfLj6EE:00000000 $d
.ARM.exidx.text._Z12printlengthsSt5arrayIfLj6EE:00000000 $d
     /tmp/ccIebNMm.s:919    .text.Error_Handler:00000000 $t
     /tmp/ccIebNMm.s:925    .text.Error_Handler:00000000 Error_Handler
    .ARM.exidx.text.Error_Handler:00000000 $d
     /tmp/ccIebNMm.s:959    .text._ZL19MX_USART2_UART_Initv:00000000 $t
     /tmp/ccIebNMm.s:964    .text._ZL19MX_USART2_UART_Initv:00000000 _ZL19MX_USART2_UART_Initv
     /tmp/ccIebNMm.s:1021   .text._ZL19MX_USART2_UART_Initv:0000002c $d
.ARM.extab.text._ZL19MX_USART2_UART_Initv:00000000 $d
.ARM.exidx.text._ZL19MX_USART2_UART_Initv:00000000 $d
     /tmp/ccIebNMm.s:1028   .text._ZL12MX_TIM1_Initv:00000000 $t
     /tmp/ccIebNMm.s:1033   .text._ZL12MX_TIM1_Initv:00000000 _ZL12MX_TIM1_Initv
     /tmp/ccIebNMm.s:1293   .text._ZL12MX_TIM1_Initv:00000104 $d
     /tmp/ccIebNMm.s:2407   .bss.htim1:00000000 htim1
.ARM.exidx.text._ZL12MX_TIM1_Initv:00000000 $d
     /tmp/ccIebNMm.s:1300   .text._ZL12MX_TIM8_Initv:00000000 $t
     /tmp/ccIebNMm.s:1305   .text._ZL12MX_TIM8_Initv:00000000 _ZL12MX_TIM8_Initv
     /tmp/ccIebNMm.s:1583   .text._ZL12MX_TIM8_Initv:0000011c $d
     /tmp/ccIebNMm.s:2400   .bss.htim8:00000000 htim8
.ARM.exidx.text._ZL12MX_TIM8_Initv:00000000 $d
     /tmp/ccIebNMm.s:1590   .text._ZL12MX_I2C1_Initv:00000000 $t
     /tmp/ccIebNMm.s:1595   .text._ZL12MX_I2C1_Initv:00000000 _ZL12MX_I2C1_Initv
     /tmp/ccIebNMm.s:1655   .text._ZL12MX_I2C1_Initv:0000002c $d
     /tmp/ccIebNMm.s:2421   .bss.hi2c1:00000000 hi2c1
.ARM.extab.text._ZL12MX_I2C1_Initv:00000000 $d
.ARM.exidx.text._ZL12MX_I2C1_Initv:00000000 $d
     /tmp/ccIebNMm.s:1663   .text._Z18SystemClock_Configv:00000000 $t
     /tmp/ccIebNMm.s:1669   .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
     /tmp/ccIebNMm.s:1821   .text._Z18SystemClock_Configv:0000009c $d
.ARM.exidx.text._Z18SystemClock_Configv:00000000 $d
     /tmp/ccIebNMm.s:1828   .text._ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_:00000000 $t
     /tmp/ccIebNMm.s:1834   .text._ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_:00000000 _ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_
.ARM.exidx.text._ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_:00000000 $d
     /tmp/ccIebNMm.s:1882   .text.main:00000000 $t
     /tmp/ccIebNMm.s:1888   .text.main:00000000 main
     /tmp/ccIebNMm.s:2318   .text.main:000001a8 $d
     /tmp/ccIebNMm.s:2393   .bss.myState:00000000 myState
             .ARM.extab.text.main:00000000 $d
ARM GAS  /tmp/ccIebNMm.s 			page 96


             .ARM.exidx.text.main:00000000 $d
     /tmp/ccIebNMm.s:2361   .text._GLOBAL__sub_I_hi2c1:00000000 $t
     /tmp/ccIebNMm.s:2366   .text._GLOBAL__sub_I_hi2c1:00000000 _GLOBAL__sub_I_hi2c1
.ARM.exidx.text._GLOBAL__sub_I_hi2c1:00000000 $d
     /tmp/ccIebNMm.s:2387   .init_array:00000000 $d
     /tmp/ccIebNMm.s:2394   .bss.myState:00000000 $d
     /tmp/ccIebNMm.s:2397   .bss.htim8:00000000 $d
     /tmp/ccIebNMm.s:2404   .bss.htim1:00000000 $d
     /tmp/ccIebNMm.s:2411   .bss.huart2:00000000 $d
     /tmp/ccIebNMm.s:2418   .bss.hi2c1:00000000 $d
     /tmp/ccIebNMm.s:2424   .bss._ZL19ROTATION_COMPONENTS:00000000 $d
     /tmp/ccIebNMm.s:2430   .bss._ZL10ROTATION_Z:00000000 $d
     /tmp/ccIebNMm.s:2436   .bss._ZL10ROTATION_Y:00000000 $d
     /tmp/ccIebNMm.s:2442   .bss._ZL10ROTATION_X:00000000 $d
     /tmp/ccIebNMm.s:2448   .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_unwind_cpp_pr0
__aeabi_f2d
strlen
sprintf
HAL_UART_Transmit
__aeabi_unwind_cpp_pr1
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_I2C_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
_ZN7StewartC1Ev
_ZN7Stewart9xfmLinPosESt5arrayIfLj3EE
_ZN10ControllerC1Ev
_ZN6CylGovC1Ev
_ZN7DistGovC1ER17I2C_HandleTypeDef
HAL_Init
HAL_TIM_PWM_Start
HAL_GetTick
_ZN7DistGov13readDistancesEv
_ZN10Controller4stepESt5arrayIfLj6EES1_
_ZN6CylGov13setDutyCyclesERKSt5arrayIfLj6EE
HAL_Delay
_ZN10ControllerD1Ev
_ZN7StewartD1Ev
__cxa_end_cleanup
__gxx_personality_v0
